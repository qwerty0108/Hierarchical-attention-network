text,stars
I20090127-2000; ; The ANT files generated by the fat JAR exporter contain a Built-By attribute. This is non-standard and does not show up when the JAR is generated by the wizard; so it should also not show up in the script.,3
Build: 20020607; J9 VM 20020531; IVE 20020606; JCLMax 20020606; ; I get a NPE every time I try to ; set my default JRE when I have launched Eclipse with J9.  Note that there are no JREs detected when ; you launch with J9.; ; When I debugged this; the NPE happened on line 439.  The local variable ; oldDefault was null.; ; !ENTRY org.eclipse.ui 4 4 Jun 10; 2002 16:02:22.876; !MESSAGE ; Unhandled exception caught in event loop.; !ENTRY org.eclipse.ui 4 0 Jun 10; 2002 ; 16:02:22.876; !MESSAGE java.lang.NullPointerException; !STACK ; 0; java.lang.NullPointerException; ; Stack trace:;    java/lang/Throwable.<init>()V;    ; java/lang/Throwable.<init>(Ljava/lang/String;)V;    ; java/lang/NullPointerException.<init>(Ljava/lang/String;)V;    ; org/eclipse/jdt/internal/debug/ui/launcher/VMPreferencePage.commitVMInstalls()V;    ; org/eclipse/jdt/internal/debug/ui/launcher/VMPreferencePage.performOk()Z;    ; org/eclipse/jface/preference/PreferenceDialog.okPressed()V;    ; org/eclipse/jface/preference/PreferenceDialog.buttonPressed(I)V;    ; org/eclipse/ui/internal/dialogs/WorkbenchPreferenceDialog.buttonPressed(I)V;    ; org/eclipse/jface/dialogs/Dialog$1.widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V;  ;   ; org/eclipse/swt/widgets/TypedListener.handleEvent(Lorg/eclipse/swt/widgets/Event;)V;  ;   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V;    ; org/eclipse/swt/widgets/Widget.sendEvent(Lorg/eclipse/swt/widgets/Event;)V;    ; org/eclipse/swt/widgets/Display.runDeferredEvents()Z;    ; org/eclipse/swt/widgets/Display.readAndDispatch()Z;    ; org/eclipse/jface/window/Window.runEventLoop(Lorg/eclipse/swt/widgets/Shell;)V;    ; org/eclipse/jface/window/Window.open()I;    ; org/eclipse/ui/internal/OpenPreferencesAction.run()V;    ; org/eclipse/jface/action/Action.runWithEvent(Lorg/eclipse/swt/widgets/Event;)V;    ; org/eclipse/jface/action/ActionContributionItem.handleWidgetSelection(Lorg/eclipse/swt/widgets/Event;)V;  ;   ; org/eclipse/jface/action/ActionContributionItem.handleWidgetEvent(Lorg/eclipse/swt/widgets/Event;)V;  ;   ; org/eclipse/jface/action/ActionContributionItem.access$0(Lorg/eclipse/jface/action/ActionContributionItem;Lorg/eclipse/swt/widgets/Event;)V;  ;   ; org/eclipse/jface/action/ActionContributionItem$ActionListener.handleEvent(Lorg/eclipse/swt/widgets/Event;)V;  ;   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V;    ; org/eclipse/swt/widgets/Widget.sendEvent(Lorg/eclipse/swt/widgets/Event;)V;    ; org/eclipse/swt/widgets/Display.runDeferredEvents()Z;    ; org/eclipse/swt/widgets/Display.readAndDispatch()Z;    ; org/eclipse/ui/internal/Workbench.runEventLoop()V;    ; org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;;    ; org/eclipse/core/internal/boot/InternalBootLoader.run(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;;  ;   ; org/eclipse/core/boot/BootLoader.run(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;;  ;   ; java/lang/reflect/AccessibleObject.invokeL(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;;  ;   ; java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;;  ;   org/eclipse/core/launcher/Main.basicRun([Ljava/lang/String;)Ljava/lang/Object;;    ; org/eclipse/core/launcher/Main.run([Ljava/lang/String;)Ljava/lang/Object;;    ; org/eclipse/core/launcher/Main.main([Ljava/lang/String;)V,2
"20060410; ; Look at the following code with the (recovered) AST view:; ; - in the AST View double click the block node of the initializer:;   > its source range does end in the middle of the second statement; ; Add Olivier as CC as this might be related to the latest addition of incomplete ExpressionStatement; ; package p1.sub1;; ; import java.io.File;; ; public class C2 {; 	{; 		new Thread();; 		File.pathSeparator;; 	}; }",3
I forgot closing an /* */ comment at the end of a Java source file (the comment ; was placed outside the top level class code).; ; The eclipse Java editor did not mark that error and also the class icon in the ; class browser did not indicate an error.; ; (However; the package browser indicated that the package contains an error and ; at runtime an compilation error occured when I accessed the class via Java ; reflection.); ; With kind regards; Dirk Petzoldt,3
M5; ; Currently the user has to select the method name. Would be better if the ; refactoring will work if the cursor is inside the methods signature.,3
"Hi;; ; Using eclipse-SDK-3.1RC3-win32 in a multithreaded application. Have problem ; when trying debug the source code.; ; Have tried with older version of Eclipse (RC1 and M7) but nothing changed.; ; !SESSION 2005-06-21 20:52:46.761 -----------------------------------------------; eclipse.buildId=I20050617-1618; java.version=1.5.0_02; java.vendor=Sun Microsystems Inc.; BootLoader constants: OS=win32; ARCH=x86; WS=win32; NL=sv_SE; Command-line arguments:  -os win32 -ws win32 -arch x86; ; !ENTRY org.eclipse.jdt.debug 4 120 2005-06-21 21:05:22.147; !MESSAGE Exception processing async thread queue; !SUBENTRY 1 org.eclipse.jdt.debug 4 120 2005-06-21 21:05:22.147; !MESSAGE Exception processing async thread queue; !STACK 0; java.lang.NullPointerException; 	at ; org.eclipse.jdt.internal.debug.ui.JavaDetailFormattersManager.getJavaProject; (JavaDetailFormattersManager.java:206); 	at ; org.eclipse.jdt.internal.debug.ui.JavaDetailFormattersManager.getCompiledExpress; ion(JavaDetailFormattersManager.java:312); 	at ; org.eclipse.jdt.internal.debug.ui.JavaDetailFormattersManager.resolveFormatter; (JavaDetailFormattersManager.java:156); 	at ; org.eclipse.jdt.internal.debug.ui.JavaDetailFormattersManager.access$0; (JavaDetailFormattersManager.java:149); 	at org.eclipse.jdt.internal.debug.ui.JavaDetailFormattersManager$4.run; (JavaDetailFormattersManager.java:137); 	at org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run; (JDIThread.java:2446); 	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76); ; !ENTRY org.eclipse.jdt.debug 4 120 2005-06-21 21:23:40.206; !MESSAGE Exception processing async thread queue; !SUBENTRY 1 org.eclipse.jdt.debug 4 120 2005-06-21 21:23:40.206; !MESSAGE Exception processing async thread queue; !STACK 0; java.lang.NullPointerException; 	at ; org.eclipse.jdt.internal.debug.ui.JavaDetailFormattersManager.getJavaProject; (JavaDetailFormattersManager.java:206); 	at ; org.eclipse.jdt.internal.debug.ui.JavaDetailFormattersManager.getCompiledExpress; ion(JavaDetailFormattersManager.java:312); 	at ; org.eclipse.jdt.internal.debug.ui.JavaDetailFormattersManager.resolveFormatter; (JavaDetailFormattersManager.java:156); 	at ; org.eclipse.jdt.internal.debug.ui.JavaDetailFormattersManager.access$0; (JavaDetailFormattersManager.java:149); 	at org.eclipse.jdt.internal.debug.ui.JavaDetailFormattersManager$4.run; (JavaDetailFormattersManager.java:137); 	at org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run; (JDIThread.java:2446); 	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)",3
Build F3; .Open a java file. For example; one with the line;     static Display display;; .Hover the mouse over display. A tooltip correctly shows up.; .Hover the mouse over the blank space following display; (on the same line). ; The tooltip will show up but it should not.,3
Build: I20040112; ; The plugin.xml file for JDT UI contains the string:; ; org.eclipse.ui.defauktAcceleratorConfiguration; ; Note that the configuration id is spelled incorrectly.  Here is the complete key; binding definition:; ;       <keyBinding;             platform=carbon;             string=Command+Shift+G;             scope=org.eclipse.ui.globalScope;            ; command=org.eclipse.jdt.ui.edit.text.java.search.references.in.workspace;             configuration=org.eclipse.ui.defauktAcceleratorConfiguration>;       </keyBinding>,3
I use eclipse 2.1 it is fine. I use 2003-04-22; it create invalid byte code:; ; java.lang.VerifyError: (class: [.....] Illegal target of jump or branch,3
"If I want to step in a debug session; the first of each of F5; F6; F7 and F8 gets ignored.  The second press and all following work as expected.  This happens once; every time I restart eclipse.; ; I am able to reproduce with a very simply program:; ; public class Test {; 	public static void main(String[] args) {; 		Test t = new Test();; 		t.init();; 	}; 	; 	public void init() {; 		System.out.println(init);; 	}; }; ; Set a breakpoint anywhere.  Then press any step key shortcut and the first press will be ignored.; ; Ive am able to reproduce this in 3.6 M2; M3 and M4.  I didnt try with an older 3.6.  It works properly for 3.5.1",2
Build ID: 200503110845; ; Steps To Reproduce:; 1. Go to the Libraries tab on the Java Build Path page of a projects properties dialog.; 2.  Add a variable build path entry (which corresponds to a folder) to the list; then edit it.; 3.  Hit the Extension button.; 4.  In the dialog that appears; the OK button is disabled when more than one jar file is selected.  The help file says that multiple selection is allowed.; ; ; More information:,3
Build ID: Build id: M20070212-1330; ; Steps To Reproduce:; With compiler compliance level 5.0;; ; public Set<String> getTypedSet(); {;   return true ? Collections.emptySet() : null;; }; ; leads to Type mismatch: cannot convert from Set<Object> to Set<String>.; ; ; More information:; ; public Set<String> getTypedSet(); {;   return Collections.emptySet();; }; ; works.,3
JDIDebugModel#createClassPrepareBreakpoint() has two parameters charStart and; charEnd. Their values are correctly set in the creation of the breakpoint; but; there is no method to access these values.,3
"I20060704-0800; ; Given:; package test;; public class E {; 	private int ba r() {return 0;}; 	public void foo(int[] ints) {; 		for^(int i = 0; max = ints.length; b= bar(); i < max; i++) {; 			System.out.println(ints[i] + b);; 		}; 	}; }; 1. _Select_ space at ^; 2. Ctrl-1; Is:; java.lang.NullPointerException; 	at org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation$3.visit(ConvertForLoopOperation.java:726); 	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:236); 	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2466); 	at org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation.doInferCollectionFromExpression(ConvertForLoopOperation.java:715); 	at org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation.doInferCollectionFromInitializers(ConvertForLoopOperation.java:697); 	at org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation.doInferCollection(ConvertForLoopOperation.java:639); 	at org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation.arrayCanBeInferred(ConvertForLoopOperation.java:416); 	at org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation.satisfiesPreconditions(ConvertForLoopOperation.java:188); 	at org.eclipse.jdt.internal.corext.fix.ControlStatementsFix.createConvertForLoopToEnhancedFix(ControlStatementsFix.java:294); 	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getConvertForLoopProposal(QuickAssistProcessor.java:1150); 	at org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor.getAssists(QuickAssistProcessor.java:166); 	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeAssistCollector.safeRun(JavaCorrectionProcessor.java:369); 	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:307); 	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37); 	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:297); 	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectAssists(JavaCorrectionProcessor.java:473); 	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectProposals(JavaCorrectionProcessor.java:255); 	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeQuickAssistProposals(JavaCorrectionProcessor.java:211); 	at org.eclipse.jface.text.quickassist.QuickAssistAssistant$ContentAssistProcessor.computeCompletionProposals(QuickAssistAssistant.java:64); 	at org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:1733); 	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:476); 	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$17(CompletionProposalPopup.java:473); 	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$2.run(CompletionProposalPopup.java:408); 	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67); 	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:402); 	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1562); 	at org.eclipse.jface.text.quickassist.QuickAssistAssistant.showPossibleQuickAssists(QuickAssistAssistant.java:117); 	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionAssistant.showPossibleQuickAssists(JavaCorrectionAssistant.java:176); ...",3
Build ID: I20070116-1510; ; Open logical structure preference page.; Use the edit button to edit the code of a logical structure.; When the edit dialog is closed; the code viewer does not update.; ; The code viewer will update if selection changes.,3
When Im writing a line like this:; ; out.println( Habseligkeiten );; ; there should be a suggestion in the quick fix to insert a static import like; ; import static java.lang.System.out;,3
Performing a quick fix that causes a new method to be added to a class under ; pessimistic source control does not correctly call validateEdit. Instead; the ; class is opened in the java editor; the editor is marked dirty; but the file is ; not checked out of source control.,3
When adding or modifying User Libraries I cant get certain settings to stick. ; I currently have 9 user defined libraries and in total 18 JAR files. When I try ; and change one of the libraries to be a system library and OK the dialog and go ; back in; the setting doesnt stick. I also had the experience of adding a ; couple of JARS to a user defined library and upon returning to the dialog they ; had dissappeared. ; ; Do I have too many JAR files? ; ; Help. ; ; Thanks; ; Gordon,3
I have a java class called GaryTest.  Here is the code for the class:; ; public class GaryTest; {;   com.ibm.connector2.ws390.cicsexci.CICSEXCIInteractionSpec foo;;   public static void main(String[] args);   {;     GaryTest myTest = new GaryTest();;     myTest.foo.setCommareaLength(3);;     System.exit(0);;   }; }; ; When I code GaryTest manually and compile GaryTest.java; everything compiles ; fine.; ; If I then change the line myTest.foo.... to; ;     myTest.foo.setComm; ; and then press ctrl+enter with the cursor after Comm; I get a ding sound and; no pop-up.  Its as if Content Assist cannot find the methods; or at least a ; matching method; in this class.; ; The CICSEXCIInteractionSpec class is in a .jar file that appears in ; the Libraries tab of the Java Build Path property for the java project ; containing GaryTest.  I will attach that .jar file and another .jar file ; containing some needed superclasses and/or interfaces so that the problem can ; be reproduced.; ; If any additional information is needed; please advise.; ; Thanks;; Gary,3
With build F2.; ; A mnemonic in the new template dialog is not working.  Below are the ; replication steps.; ; 1) Window>Preferences; 2) Java>Templates; 3) Click on New...; 4) Mnemonic for Patterns does not work.  All others are fine.,2
Build ID: I20080523-0100; ; An initialized final field cannot be assigned null somewhere; so the null analysis should consider it as NON_NULL. ; ; ; class A {;   final ArrayList l = new ArrayList();; ;   void dump(A a) {;     // non-null comparison is always true;     if (a.l != null) {;       for (Iterator it = a.l.iterator(); it.hasNext(); );         System.out.println(hey  + it.next());;     };   }; },5
I used the refactoring utility to change the type of one of the params in an; interface.  The utility completed successfully; but did not update the Outline; window; which still shows the old signature.,1
We have a large ant project that compiles different source dirs to a single; class dir. We can manage this in Eclipse by pulling in everything as source; directories; but Eclipse builds become very slow. It is much faster if we use; classes dirs for some parts of the system (esp. *generated* code); but then we; run up against the problem that our project compiles multiple generated source; dirs into a single class dir (this is hard for us to change). So if Eclipse; supported a list of source locations for each class dir; that would speed things; up for us a lot.,3
Version: 3.0.0; Build id: 200312182000; ; I found this one when trying to provoke a type mismatch error after the ; refactoring. It may be related to bug #50985; although it doesnt seem obvious.; ; The example (attached) uses an (empty) interface A; a derived interface B with ; one method m(); and a class C implementing both. The variables are A a; B b; ; and C c = new C(). m() is called on c and c gets assigned to both a and b; ; which are supertypes; without problems. The refactoring refuses to replace cs ; type (C) with B; althoug B is assignment compatible with A. Why?; ; -- Friedrich,3
Currently the debug variables view shows ints as signed integer; but it would ; be nice if each variable individually could be set to be shown as hex ; (Integer.toHexString); binary (Integer.toBinaryString); etc.,3
"I20080222-1622; ; Format this field declaration with block comment formatting disabled:; 	private List/*<RefactoringParticipant>*/ fParticipants;; ; => result:; 	private List/*<RefactoringParticipant>*/fParticipants;; ; => expected: Should leave as is; i.e. not remove the space between (type&comment) and field name.",3
I noticed that when the hot code replace manager is determining which stack ; frames should be popped; it performs two source lookups for each stack frame.; ; First in; #getAffectedFrame(...); and then in #getMethod(...). I altered the ; code to re-use the resolved stack frame.,3
AptConfig.getProcessorOptions(IJavaProject) does not resolve variables (like %ROOT% and %PROCESS.DIR%) in the APT option values. Currently; these variables are only resolved during annotation processing. There are cases; where we would need to get the APT option values outside the context of annotation processing and in these cases we get back raw unresolved values.; ; Even EnvironmentFactory.getEnvironment(compilationUnit; compilationUnit.getJavaProject()).getOptions() does not give back resolved values.; ; We need some way of getting back these resolved values either through a new API or changing existing ones.,3
I could not find a way to launch a Java class changing not only its argument and; the JVM arguments; but *also* the input/output redirection. Apparently; just; putting <file in the launch configuration does not work.,3
Created attachment 99550; screenshot; ; I have a dual monitor setup with the primary monitor on the right of the secondary monitor. When Eclipse is on the secondary monitor; clicking on an breadcrumb entry opens the dropdown shell on the primary monitor. See the attached screenshot - the red line shows the boundary between the two monitors.,3
My <build>-dir contains some usefull information(liceses; meta-inf and so on) ; that not belongs to my java packages(i compile project directly to my Apps ; <classes>-dir); but when i invoke <Build Project>-command all the files from ; <build>-dir are removed and i need to copy it anew. I think this is a problem. ; Is there a method to prevent such behavior except compiling project to other ; location and then copy compiled classes to my Apps <classes>-dir?,3
Using 3.0M7...; ; The old code formatter is presently in use in projects; with cvs histories and branches that will require merging.; ; If in fact the old formatter was the standard operating; procedure then a developer could reformat the entire file; at any point without worry.; ; Now; if it does anything (Ill enter a separate bug for; its tendency to do nothing where the old one worked fine); its likely to do something different. This causes annoying; and useless cvs deltas; complicating life for developers; down the line and it can cause merge problems.; ; There has to be an obvious way to preserve the old behavior;; and I dont mean; by experimenting with all 160 options.; (Gee; would 1;600 options be even better?); ; Making the user investigate by hand the 160 options is; really mean; and he doesnt have any confidence that the; old behavior can even be restored...,3
It would be nice to not only be able to continue debugging at a specific line ; later (as introduced in the 3.1 versions) but also to step bag some lines of ; code - just like in Visual Basic. Of course; the move back doesnt have to undo ; the complete execution state  (Visual Basic is also not doing this); but when ; youre debugging a method; it can be very usefull; to redo some lines of code ; by moving back the execution cursor (like in Visual Basic) or point to a line ; above the current line and call a function re-execute which would just ; continue executing the code at the line the pointer was moved to (in the ; current thread currently debugged). The data state doesnt need to be changed ; (of course it would be gorgeous if this would also be possible; but i guess ; this is much to complicated or impossible which is probably the reason why ; Visual Basic also doesnt change the data state).,3
When I define a library variable; it appears that I can only associate a single ; jar file with it.  This is extremely limiting when I have a jar suite ; consisting of multiple libraries that I would like to include in a project.  ; Since many common libraries such as xalan are now delivered in multiple jars; ; it would facilitate use of Eclipse if a variable could contain a list of ; libraries.,3
FUP of Bug 312402,3
I always have a difficult time finding the correct preference on this page - scrolling and twisties are painful. (Plus we do not have mnemonics for all the preferences - I dont care for mnemonics too much but someone else might); ; Possible solutions:; 1. Sub pages for each category; - Preferences in each category (except potential programming problems) fit in one screen; hence (almost) no scrolling required. ; - Lesser mouse clicks - Opening and closing a twistie is 2 mouse clicks; selecting a sub page would be only one mouse click; Pros; - Simple to implement!; Cons; - Names of 3 categories are longer than 2 words; hence the subpages names in the tree will not look too good.; - You still have to know the category to find the preference quickly - and except for very frequently used preferences this will not be true.; ; 2. Create a filter box in this page ; - This might be useful in other preference pages as well? ; ; 3. Use the existing filter box on the left side to reveal and highlight individual preferences. ; - I do not know how easy or difficult it is going to be with existing UI; ; 4. Mozilla provides Power User preference management where you can filter by single pref. Maybe we can add a node All at the bottom of the tree in left pane; which just lists all the preferences available in a filterable table containing 3 columns - key; type; default value?; value. ; - A command can be added to directly go to this All page; - This All page is something similar to what is suggested for Properties View on http://wiki.eclipse.org/index.php/UI_Best_Practices_v3.x#Properties_View.; ; My favorite is option 4; but would settle for Option 2 as well.,3
3.1; Unused import should not prevent compilation of the class.; I get unresolved compilation problem. That sounds too radical. Theres nothing; that prevents compiling the class.,3
Bring up the add JRE dialog.  Dont specify a name; but first browse for a valid JRE location.  After ; JRE is specified; notice that the jar file locations are empty.  Now; even after you specify a name; ; the dialog thinks that no jar file exists.  You must re-browse and re-select the JRE location in order ; to save the JRE.,3
Ill attach a picture that shows that the yellow lightbulb can be present ; after the problem has been fixed and the source has been compiled.; ; If I change the source file + save again to force another compile; the yellow ; lightbulb goes away.; ;  yvind,3
"Build Identifier: 20110615-0604; ; In java editor; when using generate setter and getters option; the generation succeds but after that save button and CTRL+S functions does not work.; ; ; ; ----------------stacktrace-1 from .log file in .metadata------------------; org.eclipse.swt.SWTException: Failed to execute runnable (java.lang.NullPointerException); 	at org.eclipse.swt.SWT.error(SWT.java:4282); 	at org.eclipse.swt.SWT.error(SWT.java:4197); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:138); 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3563); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3212); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2696); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2660); 	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2494); 	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:674); 	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:667); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149); 	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123); 	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196); 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110); 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:601); 	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622); 	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577); 	at org.eclipse.equinox.launcher.Main.run(Main.java:1410); 	at org.eclipse.equinox.launcher.Main.main(Main.java:1386); Caused by: java.lang.NullPointerException; 	at org.eclipse.jst.ws.jaxws.dom.runtime.util.DomAdapterFactory.adapt(DomAdapterFactory.java:276); 	at org.eclipse.jst.ws.jaxws.dom.ui.DomItemProviderAdapterFactory.adapt(DomItemProviderAdapterFactory.java:304); 	at org.eclipse.jst.ws.jaxws.dom.integration.navigator.CustomDomItemProviderAdapterFactory.adapt(CustomDomItemProviderAdapterFactory.java:124); 	at org.eclipse.jst.ws.jaxws.dom.integration.navigator.DOMAdapterFactoryContentProvider$LoadListener.exchangeTreeItemData(DOMAdapterFactoryContentProvider.java:336); 	at org.eclipse.jst.ws.jaxws.dom.integration.navigator.DOMAdapterFactoryContentProvider$LoadListener.exchangeDummy(DOMAdapterFactoryContentProvider.java:322); 	at org.eclipse.jst.ws.jaxws.dom.integration.navigator.DOMAdapterFactoryContentProvider$LoadListener.exchangeDummy(DOMAdapterFactoryContentProvider.java:326); 	at org.eclipse.jst.ws.jaxws.dom.integration.navigator.DOMAdapterFactoryContentProvider$LoadListener$1.run(DOMAdapterFactoryContentProvider.java:308); 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135); 	... 23 more; -------------stack trace-2 from .log files in .metadata------------------; !MESSAGE Unhandled event loop exception; !STACK 0; org.eclipse.swt.SWTException: Failed to execute runnable (java.lang.IndexOutOfBoundsException: Index: 4; Size: 2); 	at org.eclipse.swt.SWT.error(SWT.java:4282); 	at org.eclipse.swt.SWT.error(SWT.java:4197); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:138); 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3563); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3212); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2696); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2660); 	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2494); 	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:674); 	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:667); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149); 	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123); 	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196); 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110); 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25); 	at java.lang.reflect.Method.invoke(Method.java:597); 	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622); 	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577); 	at org.eclipse.equinox.launcher.Main.run(Main.java:1410); 	at org.eclipse.equinox.launcher.Main.main(Main.java:1386); Caused by: java.lang.IndexOutOfBoundsException: Index: 4; Size: 2; 	at java.util.ArrayList.RangeCheck(ArrayList.java:547); 	at java.util.ArrayList.get(ArrayList.java:322); 	at org.eclipse.m2e.editor.pom.MavenPomEditor.reload(MavenPomEditor.java:326); 	at org.eclipse.m2e.editor.pom.MavenPomEditor$1ChangedResourceDeltaVisitor$1.run(MavenPomEditor.java:282); 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135); 	... 23 more; ; ; ; Reproducible: Always; ; Steps to Reproduce:; 1.Create setters and getters from field definitions; 2.try to save the resulting class source.; 3.Save succeeds after changing the focus from other views and coming back.",3
Currently selecting a project and doing a Run As... JUnit will cause JUnit to ; run all tests found in the selected project along with any projects on the build ; path.  There should be some way to constrain the search for tests to just the ; selected project (or projects),2
[3.1RC1]; ; Import org.eclipse.ui.workbench (from external plug-in; with source) into an ; empty workspace. Select Navigate->Open Type... and type triml. Note that the ; dialog shows TrimData and TrimLayoutData. Hit the down arrow two times and ; note how TrimData changes to TrimLayout.; ; Looks like a UI update problem - if you hit the down arrow just once and then ; Enter; TrimLayout opens.; ; (TrimData is an inner class of TrimLayout),3
Using I20070410-1043; I got a DebugException when trying to display an array with a null value.; The array contained one element that is null.; ; The error in the display panel was:; org.eclipse.debug.core.DebugException: com.sun.jdi.ClassNotLoadedException: Type has not been loaded occurred while retrieving component type of array,3
An internal error occurred during: Launching.; java.lang.NullPointerException; org.eclipse.jdt.internal.launching.SocketAttachConnector.connect(SocketAttachConnector.java:110); org.eclipse.jdt.internal.launching.JavaRemoteApplicationLaunchConfigurationDelegate.launch(JavaRemoteApplicationLaunchConfigurationDelegate.java:75); org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:569); org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:788); org.eclipse.debug.internal.ui.DebugUIPlugin$6.run(DebugUIPlugin.java:955); org.eclipse.core.internal.jobs.Worker.run(Worker.java:66),3
"Source based; circa v_758.; DeltaProcessor#1347 and following lines read:; 		switch (eventType) {; 			case DEFAULT_CHANGE_EVENT:; 				firePostChangeDelta(deltaToNotify; listeners; listenerMask; listenerCount);; 				fireReconcileDelta(listeners; listenerMask; listenerCount);; 				break;; 			case ElementChangedEvent.POST_CHANGE:; 				firePostChangeDelta(deltaToNotify; listeners; listenerMask; listenerCount);; 				fireReconcileDelta(listeners; listenerMask; listenerCount);; 				break;; 		}; ; The two cases contain the same code. Unless there is a separate reason (design?) to keep these separated; we may consider merging them for conciseness sake.",3
- In the Java Browsing perspective select a type (and open in editor) which has ; imports.  ; - choose copy from the popup menu; - paste into some random text window; - notice that the imports were not copied; ; This is inconsistent for the user.  They picked a type and said copy.  They ; got only part of the type.  ; ; See also http://bugs.eclipse.org/bugs/show_bug.cgi?id=23666.,3
"The following code produces a compile-time error because enumerations are; implicitly static; and thus cannot appear inside a non-static member class; declaration:; ; public class TestClass {; 	public class InnerClass {; 		public enum InnerEnum { A; B; C }; 	}; }; ; The error message given by the Eclipse compiler is:; ; The member type InnerEnum cannot be declared static; static types can only be; declared in static or top level types; ; This may cause confusion with normal Java programmers because; not having used; the static keyword; they may not realize that enumerations are static.  It also; implies that declaring InnerEnum as non-static would solve the problem (which is; impossible).  The javac compiler produces the following message; which I feel is; more friendly on both counts:; ; TestClass.java:20: enum declarations allowed only in static contexts",3
20020318; heres JavaModel.deletes code (beginning):; ; if (elements != null && elements[0] != null && elements[0].getElementType() < ; IJavaElement.TYPE) ; ; this throws ArrayIndexOutOfBoundsException if array is empty; ; javadoc allows empty arrays; ; same problem for:;  - copy;  - move;  - rename,3
Build 20030129; ; Im trying to move a source folder from the org.eclipse.ui.externaltools; plug-in to the newly created org.eclipse.ant.tests.ui plugin.; ; I right click on the source folder (Ant Editor Tests) and choose; Refactor->Move which presents me with a dialog. When I click on the; org.eclipse.ant.tests plug-in in this dialog; the OK button disables but there; is no message displayed to give me a clue as to why I cant move the folder; there. The OK button enables for every other plug-in except the one I want to; use.,3
Build Identifier: 20090621-0832; ; hi im using eclipse ide along with webnms plugin..but when i open ems project im geting illegal therad access..please help me... my boss is gonna kill me..im using ubuntu along with open jdk....; ; Reproducible: Always,3
One of the problems that Ive run into when using Unused parameters is; its very easy to have ; many cases of unused parameters if you implement ; an interface. Its not unusual to have methods ; defined on the interface ; that contain arguments that you dont need; not to mention the adapter  ; ; style of implementing that contains no implementation.                  ;                                                                         ; Seems like there may need to be ; special cases to handle these. Something; along the lines of if the methods body is empty then ; exclude that; method from the unused parameters warning.; ========; From mailing list; PM> ; Now it makes perfect sense. Maybe the argument warning should only; PM> occur if; PM> the method ; has a body... do you agree ?; ; That would certainly handle some of the cases; hard to say ; what; percentage exactly.; ; There would still be the problem of the method having a body and ; not; referring to any of the augments because the method is an overridden; or interface-method. ; I found these cases happened a lot when; subclassing things like ; SourceViewerConfiguration.; ; A case that would handle methods like these would be to exclude ; those; methods that are overriding/implementing another method. However that; seems like it ; could result in too many missed cases.,3
Build Identifier: I20110613-1736; ; In ThreadReferenceImpl.ownedMonitorsAndFrames(); the stack depth and subsequently the monitor is read from JVMTI via OwnedMonitorsStackDepthInfo. The specification says that the monitor and subsequently the stack depth is written however.; ; See: http://download.oracle.com/javase/6/docs/platform/jpda/jdwp/jdwp-protocol.html#JDWP_ThreadReference_OwnedMonitorsStackDepthInfo; ; Reproducible: Always,3
N200310310010 (and most other nightlies and integration builds since M4).; ; When the project (.project and .classpath) is not located below the workspace; directory; Im unable to save Java files (regards of whether I use Ctrl+S or; File / Save). There are no problems saving e.g. ordinary text files.; ; When the project is located below the workspace; there are no problems.; ; Steps to reproduce:; - Create new project; but do not use the default location - instead place the; project outside the workspace.; - Create a Java class.; - Make changes to the Java class and try to save.,3
In 2.1 and 3.0M1; org.eclipse.jdt.ui.javadocCompletionProcessor and ; org.eclipse.jdt.junit.testRunListeners are listed under JDT Plug-in Developer ; Guide > Reference > Extension Points Reference in the left hand navigation pane ; but if you just click on Extension Points Reference and look at the page on ; the right; theyre missing. Also the ordering is different for the ones that ; are there - alphabetical would be best for both.; ; Also; neither the words javadocCompletionProcessor; testRunListeners; nor ; ITestRunListener were found in a search of the online help for 3.0M1 but ; theyre there in 2.1.,3
"M5 test path; ; Given:; public class A {;     public static void main(String[] args) {;         System.out.println(ouch);;     }; }; ; 1. Select public static... (whole method; all 3 lines); 2. Ctrl-1; 3. type f; 4. Exception is thrown:; ; Caused by: java.lang.NullPointerException; 	at org.eclipse.jface.text.contentassist.AdditionalInfoController.computeInformation(AdditionalInfoController.java:231); 	at org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation(AbstractInformationControlManager.java:820); 	at org.eclipse.jface.text.AbstractInformationControlManager.showInformation(AbstractInformationControlManager.java:810); 	at org.eclipse.jface.text.contentassist.AdditionalInfoController$1.run(AdditionalInfoController.java:173); 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123); 	... 40 more",3
I would like the option of a blank line after a closing bracket.  This would be; for do/while/for/if statements.  ; ; Example:; void test(int a; int b) {;   if (a != b) {;     if (a > b) { b++; };   }; }; ; becomes; ; void test(int a; int b); {;   if (a != b) ;     {;       if (a > b);         {;           b++;;         }; ;     }; ; }; ; This is the coding standard where I work; and I cant get Eclipse to produce; such behavior.  Thanks.,3
Created attachment 188698; Fix & test; ; HEAD; ; Show In > Package Explorer doesnt work in the Synchronize view for an open .java file that is not on the classpath.,3
When I select New Java Project; I have to chlloose between ; ; Create new project in workspace; ; and ; ; Create project from existing source; ; I dont want either. I want ...; ; Create new project outside the workspace; ; My strong recollection is that a fairly recent version of the SDK had; a much less confusing UI here.,3
Consider this class:; ; public class A {; { methodB(); }; public A() {}; public A(int i) {}; public methodB() {}; }; ; Call hierarchy for methodB() should show the two constructors.  Currently; it ; reports the initialization block and doesnt go any further.,3
HEAD contents of org.eclipse.jdt.ui:; org.eclipse.jdt.internal.ui.refactoring.RefactoringSupport.AbstractRenameSupport.SelectionState.init(); defined the following local variable which is never read.; List parts = new ArrayList();; ; STEPS TO REPRODUCE:; Compile your code with error on unused locals.; You will find another error in:; org.eclipse.jdt.internal.ui.refactoring.changes.ChangeExceptionHandler.RefactorErrorDialog.createMessageArea(...); and:; org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.showErrorDialog(...).; The status is never used.,3
1) Open preferences; 2) Change formatter profile; 3) Press Cancel; ; the change is incorrectly saved.,3
I20070327-0800; ; This will allow to reuse the binding environment. First measures indicate a speedup of 3 to 4 times! It also unifies the implementations.; ; See also bug 133277,3
"If I do auto formatting for following class:; ; public class A {; 	/* * command */; 	void method() {; ; 	}; }; ; Ive see what commentary are running each time for 1 space symbol.; ; This is same class after 10 calls for Ctrl+F; public class A {; 	/*           * command */; 	void method() {; ; 	}; }",3
See this simple source:; ;    public static void main(String[] argv);    {;       a();;       b(1);;       c(2);;    };    ;    public static void a();    {;       int i = 0;;       i = Integer.parseInt(12345) + i; // May throw NumberFormatException.;    };    ;    public static void b(int k);    {;       if(k < 0);       {;          throw new NumberFormatException(Bad);;       };    };    ;    public static void c(int k);    {;       if(k < 0);       {;          throw new Exception(Bad);;       };    }; ; For some reason only method c is flagged for an unhandled Exception.; ; ;JOOP!,3
Invalid for JDK 1.4. Ill attach a patch.,3
There Navigate menu now supports a Goto type action. This action should be ; retargeted by the type hierarchy view so that users can quickly navigate to a ; type shown in the type hierarchy.; ; The action should only be available in the Navigate menu and not in the context ; menu.,2
Select a method in the outline view. Open Super Implementation on the popup; menu is missing a mnemonic.,3
I have a hierarchy perspective open rooted on a package.  Whenever I save a CU ; in the package; the entire hierarchy view Tree is expanded.,2
"20050606; ; use the convert anonymous to nested refactoring on the following code. The; result has unresolvable references to Vector and HashMap.; ; ; public class B {; 	void foo() {; 		new A(null; null) {			; 		};; 	}	; }; ; // A.java; import java.util.HashMap;; import java.util.Vector;; ; class A {; 	public A(Vector v; HashMap m) {; 	}; }",3
Reproduced with Eclipse SDK 3.3 M6 build.; ; JDT compiler is producing an ambiguous method call error in code with Java 5.0 generic methods that the Sun javac compiler compiles without incident.; ; Rather than attempt to describe the test case; I will attach a tiny project that demonstrates the problem.,3
Using a set of libraries that are related (e.g. xalan; xerces) it is useful; to be able to define a LIB variable for all the related JAR files. However;; if these need to be added into a project; then they must be entered individually.; ; It would be desirable to specify these in terms of another variable; for; example; XML_HOME/xerces.jar and XML_HOME/xalan.jar where XML_HOME is a variable; defined to a folder on the filing system. That way; individual projects can; just specify XERCES and XALAN in their classpaths instead of having to ; repeatedly extend the XML_HOME variable.,3
I20050315-1100; ; Convert Anonymous Class to Nested introduces fields in the new nested class for; previously referenced final local variables. The generated fields are not; prefixed with the f field prefix; which is set in my preferences.,3
I have experienced a problem when attempting to running the Junit external ; tool on one project with a break-point set on another (dependant) project.  It ; complains that the dependant project doesnt have line numbers compiled into ; the class files. ; ; However; this is definately turned on for both and debugging the dependant ; project by itself works fine.  Any ideas for a work-around would be ; appreciated.; ; Thanks;; Corey,3
Build ID: M20060629-1905; ; Steps To Reproduce:; 1.Have snippets of code that are nearly identical.; ;     public void a3();     {;         Transaction t = new Transaction();;         Action action = new Action( A.a3);;         String string = A.a3;;         // MY SELECTED EXTRACT TARGET;         t.start(string);;         t.run(action);;         t.end();;         // MY EXTRACT TARGET ENDS;     };    ;     public void a4();     {;         Transaction t = new Transaction();;         String t_name = A.a4;;        ;         Action action = new Action(t_name);;        ;         t.start(t_name);;         t.run(t_name);;         t.end();;     }; ;     public void a6();     {;         Transaction t = new Transaction();;         String t_name = A.a6;;        ;         Action action = new Action(t_name);;          // DUPLICATE!!!;         t.start(t_name);;         t.run(action);;         t.end();;     }; 2. Select the following snippet in a3(); and press Alt-Shift-M.; ;         t.start(string);;         t.run(action);;         t.end();; ; 3. In Extract Method Refactoring Wizard Input Page; the Replace all occurence of statements with occurence  checkbox is not highlighted.  However; a3() and a6() have identical snippets.  if a user switch the positions between a4() and a6(); and redo the Extract Method; Replace 1 occurence of statements with occurence  checkbox is highlighted.; ; ; More information:; poked around the code and realize that the bug in the following method; ; org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder.Match.isEmpty(); ; ; public boolean isEmpty() {;             return fNodes.isEmpty();; }; ; This condition is pre-requisite for a reset.  However; in the body of a4(); when t.run(t_name) matches against t.run(action); the test failed; SnippetFinder reset() is called.; ; SnippetFinder then matches t.run(action) in a4() and t.start(string) in a3().  Both local variables t in both snippet matches and is stored in the SnippetFinder.Match.fLocalMappings.  however; subsequent subtree matches fail.; ; however; although no nodes is added to SnippetFinder.Match; the fLocalMapping is NOT empty.; ; Later when SnippetFinder matches t.start(string) in a3() and t.start(string) in a6(); since the typebinding of t (which comes from a4) exist in the Snippet.Match object and the binding is indeed different from t in a6(); the match will fail.,3
"20040211; ; In the following code set the cursor after e in the first hello and invoke; linked rename. You see that a line in the filled background is missing. It ; was the location of the cursor. See screenshot.; ; ; public class CompilationUnit {; 	; 	public String foo(String hello) {; 		return hello;; 	}; 	; }",3
I20050830-0800; ; IPackageFragmentRoot#getPackageFragment(String) should not accept invalid; package names. Currently; it e.g. accepts p1/.; ; This leads to strange effects with buffers. I accidentally passed such a package; name. I asked the returned IPackageFragment for a compilation unit; and called; cu.getSource(). This returned not the current contents of the CU; but the; previous version (which has been deleted on the file system by then).; ; Ill attach patches for jdt.ui and jdt.ui.tests.refactoring in case youd like; to reproduce the problem. Run RenamePackageTests; and test1 will fail; because; it got the wrong contents for p1/A.java (the contents from test0).; ; The bug in the test (wrong package name passed) is marked with //XXX: bug,3
I get this warning saying I should specify serialVersionUID. However; that ; field is very optional and there is a ton of legitamate situations where such a ; field is just annoying and confusing.; ; This is how the warning looks:; http://mnemo.minimum.se/serialVersionUID.png; ; This bug relates somewhat to this one:; https://bugs.eclipse.org/bugs/show_bug.cgi?id=101476; ; Here is a short intro to this field:; http://www.javaworld.com/javaworld/javaqa/2003-06/02-qa-0627-mythser.html; ; ; Different people will probably have different opinions on this one; so a ; reasonable fix would be to set a conservative default setting and allow ; specific warnings to be turned on for those who work for serializable objects ; alot and that are also using this field (far from all serializable object use ; it).,3
HEAD stream as of 20040721.; ; We just released in JDT/Core an option for signalling missing serialVersionUID ; for serializable classes (see bug 69942).; ; This should be reflected in UI.; * COMPILER / Reporting Missing Declaration of serialVersionUID Field on ; Serializable Class; *    When enabled; the compiler will issue an error or a warning whenever a ; serializable class is missing a local declaration ; *    of a serialVersionUID field. This field must be declared as static final ; and be of type long.; *     - option ; id:         org.eclipse.jdt.core.compiler.problem.missingSerialVersion; *     - possible values:   { error; warning; ignore }; *     - default:           warning; ; For quickfix purpose; we added IProblem.MissingSerialVersion.,3
"AK (11/10/00 11:50:12 AM); 	after you press finish in the NewProjectWizard the busy cursor is shown for a while only;; 	then it goes away; althought theres still some activity going on; ; NOTES:",4
Since the Default dialog does not allow editing and only removal; it would be; convenient if the user could copy these; remove the default; and paste them back.,3
When the Link with Editor option is enabled in the outline view; placing the; cursor inside a method will open this methods outline. While this is useful for; overall editing; it would be nice if it did not do so on import statements. This; list is potentially long and an outline does not always reveal any more sensible; information.; Either an exclusion from the tree-open or another option to hide imports; completely in the outline view (like e.g. for static members) should be added.,3
Using F3;; Steps to reproduce:; 1) Start a fresh new workspace; 2) Dont change the default options.; 3) Import all plugings from your installation plugin directory except jdt.core; 4) You will have have few errors related to the fact that org.eclipse.jdt.core; is missing.; 5) Add jdt.core from the SNZ cvs server as source. Simply check out the project; in HEAD.; 6) When the check out action is completed; there are two remaining errors.;    1) - project: org.eclipse.pde;       - error message: The project was not build since it depends on; org.eclipse.pde.core; which failed to build.;    2) - project: org.eclipse.pde.ui;       - error message: The project was not build since it depends on; org.eclipse.pde; which failed to build.; ; The second problem seems to be related to the first one. ; ; If I select: org.eclipse.pde; open its properties page and click on Java build; path and then OK without changing anything; both errors are gone.; Let me know if you need more details.,3
Product contains org.eclipse.jdt.core plug-in version 3.0.3 (3.0.2 with fixes in the maintenance branch).; Windows XP; Pentium 4 hyperthreaded.; Java(TM) 2 Runtime Environment; Standard Edition (build 1.4.2); Classic VM (build 1.4.2; J2RE 1.4.2 IBM Windows 32 build cn142-20050609 (JIT ena; bled: jitc)); ; User has large workspace (140 projects) with number of EJBs.  After series of steps they shut down the workbench and restart.; After restart the build gets stuck at 3%.  UI is responding but only until user tried to do anything that needs workspace.; ; The problem is not consistent - does not appear every time the scenario is repeated; but often and is considered a stopship for my product; as user needs to kill the VM.  After starting again they usually get into same state where build never finished.; ; I have full stacks from two different machines in the e-mail.  There does not seem to be any deadlock; but two threads constantly sleep inside org.eclipse.jdt.internal.core.search.processing.JobManager.performConcurentJob; ; People that usually can reproduce the issue have tried running with 3.0.2 version of org.eclipse.jdt core plug-in and could not reproduce the issue; 6 out of 6 times.  So this bug is considered a regression caused by one of the fixes on top of 3.0.2.; ; Thanks for help; trying to release a product next week.,3
I20071030-0010.; ; Up to 3.4 M2 the call hierarchy could not be opened on a static initializer element (good). Now this is possible but never shows any callers.; ; Either disable it again or show the class loader.,3
20060316; ; bug 99114 comment 11 has a good way to avoid OME.; ; To avoid OOME when building ASTs in patch; the current heap size can be used.; We should abstract this code to a single class to be used by all users of multiple ASTs.,3
Build Identifier: 20110916-0149; ; I installed opensuse 12 on a new dell m6600; since then ecplise crashes; no productive work possible.; I cannot tell if its a broken installation or a bug in eclipse - used to run stable  with previous laptop running suse11.4; it only happens for some packages - but if it does it is 100% reproducible; both with jdk 1.6 and 1.7; ; ; Reproducible: Always; ; Steps to Reproduce:; 1. start eclipse; 2.open in project src; then package ext.xxx; 3.eclipse immediately crashes;,3
Using 20030627 WSAD Installable driver on Win2K; ; This error doesnt seem directly related to the task; but in this case; I was creating the web project for the JSP and Servlet example; when the ; following NPE occurred:; !ENTRY org.eclipse.jdt.core 4 4 Jul 01; 2003 08:59:51.925; !MESSAGE Background Indexer Crash Recovery; !STACK 0; java.lang.NullPointerException;         at java.lang.Throwable.<init>(Throwable.java);         at java.lang.Throwable.<init>(Throwable.java);         at java.lang.NullPointerException.<init>(NullPointerException.java:63);         at org.eclipse.jdt.internal.core.index.impl.Util.quickSort(Util.java);         at org.eclipse.jdt.internal.core.index.impl.Util.sort(Util.java:292);         at org.eclipse.jdt.internal.core.index.impl.InMemoryIndex.getSortedWordE; ntries(InMemoryIndex.java:134);         at org.eclipse.jdt.internal.core.index.impl.SimpleIndexInput.open(Simple; IndexInput.java:118);         at org.eclipse.jdt.internal.core.index.impl.MergeFactory.merge(MergeFact; ory.java:78);         at org.eclipse.jdt.internal.core.index.impl.Index.merge(Index.java:243);         at org.eclipse.jdt.internal.core.index.impl.Index.save(Index.java:348);         at org.eclipse.jdt.internal.core.search.indexing.IndexManager.saveIndex(; IndexManager.java:453);         at org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.execu; te(AddJarFileToIndex.java);         at org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobMan; ager.java:360);         at java.lang.Thread.run(Thread.java:801); java.lang.NullPointerException;         at java.lang.Throwable.<init>(Throwable.java);         at java.lang.Throwable.<init>(Throwable.java);         at java.lang.NullPointerException.<init>(NullPointerException.java:63);         at org.eclipse.jdt.internal.core.index.impl.Util.quickSort(Util.java);         at org.eclipse.jdt.internal.core.index.impl.Util.sort(Util.java:292);         at org.eclipse.jdt.internal.core.index.impl.InMemoryIndex.getSortedWordE; ntries(InMemoryIndex.java:134);         at org.eclipse.jdt.internal.core.index.impl.SimpleIndexInput.open(Simple; IndexInput.java:118);         at org.eclipse.jdt.internal.core.index.impl.MergeFactory.merge(MergeFact; ory.java:78);         at org.eclipse.jdt.internal.core.index.impl.Index.merge(Index.java:243);         at org.eclipse.jdt.internal.core.index.impl.Index.save(Index.java:348);         at org.eclipse.jdt.internal.core.search.indexing.IndexManager.saveIndex(; IndexManager.java:453);         at org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex.execu; te(AddJarFileToIndex.java);         at org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobMan; ager.java:360);         at java.lang.Thread.run(Thread.java:801); ; ; Doesnt impact function from working.,3
AST/DOM support for extended dimensions are being added via bug 391895.; This bug is to track the AST rewrite part for the extended dimensions for SingleVariableDeclaration and VariableDeclarationFragment.,3
Created attachment 195595; Fix; ; I20110512-2000; was OK in 3.6.2; broken by the fix for bug 337887; ; Ctrl+T; Enter on bar() and baz() select the type Sub instead of the method:; ; package xy;; ; public class Try {;     void foo() { }; }; ; class Sub extends Try {;     void foo() { };     private void bar() { };     static void baz() { }; },3
I20040324; ; ILaunchConfiguration#launch(String; IProgressMonitor) never performs a build; prior to the launch. DebugUITools#launch(ILaunchConfiguratio; String) saves and; builds the workspace according to the current preference settings.,3
I downloaded the JDK1.3.1 source code from Sun. I unpacked the tar.gz archive. ; Then I imported the java source code from the src\share\classes; directory into a newly created project Sun JDK 1.3.1.; ; After turning off auto build and trying again; I could actually import the ; source files. :-) (Big improvement over old VA Java... feels good; thank you!); ; However; I could never get the project to compile. I didnt really expect; that; since this is a really na ve approach; but it seems as Eclipse fails; before it really starts compiling. I get a lot of checking for compile; status and stuff; and then I got a message dialog with title Build problems; ; saying Internal error: null. ; ; I realize that the code probably is incomplete and perhaps not possible to ; compile; however; then Eclipse should respond with compilation errors; and not ; in this way.,3
1) JUnit setup; 2) create a new class in junit.framework; ->the new class is not selected and revealed in the PackageExplorer,3
"Build ID: I20070209-1006; ; Steps To Reproduce:; 1. Enable Pref / Java / Compiler / Javadoc / Report errors in tags; ; 2. Create package and file:; ; package otherpkg;; ; public class C {; 	public static class Inner { }; }; ; 3. Create second package and file to show the problem:; ; package somepkg;; ; import otherpkg.C.Inner;; ; /**;  * {@link Inner} -- warning Javadoc: Invalid member type qualification;  */; public class MemberTypeDocTest {; 	/**; 	 * {@link Inner} -- works; 	 */; 	void m() { }; }; ; ; More information:; When you have a member type imported; a {@link} to that type is handled correctly in a method javadoc block. However in a class javadoc block; the same {@link} produces a warning that is difficult to get rid of.; ; I never had that trouble in 3.2; it must be new in 3.3.; ; Note: In the class javadoc; typing {@link Inn<Ctrl-Space> completes Inner and adds the import statement as seen above -- and also produces the warning. For the user; its adding to the confusion if Eclipse generates code and then goes on to tag it as a warning.",5
I20070206-0010.; ; GetterSetters dialog: missing mnemonic on Allow setter for...,3
(4/12/2001 11:43:12 AM) AB: When I step into a class that doesnt have source in the Project an empty source window is ; opened with the title set to <classname>.class   This window is blank.; ; I would expect to be asked where the source can be found.    It is not an option to bring all of the source into a project.; I may not even have the source.; ; Something similar to Step Debug would be good.   This would step until source was found.   I avoid stepping into ; the class loader/security check etc.; ; NOTES:,3
Title says it all. They cant be moved anyway.,3
I have the following option set to warning: Java -> Compiler -> Errors/Warnings -> Null references. ; A null reference warning appears in the following code; saying The variable text may be null:; ;     boolean hasText = text != null && text.trim().length() != 0;;     boolean saveEnabled = hasText && !text.equals(savedText); // Warning here,3
"User-Agent:       Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_2; en-us) AppleWebKit/531.21.8 (KHTML; like Gecko) Version/4.0.4 Safari/531.21.10; Build Identifier: Eclipse 3.6M3  I20091030-1201; ; In some places in some Java source files when I double click (or choose Toggle breakpoint from the context menu) in the LH gutter to set a breakpoint no breakpoint gets set (neither the icon for a breakpoint nor an entry in the breakpoints window in the Debug perspective appear). Yet in other places in the same source file setting a breakpoint works fine. This is true in both Java and Debug perspectives.; ; This has been happening for some time so not just in this build. I first noticed it some weeks or even a few months ago. I cannot include the source since it is proprietary but I can show where the issue occurs; the following code block is contained in a method in my class:; ; System.out.println(OK);; swingWorker = new MySwingWorker<Object; Something>(); {; 	List<Error> errors = new ArrayList<Error>();; ; 	@Override;         protected List<Sample> doInBackground(); 	{;                 // my code here; 	}; 			; 	@Override; 	protected void process (List<Something> stuff); 	{;                 // my code in here; 	}; ; 	@Override; 	protected void done(); 	{; 		// my code in here; 	}; };; swingWorker.execute();; ; I am not able to set breakpoints on any lines within the braces delimiting the swingworker creation; so the sysout; new swingworker and last swingworker.execute lines all accept breakpoints but nothing inside.; ; There appear to be various similar reports to this but none exactly the same that I could see.; ; ; Reproducible: Always; ; Steps to Reproduce:; 1. Create a class with a method containing an anonymous swingworker creation; 2. try and set a breakpoint in the code that defines the swingworker",3
As bug 186342 has been deferred past M5 Im preparing a separate plugin that; will provide the same functionality for interested users to try out.; ; Using normal mechanisms (API and extension points) such separation is of; course not possible; but I have prepared an implementation that uses OT/J; for the integration into the JDT/Core.; ; Only one location is very difficult to adapt in the JDT/Core and only for; this location Im asking permission to insert a minimal effectless hook.; This hook will actually be useful for a final implementation regarding; null annotations; too.,3
It would be very convenient to have more actions enabled for working set nodes; in Package Explorer view:; ; -- Refresh - to refresh all projects within selected; working sets; ; -- Create new project... - should create new project and add; it to selected working sets. Also see issue 107134 at https://bugs.eclipse.org/bugs/show_bug.cgi?id=107134,3
"Build 20020212; ; - I opened a self hosting workspace from the previous build; with only the ; resources perspective operation; - The default installed JRE was a J9 VM; - I caused a build to happen; and it looks like the PDE builder caused a whole ; chain of plugin activations; including JavaPlugin (strange that a core plugin ; caused a UI plugin to load).; - JavaPlugin initialization tries to access the Display; but is in the wrong ; thread so it fails to activate.; ; Stack trace:; ; 4 org.eclipse.core.runtime 2 Plugin org.eclipse.jdt.ui was unable to instantiate ; class org.eclipse.jdt.internal.ui.JavaPlugin.; java.lang.reflect.InvocationTargetException: org.eclipse.swt.SWTException: ; Invalid thread access; 	at org.eclipse.swt.SWT.error(SWT.java:1887); 	at org.eclipse.swt.SWT.error(SWT.java:1819); 	at org.eclipse.swt.widgets.Display.checkDevice(Display.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Display.checkDevice(Display.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Display.disposeExec(Display.java:416); 	at ; org.eclipse.jdt.internal.ui.viewsupport.ImageDescriptorRegistry.hookDisplay(Imag; eDescriptorRegistry.java:78); 	at ; org.eclipse.jdt.internal.ui.viewsupport.ImageDescriptorRegistry.<init>(ImageDesc; riptorRegistry.java:42); 	at ; org.eclipse.jdt.internal.ui.viewsupport.ImageDescriptorRegistry.<init>(ImageDesc; riptorRegistry.java:30); 	at org.eclipse.jdt.internal.ui.JavaPlugin.<init>(JavaPlugin.java:186); 	at java.lang.reflect.Constructor.newInstance(Native Method); 	at ; org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(Pl; uginDescriptor.java:687); 	at ; org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDesc; riptor.java:184); 	at ; org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLo; ader.java:52); 	at ; org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginC; lassLoader.java(Compiled Code)); 	at ; org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC; lassLoader.java(Compiled Code)); 	at ; org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0(DelegatingURLCl; assLoader.java:765); 	at ; org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(D; elegatingURLClassLoader.java(Compiled Code)); 	at ; org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(D; elegatingURLClassLoader.java(Compiled Code)); 	at ; org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC; lassLoader.java(Compiled Code)); 	at ; org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC; lassLoader.java(Compiled Code)); 	at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code)); 	at ; org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin.<init>(JDIDebugUIPlugin.java:; 63); 	at java.lang.reflect.Constructor.newInstance(Native Method); 	at ; org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(Pl; uginDescriptor.java:687); 	at ; org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDesc; riptor.java:184); 	at ; org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLo; ader.java:52); 	at ; org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginC; lassLoader.java(Compiled Code)); 	at ; org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC; lassLoader.java(Compiled Code)); 	at ; org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC; lassLoader.java(Compiled Code)); 	at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code)); 	at ; org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(Plu; ginDescriptor.java:128); 	at ; org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(Plu; ginDescriptor.java:165); 	at ; org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension; (ConfigurationElement.java:96); 	at ; org.eclipse.jdt.launching.JavaRuntime.initializeVMTypes(JavaRuntime.java:135); 	at ; org.eclipse.jdt.launching.JavaRuntime.getDefaultVMId(JavaRuntime.java:258); 	at ; org.eclipse.jdt.launching.JavaRuntime.getDefaultVMInstall(JavaRuntime.java:245); 	at ; org.eclipse.jdt.launching.JavaRuntime.initializeJREVariables(JavaRuntime.java:55; 6); 	at org.eclipse.pde.internal.PDEPlugin$1.run(PDEPlugin.java:315); 	at ; org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1232); 	at org.eclipse.pde.internal.PDEPlugin.startup(PDEPlugin.java:320); 	at ; org.eclipse.core.internal.plugins.PluginDescriptor$1.run(PluginDescriptor.java:7; 01); 	at ; org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:817; ); 	at ; org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(Pl; uginDescriptor.java:713); 	at ; org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDesc; riptor.java:184); 	at ; org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLo; ader.java:52); 	at ; org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginC; lassLoader.java(Compiled Code)); 	at ; org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC; lassLoader.java(Compiled Code)); 	at ; org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLC; lassLoader.java(Compiled Code)); 	at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code)); 	at ; org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(Plu; ginDescriptor.java:128); 	at ; org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(Plu; ginDescriptor.java:165); 	at ; org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension; (ConfigurationElement.java:96); 	at ; org.eclipse.core.internal.events.BuildManager.instantiateBuilder(BuildManager.ja; va:489); 	at ; org.eclipse.core.internal.events.BuildManager.getBuilder(BuildManager.java:321); 	at ; org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:152); 	at ; org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:184); 	at ; org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:133); 	at ; org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:817; ); 	at org.eclipse.core.runtime.Platform.run(Platform.java:395); 	at ; org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:147); 	at ; org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:230); 	at org.eclipse.core.internal.resources.Project.build(Project.java:105); 	at ; org.eclipse.ui.actions.BuildAction.invokeOperation(BuildAction.java:151); 	at ; org.eclipse.ui.actions.WorkspaceAction.execute(WorkspaceAction.java:111); 	at ; org.eclipse.ui.actions.WorkspaceAction$1.execute(WorkspaceAction.java:268); 	at ; org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.j; ava:64); 	at ; org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1232); 	at ; org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.jav; a:78); 	at ; org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.jav; a:98)",3
Soon in HEAD.; ; See corresponding JDT Core bug 73244 for details.,3
JDT actions (e.g. org.eclipse.jdt.internal.ui.refactoring.reorg.DeleteAction) should check for ModelProviders interested in the proposed resource changes; and invoke their validateChange method; like for example the core org.eclipse.ui.actions.DeleteResourceAction does.; ; Currently after registering a ModelProvider that warns not to delete some models resources; trying to delete a models resource in the Navigator will generate a warning message while the same resource can be silently deleted in the JDTs package explorer.,3
"Build ID: I20090313-0100; ; Steps To Reproduce:; ; The following Java class produces a new compiler error since Eclipse 3.5M5 with Java Compiler Compliance set to 1.5 or 1.6. It compiles fine in Eclipse 3.4.2 and Sun JDK 1.5 and 1.6:; ; ; import java.util.Collections;; import java.util.List;; ; public class GenericDemo {; ;   static class A implements Comparable {;     public int compareTo(Object o) {;       return 0;;     };   }; 	;   void someCode(List<A> list) {;     // Eclipse 3.5M6 shows the following error on the next line of code:;     // Type mismatch: cannot convert from Object to GenericDemo.A;     A min = Collections.min(list); ;   }; ; }; ; ; The old compiler produces a warning for the same line (Unchecked Invocation) and Im not sure whether the code snippet complies with the JLS. I just noticed this difference in behaviour when migrating a huge project to Eclipse 3.5.",3
"Build Identifier: 20110916-0149; ; I have these fields in my class; private int[][] chesses = new int[HEIGHT][LENGTH];; private int stepNo = 0;; private Step lastStep;; private int winner = -1;; ; After format the source code with align fields in columns on; the code looks like this:; 	private int[][]	        chesses	= new int[HEIGHT][LENGTH];; 	private int		stepNo	= 0;; 	private Step	    lastStep;; 	private int		winner	= -1;; The lastStep filed doesnt align with other fields.; ; Reproducible: Always",3
"The three text fields at the buttom of the Installed Java Runtime Environments preference page; should be labels rather than text - the user would tend to believe they could be edited; especially; on Linux were editable and non editable text looks identical.; ; ; NOTES:; EG (6/8/2001 11:03:29 AM); 	non critical defer",3
I believe currently Attach Java Source only allows you to attach to a .jar or; .zip.  It would be nice to attach to an external source directory without having to; make a jar file out of it.,3
To produce bug:; 1. export eclipse project to jar file placed in this project directory; 2. refresh project directory; 3. try to export this project again. On top of window JAR Packaged; Specification youll see error message: The JAR file can not be packaged into; itself; 4. Uncheck with mouse clicking jar file created in 1. - the message will; disapear; it works fine; 5. But check it again with mouse click and uncheck with keyboard; pressing; SPACE. The error message will not disapear and youll still cant make export! ; ; Youll get different result when using mouse and different when using keyboard.; ; ; Kuba Kr likowski,3
I20050509-2010; ; E.g. here; the @param is placed before @author; but should be placed after it:; ; /**;  * Klazze;  * @author me;  */; public class Klazze<T> {}; ; Same problem for method parameters. Heres the recommended ordering:; http://java.sun.com/j2se/javadoc/writingdoccomments/index.html#orderoftags,3
using 3.1RC1 and JDT/Core from CVS (round about 9 Jun 2005 08:15:00 -0000 (GMT)); ; public final class A<B> {;   void doit() {;     Class<A> clazz1 = (Class<A>) this.getClass();;     Class<A<B>> clazz2 = (Class<A<B>>) clazz1;;     clazz2.getName();;   }; }; ; JDT/Core reports 2 unchecked warnings:; ; Type safety: The cast from Class<capture-of ? extends A<B>> to Class<A> is; actually checking against the erased type Class; Type safety: The cast from Class<A> to Class<A<B>> is actually checking against; the erased type Class; ; while Suns javac (1.5.0_03) gives an error:; ; A.java:5: inconvertible types; found   : java.lang.Class<A>; required: java.lang.Class<A<B>>;     Class<A<B>> clazz2 = (Class<A<B>>) clazz1;;                                        ^; ; (sorry for being probably too late for RC2),3
"AK (7/16/2001 6:53:52 PM); see title ; ; java.lang.ArrayIndexOutOfBoundsException: 0; 	at org.eclipse.jdt.internal.ui.nls.ExternalizeWizardPage$2.mouseDoubleClick(ExternalizeWizardPage.java:239); 	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java(Compiled Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled Code)); 	at org.eclipse.jface.window.Window.open(Window.java:517); 	at org.eclipse.jdt.internal.ui.nls.ExternalizeAction.run(ExternalizeAction.java:89); 	at org.eclipse.ui.internal.PluginAction.run(PluginAction.java:125); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:408); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java(Compiled Code)); 	at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code)); 	at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code)); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:622); 	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:815); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:119); 	at org.eclipse.core.launcher.Main.run(Main.java:401); 	at org.eclipse.core.launcher.Main.main(Main.java:274); ; ; NOTES:",3
"Select a project; Run-->Debug Java Application; Click on the Stop Sign; ; java.lang.InterruptedException; 	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:275); 	at org.eclipse.jface.window.ApplicationWindow.run; (ApplicationWindow.java:358); 	at ; org.eclipse.jdt.internal.debug.ui.launcher.MainMethodFinder.findTargets; (MainMethodFinder.java:61); 	at org.eclipse.jdt.internal.debug.ui.launcher.JavaApplicationAction.run; (JavaApplicationAction.java:83); 	at org.eclipse.ui.internal.PluginAction.runWithEvent; (PluginAction.java:210); 	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent; (WWinPluginAction.java:171); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection; (ActionContributionItem.java:407); 	at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent; (ActionContributionItem.java(Compiled Code)); 	at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent; (ActionContributionItem.java(Compiled Code)); 	at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent; (ActionContributionItem.java(Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1068); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:739); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:432); 	at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24)",2
When creating a new JUnit test case or suite; and that a user accepts the; proposed addition of Junit to the build path; it would be nice to have at least; the javaodc URl configured; and possibly the source code location too.; If not; you have to adjust that on a per project basis; which can be quite a; chore for large working sets; or modidy the JRE settings to add Junit in the; path and set the javadoc location JRE wide.,3
Build 200305160835; ; When opening FormattingPreferences.java in editor; its import:; import org.eclipse.jdt.internal.formatter.align.Alignment;; ; gets flagged as not resolvable; though it compiles ok.; ; Model environment seems to get inconsistent. Closing/reopening the editor ; doesnt make the problem go away.,3
If I make a junit test that needs different things on the classpath than what a ; project needs for building; and try to make a launch configuration that ; reflects that; it looks like the junit runner ignores the LC and just goes with ; the project build classpath.; ; The concrete example I can give is an EJB; which is built as a generic J2EE ; component (using suns j2ee SDK); and I want to test against Weblogic; but ; dont want to be forced to put weblogic.jar in the the build classpath.; ; If I put the vendor-specific jar (i.e. weblogic.jar) into the build path; the ; junit test runs fine.  If I put it into the launch configuration user ; classpath; the weblogic InitialContextFactory is not found (instantiated via ; reflection).  If I put it into the bootstrap classpath; the ; InitialContextFactory is found; but weblogic blows up later on in the test; ; possibly due being loaded by the bootstrap CL.; ; This problem is repeatable without J2EE app servers involved; and shows up any ; time a unit test is loading a class via reflection.  The trivial case can be ; worked around by using the boostrap classpath; but the more significant one ; cannot.,3
M4 introduced the ability to exclude Java code. But this is to restrictive. A; combination of inclusion and exclusion filter will be more usefull.; Example:;   include *.java;   exclude Test*.java; ; By default there is: include *; ; Or as an alternate solution an exclusion filter can be negated like this:;   exlude !Test*.java,3
The Open Type is one of the most usefull features in Eclipse; but it applies; only to Java types.; Can something similar to be done for any file that can be found in work space.; This could be a very usefull feature; for anybody who have a large number of; file in the workspace (in my case we are talking about more that 30k number).; ; Thank You,3
Hi;; ; When I debug a program; I can select a variable in the variables view; and its toString will appear in the details view.; ; Now I have a breakpoint at some position; and I select a variable in the variables view. If I press F8 and the program stops at the same breakpoint;; the variable is no longer selected in the variables view.; ; This is quite annoying; and I hope it can be resolved for 3.2.; Remembering the variable name and reselecting it when the program breaks again will be just enough.,3
"I found the following in my log; ; Log: Wed Feb 06 10:45:44 CST 2002; 1 org.eclipse.core.resources 4 Unhandled exception caught in event loop.; Log: Wed Feb 06 10:45:44 CST 2002; 4 org.eclipse.ui 0 java.lang.NullPointerException; java.lang.NullPointerException; 	at; org.eclipse.jdt.internal.debug.ui.JavaLocalApplicationLaunchConfigurationDelegate.verifyAndLaunch(JavaLocalApplicationLaunchConfigurationDelegate.java:328); 	at; org.eclipse.jdt.internal.debug.ui.JavaLocalApplicationLaunchConfigurationDelegate.launch(JavaLocalApplicationLaunchConfigurationDelegate.java:63); 	at; org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:59); 	at; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.handleLaunchPressed(LaunchConfigurationDialog.java:1500); 	at; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.buttonPressed(LaunchConfigurationDialog.java:286); 	at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:363); 	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java(Compiled; Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled Code)); 	at org.eclipse.jface.window.Window.open(Window.java:525); 	at; org.eclipse.debug.internal.ui.actions.ExecutionAction.runLaunchConfiguration(ExecutionAction.java:75); 	at; org.eclipse.debug.internal.ui.actions.ExecutionAction.runWithEvent(ExecutionAction.java:59); 	at; org.eclipse.debug.internal.ui.actions.LaunchDropDownAction.runWithEvent(LaunchDropDownAction.java:102); 	at org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:201); 	at; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407); 	at; org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361); 	at; org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352); 	at; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code)); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:810); 	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:781); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:323); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:151); 	at org.eclipse.core.launcher.Main.run(Main.java:502); 	at org.eclipse.core.launcher.Main.main(Main.java:362)",1
The accelerators no longer work in the scrapbook for Display/Inspect; etc.,1
200406090800; [Maybe this is CVS; if so; please forward]; ; - new workspace; check out org.eclipse.core.expressions from CVS; - open CVS Resource History for ElementHandler.java; - on rev. 1.2: context menu > Show Annotation; ; Error dialog Editor could not be initialized and log below. Editor is not opened.; ; Error Jun 09; 2004 16:51:22.705 Editor could not be initialized.; org.eclipse.ui.PartInitException[0]:; org.eclipse.jface.util.Assert$AssertionFailedException: null argument;; at org.eclipse.jface.util.Assert.isNotNull(Assert.java:139); at org.eclipse.jface.util.Assert.isNotNull(Assert.java:116); at org.eclipse.jface.util.ListenerList.add(ListenerList.java:88); at; org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.addReconcileListener(CompilationUnitEditor.java:1769); at; org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.installOverrideIndicator(CompilationUnitEditor.java:1496); at; org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.internalDoSetInput(JavaEditor.java:2735); at; org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput(JavaEditor.java:2702); at; org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput(CompilationUnitEditor.java:1485); at org.eclipse.ui.texteditor.AbstractTextEditor$14.run(AbstractTextEditor.java:2187); at; org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:303); at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:253); at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:576); at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69); at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:573); at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1622); at; org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:2201); at org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:2219); at org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:721); at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:780); at; org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManager.java:585); at org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:573); at; org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2187); at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2120); at org.eclipse.ui.internal.WorkbenchPage.access$6(WorkbenchPage.java:2112); at org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2099); at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69); at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2094); at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2077); at org.eclipse.team.internal.ccvs.ui.AnnotateView.openEditor(AnnotateView.java:354); at; org.eclipse.team.internal.ccvs.ui.AnnotateView.showAnnotations(AnnotateView.java:139); at; org.eclipse.team.internal.ccvs.ui.AnnotateView.showAnnotations(AnnotateView.java:100); at; org.eclipse.team.internal.ccvs.ui.actions.ShowAnnotationAction.execute(ShowAnnotationAction.java:88); at; org.eclipse.team.internal.ccvs.ui.actions.ShowAnnotationAction.execute(ShowAnnotationAction.java:42); at org.eclipse.team.internal.ccvs.ui.actions.CVSAction.run(CVSAction.java:70); at org.eclipse.ui.actions.ActionDelegate.runWithEvent(ActionDelegate.java:71); at org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:266); at; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:915); at; org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:866); at; org.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionContributionItem.java:785); at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82); at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796); at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2719); at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385); at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1362); at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1333); at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:252); at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141); at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96); at; org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:334); at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:272); at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39); at; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25); at java.lang.reflect.Method.invoke(Method.java:324); at org.eclipse.core.launcher.Main.basicRun(Main.java:185); at org.eclipse.core.launcher.Main.run(Main.java:638); at org.eclipse.core.launcher.Main.main(Main.java:622),3
RC3; ; - create a new workspace global formatter profile; - make it the default; - create a project; - open project specific formatter properties; ; observe: the disabled protion of the dialog shows that the default profile is a ; built in profile. IMO this is wrong.,3
It would be good to be able to configure the compiler to emit warnings on redundant modifiers (such as public on interface fields).,3
"F1.; - create new Java project; - create new class Test; - add the word Test as shown below; public class Test {; 	Test; }; ; Observe: and error appears in the overview bar but no wiggly line.; Hovering over the closing bracket shows an error hover.",3
"Build: 3.1 M7; ; I clicked Project > Generate Javadoc entirely by accident. I probably havent; tried running this in a long time (using same workspace).  I found an error like; this in my log file for each closed project in my workspace.  It looks like it; isnt correctly handling closed projects:; ; !ENTRY org.eclipse.jdt.ui 4 10001 2005-05-16 16:09:22.413; !MESSAGE Internal Error; !STACK 1; org.eclipse.core.internal.resources.ResourceException: Resource; /org.eclipse.core.resources.hpux is not open.; 	at org.eclipse.core.internal.resources.Project.checkAccessible(Project.java:127); 	at; org.eclipse.core.internal.resources.Resource.getPersistentProperty(Resource.java:924); 	at; org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations.getProjectJavadocLocation(JavaDocLocations.java:246); 	at org.eclipse.jdt.ui.JavaUI.getProjectJavadocLocation(JavaUI.java:784); 	at; org.eclipse.jdt.internal.ui.javadocexport.RecentSettingsStore.getDefaultDestination(RecentSettingsStore.java:213); 	at; org.eclipse.jdt.internal.ui.javadocexport.RecentSettingsStore.load(RecentSettingsStore.java:107); 	at; org.eclipse.jdt.internal.ui.javadocexport.RecentSettingsStore.<init>(RecentSettingsStore.java:53); 	at; org.eclipse.jdt.internal.ui.javadocexport.JavadocOptionsManager.<init>(JavadocOptionsManager.java:166); 	at; org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard.init(JavadocWizard.java:550); 	at; org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard.openJavadocWizard(JavadocWizard.java:125); 	at; org.eclipse.jdt.internal.ui.actions.GenerateJavadocAction.run(GenerateJavadocAction.java:45); 	at org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:246); 	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:223); 	at; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:538); 	at; org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488); 	at; org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:400); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2921); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2554)",3
"when stepping through rename project test i got the following:; maybe itll help to track the rename-project-does-not-refresh-package-viewer ; problem; ; Log: Tue Dec 18 11:14:43 GMT+01:00 2001; 2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-; in: org.eclipse.core.resources.; java.lang.IllegalArgumentException: Path must include project and resource name.; 	at org.eclipse.jdt.internal.core.JavaModelManager.resourceChanged; (JavaModelManager.java:1109); 	at org.eclipse.core.internal.events.NotificationManager$1.run; (NotificationManager.java:125); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:818); 	at org.eclipse.core.runtime.Platform.run(Platform.java:395); 	at org.eclipse.core.internal.events.NotificationManager.notify; (NotificationManager.java:140); 	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges; (NotificationManager.java:43); 	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges; (NotificationManager.java:64); 	at org.eclipse.core.internal.resources.Workspace.broadcastChanges; (Workspace.java:121); 	at org.eclipse.core.internal.resources.Workspace.endOperation; (Workspace.java:709); 	at org.eclipse.core.internal.resources.Project.internalMove; (Project.java:767); 	at org.eclipse.core.internal.resources.Project.move(Project.java:967); 	at ; org.eclipse.jdt.internal.corext.refactoring.changes.RenameJavaProjectChange.doRe; name(RenameJavaProjectChange.java:77); 	at ; org.eclipse.jdt.internal.corext.refactoring.AbstractJavaElementRenameChange.perf; orm(AbstractJavaElementRenameChange.java:67); 	at org.eclipse.jdt.ui.tests.refactoring.RefactoringTest.performChange; (RefactoringTest.java:123); 	at ; org.eclipse.jdt.ui.tests.refactoring.RefactoringTest.performRefactoring; (RefactoringTest.java:112); 	at org.eclipse.jdt.ui.tests.refactoring.RenameJavaProjectTests.test0; (RenameJavaProjectTests.java:48); 	at java.lang.reflect.Method.invoke(Native Method); 	at junit.framework.TestCase.runTest(TestCase.java:166); 	at junit.framework.TestCase.runBare(TestCase.java:140); 	at junit.framework.TestResult$1.protect(TestResult.java:106); 	at junit.framework.TestResult.runProtected(TestResult.java:124); 	at junit.framework.TestResult.run(TestResult.java:109); 	at junit.framework.TestCase.run(TestCase.java:131); 	at junit.framework.TestSuite.runTest(TestSuite.java:173); 	at junit.framework.TestSuite.run(TestSuite.java:168); 	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22); 	at junit.extensions.TestSetup$1.protect(TestSetup.java:19); 	at junit.framework.TestResult.runProtected(TestResult.java:124); 	at junit.extensions.TestSetup.run(TestSetup.java:23); 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests; (RemoteTestRunner.java:202); 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run; (RemoteTestRunner.java:116); 	at org.eclipse.jdt.junit.eclipse.internal.RemotePluginTestRunner.main; (RemotePluginTestRunner.java:25); 	at org.eclipse.jdt.junit.eclipse.internal.UITestApplication.runEventLoop; (UITestApplication.java:31); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:758); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:820); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:151); 	at org.eclipse.core.launcher.Main.run(Main.java:502); 	at org.eclipse.core.launcher.UIMain.main(UIMain.java:52)",3
Created attachment 142082; screen snapshot of the error message; ; The Eclipse Java editor on MS Windows saves files using the Windows-1252 (Cp1252) character encoding by default. If you mistakenly enter a character which isnt included in that character set and then try to save the file you will get the error message transcribed copied below. (To reproduce the problem try using Character Map to paste in a less-than-or-equals symbol.); ; Save Problems; Save could not be completed.; Reason:; Some characters cannot be mapped using Cp1252 character encoding.; Either change the encoding or remove the characters which are not; supported by the Cp1252 character encoding.; Input length = 1; ; The problem is that Eclipse doesnt tell you where it found the bad character. So either you have to hunt visually through the file; or experiment by deleting parts of the file until it can be saved successfully. I think this is a significant enough usability problem to be classified as a bug. Eclipse should really report the exact line number and column where the first bad character is located.,3
I20050922; ; WeakHashSet and WeakHashSetOfCharArray are currently in compiler land; but they; are used only by the model. They should be moved to the model. They can then be; generified.,3
I read somewhere that creation of generic arrays is not allowed and the results ; of JAVAC seem to confirm this.; % cat X.java; public class X; {;     public static void main(String[] args) {;         Comparable<String>[] X = {;         };;         System.err.println(X.toString()  + X.toString());; ;         Comparable<String>[] Y = new Comparable<String>[] {;         };;      }; }; % javac X.java; c:/Eclipse/Fooey/src/X.java:4: generic array creation;         Comparable<String>[] X = {;                                  ^; c:/Eclipse/Fooey/src/X.java:8: generic array creation;         Comparable<String>[] Y = new Comparable<String>[] {;                                                           ^; 2 errors; ; However 3.1M3 doesnt detect the first as a problem.,3
To flush the refactoring undo listener we are listening to Java model deltas. ; In the past we got a delta for the original CU when a working copy got saved. ; This isnt the case anymore which primary working copies since the structure ; didnt change. But to flush the undo stack we somehow need an indication that ; a CU got saved.; ; For M4 we can flush the undo listener whenever the working copy changes; which ; flushes to often but at least flushes ;-).,3
-- Error Log --; Date: Tue Aug 28 16:07:11 CEST 2007; Message: The save participant org.eclipse.jdt.ui.postsavelistener.cleanup caused an exception: org.eclipse.text.edits.MalformedTreeException: Range of child edit lies outside of parent edit; Severity: Error; Plugin ID: org.eclipse.jdt.ui; Stack Trace:; no stack trace available,2
when attempting to change a java->editor->syntax coloring preference by clicking; on the ok button an error is thrown. this causes the whole preferences dialog is; lock up. when this occurs the only way to close eclipse is via the task manager.; ; to reproduce simply start a fresh 3.1M5a build;; select windows->preferences;; select java->editor->syntax coliring;; change a property;; click ok.,3
It would be great if a variable could be defined that could represent a variable; or a list of variables. For example; I have JBoss installed and several other; libraries that are used by JBoss and my applications.; ; Id like to be able to define; JBoss=/usr/local/jboss; JBoss_J2EE=${JBoss}/lib/j2ee.jar; JBoss_JMX=${JBoss}/lib/jmx.jar; ; and also; JBoss_ALL=${JBoss}/lib:${JBoss_J2EE}:${JBoss_JMX}; ; and then use JBoss_ALL in my projects.; ; I know that I can define the three variables seperately; but I use a lot of; projects where Im using JBoss along with various other standard groupings; of Jar files. Ideally; Id prefer not to have to set up each variable for; each project that I use; but instead set up a pseudo-variable that I use; for each project type (JBoss or J2ME) which then defines a related set of; project libraries.; ; Although bug 36960 describes the idea of a project template (which in itself; it would be very handy) it wouldnt capture any changes that were made to the; template to existing projects that had already been instantiated using the; project template.; ; Perhaps this could be considered for the 3.0 release along with the fix for ; bug 36960,3
Build 20021203; ; To avoid keeping the index of several projects in memory; the index should be ; save right after it has finished indexing the project.,3
20050407; When executing the rewriter; (rewriter.rewriteAST(document; null)); CreateElementInCUOperation.apply should pass in the current projects options; instead of null,3
20030228; they should be disabled because they make no sense there,2
"Created attachment 100426; Fix; ; Turn {@inheritDoc} in Javadoc main description into a link. This is a low-risk partial solution to bug 24227 to support common cases like the addition of an @since tag in the overriding method; e.g.; 	/**; 	 * {@inheritDoc}; 	 * ; 	 * @since 3.4; 	 */; ; The link points to the Javadoc that would have been displayed without the @since or without a Javadoc comment at all.",3
20020115; This is the second time I have found myself in this state; and I know that ; Veronika got into this state once also. Neither of us had ever seen this state ; before 20020115. Originally; we were not sure what caused the state; but I ; think now that it may have something to do with loading from stream.; Please see Bug:;    http://dev.eclipse.org/bugs/show_bug.cgi?id=7894; which happened immediately before I entered this state for the second time.; ; The symptoms of the wierd state are:; - Theres an error marked against the project you were working in; - The error message in the task view says the following:;   The project was not built since it is inconsistent. Refresh this project ; then rebuild it; - You try to refresh from local and then rebuild; but the error does not go away; - You try exiting eclipse and restarting/rebuilding; but the error still stays; - The only way we have discovered to get rid of the error and get out of the ; wierd state is to delete the bin directory and rebuild.; ; I looked to see if anyone else had reported this; and the closest Bug report I ; can see is the following; but it may not be related:;    http://dev.eclipse.org/bugs/show_bug.cgi?id=5552,3
3.1; ; For example select two packages in the package explorer and open context menu.; Open Type hierarchy is missing.,3
The jdt.core batch compiler cant deal with [] brackets in classpath names. Square brackets are used for symlinks in jpackage.org packaging conventions. See this bug for some more details: ; ; https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=199961; ; I filed the bug against 3.2.1 but I think its a problem in 3.3 as well.,3
When the Breakpoint condition text field is disabled (Enable Condition is ; unchecked) the text area is read only but code assist is enabled and the ; result will be placed in the text area.,3
You can set a Packages version number (and various other attributes) by writing; them in the MANIFEST.MF file. Java.lang.Package will then read them from the; Manifest.; However; Java.lang.Package assumes the MANIFEST.MF must be the first or second; entry in the jar. This is an undocumented dependency. Sun bug report 4405744; discusses this further. ; Eclipse appears to put the Manifest last in the .jar and Java.lang.Package does; not work on jars from Eclipse (actually this was directly tested on jars from WSAD).,3
Build 20030214; ; Searching for type reference to Throwable in jdt.core with in case ; insensitive mode throws the following NPE:; ; Caused by: java.lang.NullPointerException;         at ; org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.resolveTypeFor; (SourceTypeBinding.java:763);         at org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getField; (SourceTypeBinding.java:491);         at org.eclipse.jdt.internal.compiler.lookup.Scope.findField; (Scope.java:196);         at org.eclipse.jdt.internal.compiler.lookup.MethodScope.findField; (MethodScope.java:331);         at org.eclipse.jdt.internal.compiler.lookup.BlockScope.getBinding; (BlockScope.java:445);         at ; org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.resolveType; (QualifiedNameReference.java:720);         at org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.resolve; (ExplicitConstructorCall.java:245);         at ; org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.resolveStatements; (ConstructorDeclaration.java:392);         at ; org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve; (AbstractMethodDeclaration.java:309);         at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve; (TypeDeclaration.java:789);         at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve; (TypeDeclaration.java:830);         at ; org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve; (CompilationUnitDeclaration.java:259);         at org.eclipse.jdt.internal.core.search.matching.MatchLocator2.process; (MatchLocator2.java:950);         at ; org.eclipse.jdt.internal.core.search.matching.MatchLocator2.locateMatches; (MatchLocator2.java:663);         at ; org.eclipse.jdt.internal.core.search.matching.MatchLocator2.locateMatches; (MatchLocator2.java:835);         at org.eclipse.jdt.core.search.SearchEngine.search; (SearchEngine.java:470);         at org.eclipse.jdt.internal.ui.search.JavaSearchOperation.execute; (JavaSearchOperation.java:86);         at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run; (WorkspaceModifyOperation.java:65);         at org.eclipse.core.internal.resources.Workspace.run; (Workspace.java:1588);         at org.eclipse.ui.actions.WorkspaceModifyOperation.run; (WorkspaceModifyOperation.java:79);         at org.eclipse.jface.operation.ModalContext$ModalContextThread.run; (ModalContext.java:95),3
Currently only .jar or .zip files may be added to the classpath via Libraries.; Even tampering manually with .classpath doesnt help :-); ; Sometimes files need to be included in the classpath (e.g. log4j.xml) which; shouldnt be exported to other projects.; ; If the file would be in src it would be exported; defeating the purpose of; having one log4j.xml per project.; ; Creating an additional class folder in which the log4j.xml would reside doesnt; work either ( actually it works as if it would be in src which may be a bug by; itself ).; Even if it would work it would still be counterintuitive.; ; If a script is used to start the same application adding log4j.xml to the; classpath works seemless.,3
What steps will reproduce the problem?; 1. ; 2. ; 3. ; ; ; -- Error Details --; Date: Thu Mar 18 19:45:16 CDT 2010; Message: Problems occurred when invoking code from plug-in: org.eclipse.core.resources.; Severity: Error; Product: Eclipse SDK 3.6.0.v201003062000 (org.eclipse.sdk.ide); Plugin: org.eclipse.core.resources; Session Data:; eclipse.buildId=N20100306-2000; java.version=1.6.0_17; java.vendor=Apple Inc.; BootLoader constants: OS=macosx; ARCH=x86; WS=cocoa; NL=en_US; Framework arguments:  -keyring /Users/chrisaniszczyk/.eclipse_keyring -showlocation; Command-line arguments:  -os macosx -ws cocoa -arch x86 -keyring /Users/chrisaniszczyk/.eclipse_keyring -showlocation; ; ; Exception Stack Trace:; java.lang.NullPointerException; at org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingTypeInMethod(ProblemReporter.java:5113); at org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:448); at org.eclipse.jdt.internal.compiler.ast.ReturnStatement.resolve(ReturnStatement.java:221); at org.eclipse.jdt.internal.compiler.ast.Block.resolve(Block.java:90); at org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve(IfStatement.java:263); at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:451); at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:212); at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:410); at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1147); at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1226); at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1046); at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1235); at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:531); at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:759); at org.eclipse.jdt.internal.compiler.ProcessTaskManager.run(ProcessTaskManager.java:137); at java.lang.Thread.run(Thread.java:637),3
"Given the method:; ; 	private void test(Collection c) {; 		for (Object o : c) ; 			System.out.println(o.toString());; 	}; ; If you attempt to extract o.toString() as a local variable; it is placed outside the for loop.; ; The refactoring should create braces for the for loop and place the local variable inside.",3
(This is in 3.1 RC1.) The build path of a project in my workspace includes a 48; Mb jar with 30;000 files in it scattered among 1000-2000 packages. (The jar file; is proprietary so I cant attach it.) The Java editor frequently indicates that; references to classes in this jar cannot be resolved; even though the classes; are there. The attached stack trace shows what seems to be the root cause of; this behavior. (The JavaModelException is caught and ignored.),3
"I20061114-1636; ; - import org.eclipse.ui.workbench as binary plug-in; - search for references to type EventLoopProgressMonitor; - expand package org.eclipse.ui.internal.progress in Search view; -> theres an invalid type new Anonymous:; ; Java Model Exception: Java Model Status [ is not a valid Java identifier]; 	at org.eclipse.jdt.internal.core.JavaElement.newJavaModelException(JavaElement.java:494); 	at org.eclipse.jdt.internal.core.ClassFile.buildStructure(ClassFile.java:84); 	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:229); 	at org.eclipse.jdt.internal.core.BinaryMember.generateInfos(BinaryMember.java:44); 	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:505); 	at org.eclipse.jdt.internal.core.BinaryType.getElementInfo(BinaryType.java:259); 	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:235); 	at org.eclipse.jdt.internal.core.BinaryType.getFlags(BinaryType.java:291); 	at org.eclipse.jdt.internal.ui.viewsupport.JavaElementImageProvider.getBaseImageDescriptor(JavaElementImageProvider.java:217); 	at org.eclipse.jdt.internal.ui.viewsupport.JavaElementImageProvider.getJavaImageDescriptor(JavaElementImageProvider.java:154); 	at org.eclipse.jdt.internal.ui.viewsupport.JavaElementImageProvider.computeDescriptor(JavaElementImageProvider.java:114); 	at org.eclipse.jdt.internal.ui.viewsupport.JavaElementImageProvider.getImageLabel(JavaElementImageProvider.java:95); 	at org.eclipse.jdt.internal.ui.viewsupport.JavaUILabelProvider.getImage(JavaUILabelProvider.java:138); 	at org.eclipse.jdt.internal.ui.search.PostfixLabelProvider.getImage(PostfixLabelProvider.java:33); 	at org.eclipse.jface.viewers.DecoratingLabelProvider.getImage(DecoratingLabelProvider.java:85); 	at org.eclipse.jface.viewers.DecoratingLabelProvider.updateLabel(DecoratingLabelProvider.java:234); 	at org.eclipse.jface.viewers.DecoratingLabelProvider.update(DecoratingLabelProvider.java:415); 	at org.eclipse.jface.viewers.ViewerColumn.refresh(ViewerColumn.java:91); 	at org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:167); 	at org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:96); 	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37); 	at org.eclipse.core.runtime.Platform.run(Platform.java:850); 	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:44); 	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:153); 	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:892); 	at org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:465); 	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37); 	at org.eclipse.core.runtime.Platform.run(Platform.java:850); 	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:44); 	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:153); 	at org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:1977); 	at org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem(AbstractTreeViewer.java:796); 	at org.eclipse.jface.viewers.AbstractTreeViewer$1.run(AbstractTreeViewer.java:774); 	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67); 	at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:748); 	at org.eclipse.jface.viewers.TreeViewer.createChildren(TreeViewer.java:794); 	at org.eclipse.jface.viewers.AbstractTreeViewer.handleTreeExpand(AbstractTreeViewer.java:1300); 	at org.eclipse.jface.viewers.TreeViewer.handleTreeExpand(TreeViewer.java:1049); 	at org.eclipse.jface.viewers.AbstractTreeViewer$4.treeExpanded(AbstractTreeViewer.java:1311); 	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:181); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:927); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:951); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:936); 	at org.eclipse.swt.widgets.Tree.wmNotifyChild(Tree.java:6548); 	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:4263); 	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:1480); 	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:3916); 	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3424); 	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4132); 	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method); 	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2050); 	at org.eclipse.swt.widgets.Tree.callWindowProc(Tree.java:1346); 	at org.eclipse.swt.widgets.Tree.WM_LBUTTONDOWN(Tree.java:5397); 	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3405); 	at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:4976); 	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4145); 	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method); 	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2136); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3075); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1936); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1900); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:422); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149); 	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95); 	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78); 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:104); 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:74); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:348); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:165); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25); 	at java.lang.reflect.Method.invoke(Method.java:585); 	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:341); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:285); 	at org.eclipse.core.launcher.Main.run(Main.java:987); 	at org.eclipse.core.launcher.Main.main(Main.java:962)",3
3.1 RC2; ; Pref page search: colors should give same result as color,3
"Scenario:; 1. Put a breakpoint in a source.; 2. Launch; 3. After stopping on the breakpoint - resume (the code execution finished); 4. Launch for the second time.; ; Expected: The debugger should stop on the breakpoint; Actual: The debugger stops on the breakpoint and immediately after that the call stack disappears (but the jvm is still working). Any consequent relaunching leads to the same error.; ; ; ; StackTrace:; ; java.lang.NullPointerException; 	at org.eclipse.jdt.internal.debug.core.model.JDIVoidValue.<init>(JDIVoidValue.java:26); 	at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.voidValue(JDIDebugTarget.java:1761); 	at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.getResult(Interpreter.java:156); 	at org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$EvalRunnable.run(ASTEvaluationEngine.java:522); 	at org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run(JDIThread.java:2614); 	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55); ; ; ; ; After restarting of the Eclipse - it works again (but only for the first time).",3
BETA_JAVA8:; ; The following tests were disabled as a part of migrating to b74; as the test environment. These failures need to be investigated; to (a) massage the tests where needed; (b) raise suitable bugs if; eclipse behavior is at variance with the spec/reference compiler:; ; org.eclipse.jdt.core.tests.compiler.regression.ForeachStatementTest._test023(); org.eclipse.jdt.core.tests.compiler.regression.ForeachStatementTest._test034(); org.eclipse.jdt.core.tests.compiler.regression.ForeachStatementTest._test035(); org.eclipse.jdt.core.tests.compiler.regression.ForeachStatementTest._test036(); org.eclipse.jdt.core.tests.compiler.regression.ForeachStatementTest._test039(); org.eclipse.jdt.core.tests.compiler.regression.ForeachStatementTest._test040(); ; org.eclipse.jdt.core.tests.compiler.regression.MethodVerifyTest._test091(); org.eclipse.jdt.core.tests.compiler.regression.MethodVerifyTest._test092(); org.eclipse.jdt.core.tests.compiler.regression.MethodVerifyTest._test093(); org.eclipse.jdt.core.tests.compiler.regression.MethodVerifyTest._test331446(); org.eclipse.jdt.core.tests.compiler.regression.MethodVerifyTest._test331446a(); org.eclipse.jdt.core.tests.compiler.regression.MethodVerifyTest._test203(); org.eclipse.jdt.core.tests.compiler.regression.MethodVerifyTest._test026b(); ; org.eclipse.jdt.core.tests.compiler.regression.AmbiguousMethodTest._test009(); ; org.eclipse.jdt.core.tests.compiler.regression.GenericTypeTest._test0635(); org.eclipse.jdt.core.tests.compiler.regression.GenericTypeTest._test0146(); org.eclipse.jdt.core.tests.compiler.regression.GenericTypeTest._test0779(); org.eclipse.jdt.core.tests.compiler.regression.GenericTypeTest._test0809(); org.eclipse.jdt.core.tests.compiler.regression.GenericTypeTest._test0204(); org.eclipse.jdt.core.tests.compiler.regression.GenericTypeTest._test0868(); org.eclipse.jdt.core.tests.compiler.regression.GenericTypeTest._test1030(); org.eclipse.jdt.core.tests.compiler.regression.GenericTypeTest._test1035(); org.eclipse.jdt.core.tests.compiler.regression.GenericTypeTest._test0443(); org.eclipse.jdt.core.tests.compiler.regression.GenericTypeTest._test1444(); org.eclipse.jdt.core.tests.compiler.regression.GenericTypeTest._test0298(); org.eclipse.jdt.core.tests.compiler.regression.GenericTypeTest._test0361(); org.eclipse.jdt.core.tests.compiler.regression.GenericTypeTest._test0379(); ; org.eclipse.jdt.core.tests.compiler.regression.LookupTest._test075(); org.eclipse.jdt.core.tests.compiler.regression.InnerEmulationTest._test173(); org.eclipse.jdt.core.tests.compiler.regression.InnerEmulationTest._test174(); org.eclipse.jdt.core.tests.compiler.regression.StackMapAttributeTest._test018(); org.eclipse.jdt.core.tests.compiler.regression.DefaultMethodsTest._testModifiers5,3
Build ID: I20080617-2000; ; Steps To Reproduce:; 1. Place an @category _identifier_ annotation in javadoc; which allows the Outline view to see it and categorize elements in its tree. Do not use public; etc; as a category identifier; use something like preferred.; 2. Format the source file.; 3. Note that the javadoc nature of the comments has been removed (/** becomes /*). Note that the outline view no longer shows categories. ; ; ; More information:; The core formatter code has special case code for category; but appears to simply delete the tag rather than leave it alone.,3
Build: I-20030317; I was switching back and forth between target platform and classpath variables ; preference pages; changing values on target platform page and seeing if changes ; are reflected on classpath variables page.; At some point; I got the following null pointer:; java.lang.NullPointerException; at ; org.eclipse.jdt.internal.ui.wizards.buildpaths.CPVariableElementLabelProvider.ge; tImage(CPVariableElementLabelProvider.java:55); at org.eclipse.jface.viewers.TableViewer.doUpdateItem(TableViewer.java:202); at org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run; (StructuredViewer.java:119); at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:867); at org.eclipse.core.runtime.Platform.run(Platform.java:413); at org.eclipse.jface.viewers.StructuredViewer.updateItem; (StructuredViewer.java:1271); at org.eclipse.jface.viewers.TableViewer.internalRefresh(TableViewer.java:454); at org.eclipse.jface.viewers.TableViewer.internalRefresh(TableViewer.java:431); at org.eclipse.jface.viewers.StructuredViewer$7.run(StructuredViewer.java:861); at org.eclipse.jface.viewers.StructuredViewer.preservingSelection; (StructuredViewer.java:801); at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:859); at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:821); at org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField.refresh; (ListDialogField.java:739); at org.eclipse.jdt.internal.ui.wizards.buildpaths.VariableBlock.refresh; (VariableBlock.java:406); at ; org.eclipse.jdt.internal.ui.preferences.ClasspathVariablesPreferencePage.setVisi; ble(ClasspathVariablesPreferencePage.java:80); at org.eclipse.jface.preference.PreferenceDialog.showPage; (PreferenceDialog.java:1064); at org.eclipse.jface.preference.PreferenceDialog$9.run; (PreferenceDialog.java:496),2
"Try in Eclipse to open the classfile attached to this bug ticket.; ; See this crash:; ; org.eclipse.core.runtime.CoreException: The Class File Viewer cannot handle ; the given input.; 	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.doSetInput; (ClassFileEditor.java:612); 	at org.eclipse.ui.texteditor.AbstractTextEditor$17.run; (AbstractTextEditor.java:2375); 	at org.eclipse.jface.operation.ModalContext.runInCurrentThread; (ModalContext.java:346); 	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291); 	at org.eclipse.jface.window.ApplicationWindow$1.run; (ApplicationWindow.java:631); 	at org.eclipse.swt.custom.BusyIndicator.showWhile; (BusyIndicator.java:69); 	at org.eclipse.jface.window.ApplicationWindow.run; (ApplicationWindow.java:628); 	at org.eclipse.ui.internal.WorkbenchWindow.run; (WorkbenchWindow.java:2137); 	at org.eclipse.ui.texteditor.AbstractTextEditor.internalInit; (AbstractTextEditor.java:2393); 	at org.eclipse.ui.texteditor.AbstractTextEditor.init; (AbstractTextEditor.java:2420); 	at org.eclipse.ui.internal.EditorManager.createSite; (EditorManager.java:764); 	at org.eclipse.ui.internal.EditorReference.createPartHelper; (EditorReference.java:586); 	at org.eclipse.ui.internal.EditorReference.createPart; (EditorReference.java:374); 	at org.eclipse.ui.internal.WorkbenchPartReference.getPart; (WorkbenchPartReference.java:552); 	at org.eclipse.ui.internal.EditorReference.getEditor; (EditorReference.java:213); 	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched; (WorkbenchPage.java:2370); 	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor; (WorkbenchPage.java:2303); 	at org.eclipse.ui.internal.WorkbenchPage.access$10; (WorkbenchPage.java:2295); 	at org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2281); 	at org.eclipse.swt.custom.BusyIndicator.showWhile; (BusyIndicator.java:69); 	at org.eclipse.ui.internal.WorkbenchPage.openEditor; (WorkbenchPage.java:2276); 	at org.eclipse.ui.internal.WorkbenchPage.openEditor; (WorkbenchPage.java:2249); 	at org.eclipse.ui.internal.editors.text.OpenExternalFileAction.run; (OpenExternalFileAction.java:129); 	at org.eclipse.ui.internal.editors.text.OpenExternalFileAction.run; (OpenExternalFileAction.java:98); 	at org.eclipse.ui.internal.PluginAction.runWithEvent; (PluginAction.java:251); 	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent; (WWinPluginAction.java:223); 	at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection; (ActionContributionItem.java:538); 	at org.eclipse.jface.action.ActionContributionItem.access$2; (ActionContributionItem.java:488); 	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent; (ActionContributionItem.java:400); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:884); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3194); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2823); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1755); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1719); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench; (Workbench.java:368); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143); 	at org.eclipse.ui.internal.ide.IDEApplication.run; (IDEApplication.java:106); 	at org.eclipse.core.internal.runtime.PlatformActivator$1.run; (PlatformActivator.java:226); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run; (EclipseStarter.java:377); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run; (EclipseStarter.java:164); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source); 	at java.lang.reflect.Method.invoke(Unknown Source); 	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:338); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:282); 	at org.eclipse.core.launcher.Main.run(Main.java:977); 	at org.eclipse.core.launcher.Main.main(Main.java:952)",3
From watching the UI update itself in the Types view; I see the Class icon with; a right-handed triangle decorator in the lower right hand corner of the icon; which then becomes the repository icon decorator. So if your types are in a; repository you cannot tell which ones have a main(String[]).,3
Since 3.0; runtime supports running plugins in a jared form (equivalent of; zipping the content of a plugin folder); and a derived form of this where the; class files are available as siblings of the plugin.xml.; ; Since 3.1; first class tooling for those two cases are being added; however some; support would be required from the jdt team (I think Jerome) to be able to find; the source which would be a zip in a jar.; ; For example:;  P1.jar contains;    plugin.xml (classpath is .);    a/b/A.class;    a/b/B.class;    src.zip (<-- a zip containing the source of A.class and B.class); ; The motivation for asking you this support is the following:; If we have the source directly intermixed with the binaries then the java files; and other resources will appear on the classpath at runtime.,3
Sync on a project with incoming changes. Select a .java file. The new method; icon in the structure compare viewer consists of a page with an M and a; right-facing green arrow.; ; The arrow is very confusing; especially when combined with arrows that actually; have meaning; such as the left-facing incoming change arrow.; ; Strongly recommend that the arrow is removed from the icon and any other icon; where it does not actually indicate something directional in nature.,3
We should consider using a stack frames default stratum when looking up ; source rather than using the VMs default stratum. This allows us to lookup ; source from different stratum for a single debug session; and means the user ; (isv) does not have to configure the stratum in order to get the relevant ; source. However; we should allow the stratum to be set on the ; JavaSourceLookupParticiapant; such that source can be viewed for a particular ; stratum.,3
org.eclipse.jdt.compiler.tool is missing its compiler_tool_fragment.properties file; ; org.eclipse.jdt.apt.pluggable.core is missing its plugin.properties in the SDK.; ; These files must be checked in the Binary Build section of the build.properties editor of the corresponding plug-ins.,3
N20090212-2000.; ; <char> + * returns null from SearchPattern.getMatchingRegions(String; String; int),3
As far as I can tell; there is no way for a space to be entered in the VM ; arguments section. For example; attempting to add the VM argument:; ; -Duser.home=C:\My Documents; ; Results in a Could not find the main class. Program will exit! error since ; its trying to execute the Documents portion of the command line (java ; thinks thats the class with the main method). Ive tried everything to get ; spaces to work; including \; \b; \u0020; etc.; ; This is a show-stopper folks; and needs to be fixed if we are to use it here ; at work.; ; Thanks...,2
4.2 M3.; ; Consider the following code:; ;  public void handle(ServletResponse response) throws IOException {;   PrintWriter writer = response.getWriter();//resource leak reported here;   writer.write(Hello);;   writeMore(response);;  }; ;  private void writeMore(ServletResponse response) throws IOException {;   response.getWriter().write( World);;  }; ; JDT is reporting a resource leak error here; but in fact it is not because the writer was not created in that scope and it is not my responsibility to close it. If you obtained a closeable from a method call; the method contract might state that it is not the callers responsibility to close it. This is common in servlet programming where the servlet container is responsible for closing any streams after invoking the servlet.; ; I would be ok with this being reported as a potential leak; rather than a definite leak.,3
"AK (6/5/01 6:22:10 PM); 	add import should be disabled in the editor popup menu if nothing is selected; ; NOTES:; MA (07.08.2001 15:10:09); 	fixed in 200",3
Given the following class:; ; package p;; import org.foo.*; // here we have type annotations for nullity; public abstract class X1 {;     public class Inner {};     public void nesting(@NonNull Inner i1; @NonNull X1.@Nullable Inner i2) { }; }; ; This currently generates the following byte code:; ;   public void nesting(p.X1$Inner; p.X1$Inner);; ;   ...; ;   RuntimeInvisibleTypeAnnotations:;       0: #19(): METHOD_FORMAL_PARAMETER; param_index=0;       1: #19(): METHOD_FORMAL_PARAMETER; param_index=1;       2: #27(): METHOD_FORMAL_PARAMETER; param_index=1; location=[INNER_TYPE];   ...; ; AFAICS the first annotation is wrong; it should have the same shape as the last one.; ; In 3.4 the spec says:; The type path that is stored in the class file is with respect to the full type; not the source code representation. ...; ... and goes on explaining.; ; The full type of the first formal parameter is correctly rendered as p.X1$Inner (see ; the method signature); accordingly the type annotation for Inner should be marked with; location=[INNER_TYPE]; no?,3
"20050104; ; In the following code the annotations (@Override @Annot and argument; value) dont have bindings. ; ; public class B {; 	@Override @Annot(value=Hello) public String toString() {; 		return super.toString();; 	}; 	; 	; 	@interface Annot {; 		String value();; 	}; }",3
"I20030930: When using the Rename refactoring with the preference Enable ; refactoring participants disabled(!) and the Java family example plugin ; installed from older builds; evaluating the participant descriptor from one of ; the rename participants in the example plugin gives an NPE.; ; java.lang.NullPointerException; 	at ; org.eclipse.jdt.internal.corext.refactoring.participants.xml.CompositeExpressio; n.evaluateAnd(CompositeExpression.java:46); 	at ; org.eclipse.jdt.internal.corext.refactoring.participants.xml.ObjectStateExpress; ion.evaluate(ObjectStateExpression.java:45); 	at ; org.eclipse.jdt.internal.corext.refactoring.participants.ParticipantDescriptor.; matches(ParticipantDescriptor.java:75); 	at ; org.eclipse.jdt.internal.corext.refactoring.participants.ExtensionManager.getPa; rticipants(ExtensionManager.java:153); 	at ; org.eclipse.jdt.internal.corext.refactoring.participants.RenameExtensionManager; .getParticipants(RenameExtensionManager.java:31); 	at ; org.eclipse.jdt.internal.corext.refactoring.rename.RenameRefactoring.checkActiv; ation(RenameRefactoring.java:133); 	at org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run; (CheckConditionsOperation.java:63); 	at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.inte; rnalRun(BusyIndicatorRunnableContext.java:113); 	at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run; (BusyIndicatorRunnableContext.java:80); 	at org.eclipse.swt.custom.BusyIndicator.showWhile; (BusyIndicator.java:84); 	at org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run; (BusyIndicatorRunnableContext.java:126); 	at ; org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.checkActivat; ion(RefactoringStarter.java:66); 	at ; org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate; (RefactoringStarter.java:46); 	at ; org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.activate; (UserInterfaceStarter.java:112); 	at ; org.eclipse.jdt.internal.ui.refactoring.reorg.RenameUserInterfaceStarter.activa; te(RenameUserInterfaceStarter.java:111); 	at org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.run; (UserInterfaceStarter.java:68); 	at org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.run; (UserInterfaceStarter.java:46); 	at ; org.eclipse.jdt.internal.ui.refactoring.reorg.RenameRefactoringAction.run; (RenameRefactoringAction.java:73); 	at ; org.eclipse.jdt.internal.ui.refactoring.reorg.RenameRefactoringAction.run; (RenameRefactoringAction.java:54); 	at org.eclipse.jdt.ui.actions.RenameAction.run(RenameAction.java:118); 	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun; (SelectionDispatchAction.java:194); 	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run; (SelectionDispatchAction.java:172); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842); 	at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection; (ActionContributionItem.java:543); 	at org.eclipse.jface.action.ActionContributionItem.access$4; (ActionContributionItem.java:496); 	at org.eclipse.jface.action.ActionContributionItem$6.handleEvent; (ActionContributionItem.java:468); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2173); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1863); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2106); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:2089); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:858); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke; (NativeMethodAccessorImpl.java:39); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke; (DelegatingMethodAccessorImpl.java:25); 	at java.lang.reflect.Method.invoke(Method.java:324); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:298); 	at org.eclipse.core.launcher.Main.run(Main.java:764); 	at org.eclipse.core.launcher.Main.main(Main.java:598)",3
Base is an interface in the unnamed package:; ; public interface Base; {;     /**;      * This is a method;      */;     public abstract void other();; }; ; Sub is a class created without the other() method in it (generating an error). ; Then quick-fixed to add unimplemented methods.; ; Added code is:; ; /* (non-Javadoc);      * @see .Base#other();      */;     public void other();     {;         // TODO Auto-generated method stub;     }; ; Sub2 is a class generated with method stubs for Inherited abstract methods ; switched on:; ; public class Sub2 implements Base; {; ;     /* (non-Javadoc);      * @see Base#other();      */;     public void other();     {;         // TODO Auto-generated method stub; ;     }; ; };  ; ; Note the difference in the generated comments.; ; Eclipse version:; Version: 2.1; Build id: 200302110800; ; from eclipse-SDK-I20030211-win32.zip,3
Build Identifier: 20110615-0604; ; When cleaning up code and I often need to delete unused methods. Deleting a method using the outline just deletes the current implementation/definition without affecting subclasses/implementing types.; ; A hack for deleting concrete methods (shamelessly stolen from http://stackoverflow.com/questions/4700015/i-cant-delete-a-method-using-eclipse-refactoring) is to perform the Inline method refactoring after deleting the method body manually - but this does not work for abstract methods since inlining those obviously is not possible.; ; Since the Change method signature refactoring is already able to locate all call sites for a given method; implementing this should not be too hard (i guess).; ; Reproducible: Always,3
Although the new code formatter is good; there is one annoyance that I have ; spotted that I cant see logged elsewhere.; ; I like to format my lines to have spaces in-between brackets (see code below); ; and it would seem that the formatter preferences allow this configuration.; ;     // Desired results;     System.out.println( title +  world ); //$NON-NLS-1$;     System.out.println( test.toString() );; ; However; if I format these statements; the space before the closing bracket is ; removed; leaving:; ;     // Wrong results - space removed before ); construct;     System.out.println( title +  world); //$NON-NLS-1$;     System.out.println( test.toString());; ; This formatting behaviour happens consistently on method calls; but not ; constructor calls - which format properly.; ; I have played with various options to see if this is a case where one option ; is overriding another; but cant resolve it.; ; Ian,3
Debugger VM will not connect if not logged on to internet. Suspect that this ; will  occur on all machines that do not have network card,3
I did a hierarchy view on a class. The hierarchy view was a docked view in the; java perspective. Then I went to another tab in the same tab group where the; hierarchy view was docked. Then I shut down Eclipse. When I restarted Eclipse; and selected the hierarchy view tab; expecting that it will not show any; hierarchy; the tree structure for the old class came up. This means that certain; amount of memory was being used for this operation. Also in one case; the tree; was very deep - almost 4 to 5 levels; and each level having multiple sub classes.; Can this memory between sessions be erased? Also it would be good; if we could; erase the results (one by one or all at once) - just like the search view.,4
Build ID: I20080226-1155; ; 1. Open a Java file with the Java editor.; 2. Make sure Toggle Mark Occurrences is on.; 3. Select a field; see that it is highlighted properly.; 4. Bring up the context menu on the editors tab; select New Editor. A new editor shows up selecting and highlighting that same field.; 5. Move the cursor to another field or method. That now gets highlighted; but the old field is also highlighted. So you are now seeing two things being highlighted.,3
"I20071030-0010; ; Given org.eclipse.jdt.text.tests from head; 1. Open project properties; 2. Go to java compiler property page; 3. Change compiler compliance level to 1.4; 4. Apply; 5. OK; Is:; java.lang.IllegalStateException: Preference node org.eclipse.jdt.ui has been removed.; 	at org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java:157); 	at org.eclipse.core.internal.preferences.EclipsePreferences.internalGet(EclipsePreferences.java:513); 	at org.eclipse.core.internal.preferences.EclipsePreferences.get(EclipsePreferences.java:364); 	at org.eclipse.ui.internal.preferences.WorkingCopyPreferences.internalGet(WorkingCopyPreferences.java:191); 	at org.eclipse.ui.internal.preferences.WorkingCopyPreferences.get(WorkingCopyPreferences.java:180); 	at org.eclipse.jdt.internal.ui.preferences.OptionsConfigurationBlock$Key.getStoredValue(OptionsConfigurationBlock.java:99); 	at org.eclipse.jdt.internal.ui.preferences.OptionsConfigurationBlock$Key.getStoredValue(OptionsConfigurationBlock.java:104); 	at org.eclipse.jdt.internal.ui.preferences.OptionsConfigurationBlock.getValue(OptionsConfigurationBlock.java:612); 	at org.eclipse.jdt.internal.ui.preferences.OptionsConfigurationBlock.setValue(OptionsConfigurationBlock.java:624); 	at org.eclipse.jdt.internal.ui.preferences.ComplianceConfigurationBlock.performApply(ComplianceConfigurationBlock.java:660); 	at org.eclipse.jdt.internal.ui.preferences.CompliancePreferencePage.performApply(CompliancePreferencePage.java:139); 	at org.eclipse.jface.preference.PreferencePage$2.widgetSelected(PreferencePage.java:284); 	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:227); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:947); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3744); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3355); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:825); 	at org.eclipse.jface.window.Window.open(Window.java:801); 	at org.eclipse.ui.dialogs.PropertyDialogAction.run(PropertyDialogAction.java:156); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580); 	at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:498); 	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:410); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:947); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3744); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3355); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2395); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2359); 	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2225); 	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:468); 	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:288); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:463); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149); 	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106); 	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:193); 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106); 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:362); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:175); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25); 	at java.lang.reflect.Method.invoke(Method.java:585); 	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:515); 	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:455); 	at org.eclipse.equinox.launcher.Main.run(Main.java:1193); 	at org.eclipse.equinox.launcher.Main.main(Main.java:1169); 	at org.eclipse.core.launcher.Main.main(Main.java:30)",3
Following a JDT/Core change. Preference pages already support it.,3
Refactoring hides fields:; ; The field InstanceMethodMover.Method.Delegation.fNewReceiver is hiding a field; from type InstanceMethodMover; ; The field; InlineConstantRefactoring.InlineTargetCompilationUnit.InitializerExpressionRelocationPreparer.InitializerTraversal.fInitializer; is hiding a field from type InlineConstantRefactoring.InlineTargetCompilationUnit ; ; The field; InlineConstantRefactoring.InlineTargetCompilationUnit.InitializerExpressionRelocationPreparer.fInitializer; is hiding a field from type InlineConstantRefactoring,3
build 20020514; ; Fresh workspace. Import all plug-ins from the runtime Eclipse. Compile ; problems show up in all UI plug-ins that have fragments. The solution is to ; delete all these plug-ins and import one at a time. Plug-ins first followed by ; the fragments.,3
The java model automatically discovers source root paths within source ; archives. The debugger does not (and the UI for setting source root paths has ; been removed). To be consistent with the Java UI; we use the same dialog for ; setting source attachments as the Java UI; and thus the ArchiveSourceLocation ; needs to auto-discover source root paths too.,2
Applying source/format in source code does not split lines in comments (both; normal and javadoc comments).,3
If I have code like the following:; ; StringBuffer myBuf = new StringBuffer();; ; myBuf.append(first).append(second).append(third);; ; I would usually want to format it as; ; myBuf.append(first);     .append(second);     .append(third); ; ..or possibly with the first line also wrapped. Currently; no combination of; line wrapping settings will cause this to happen. Even if force split is; combined with the available wrapping options; the entire line is only wrapped; as neccessary. When method calls are not chained; the splitting and wrapping; occurs correctly.; ; It appears that a chain of method calls is not being subjected to the line; wrapping rules for function calls (or at least; is not formatting as would be; expected).; ; An image will be attached showing a long chain of method calls being incorrectly; formatted. The formatting shown is constant regardless of line wrapping settings.,3
Below are the contents of the preferences file I am trying to import.  To reproduce; you may need to change the location of the JRE since you probably dont have it installed in the directory I do.; ; ------------------------------; #Wed Jan 04 09:20:23 PST 2006; file_export_version=3.0; ; @org.eclipse.jdt.launching=3.1.0; #Java > Installed JREs; /instance/org.eclipse.jdt.launching/org.eclipse.jdt.launching.PREF_VM_XML=<?xml version\=1.0 encoding\=UTF-8?>\r\n<vmSettings defaultVM\=57;org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType13;1136396225475>\r\n<vmType id\=org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType>\r\n<vm id\=1136396225475 javadocURL\=http\://java.sun.com/j2se/1.5.0/docs/api/ name\=jdk1.5.0_04 path\=C\:\\ngp_tools\\jdk1.5.0_04 vmargs\=-ea/>\r\n</vmType>\r\n</vmSettings>\r\n; ; \!/instance=; ---------------------------; To reproduce:; 1. Create a new workspace.; 2. Import a preference file.; 3. Open the preference window and view the JREs; ; Expected:; To see one JRE jdk1.5.0_04 and that JRE is configured with the default argument of -ea.,3
Click on the Java Development User Guide doc; ; Expand Reference; ; Expand Wizards; ; Click on Javadoc Generations; ; At the bottom of the page; click on Javadoc preferences; the link is not found.; ; See attached screenshot,3
create 2 files:; A.java; class X { //note the name is different than cus name; }; ; B.java; class B extends X{;  void f(){;    /*[*/f();/*]*/;  }; }; ; try extracting the selected code - youll see a message saying that X cannot be ; resolved. this problem is incorrectly reported and never shows up in the task ; list.; ; maybe the same old dance that you did with other problems like that would help ; here too?,3
Opened a hierarchy on A.; Caught up to incoming changes; causing B; a subclass of A; to be deleted.; The class B still appears in the hierarchy; although double-click results in ; a Cannot open element/B.java does not exist dialog.; I think that it should be deleted from the hierarchy automatically.,2
200412011139:; ; Steps to reproduce:; - Create 1.5 project with classes:; package a;; public class A {;   public void foo(){}; }; ; package b;; public class B {;   public void bar(A a; int f) {;     a.foo();;   }; }; ; - Invoke Move Method on bar,3
Created attachment 83122; Refactoring script to move com.example.MoveMe between projects; ; Build ID: I20070625-1500; ; Steps To Reproduce:; 1. Set-up two projects; From; and To.  Create a new package com.examples in both projects.  Create new Java class com.example.MoveMe in From. ; ; 2. Drag MoveMe from project Froms com.example to project Tos com.example.  Move dialog appears; click OK.; ; 3. Refactor->Create Script.  Create script refactoring.xml with all From project refactorings (Move compilation unit).; ; 4. Edit -> Undo Move to move MoveMe back into From.; ; 5. Refactor -> Apply Script.  Click Finish in Refactoring wizard.; ; 6. Wizard page with Found Problems:  A file or folder cannot be moved to its own parent.; ; Expected result: Refactoring applies; resulting in ; MoveMe.java in To projects com.example package.; ; More information:  ; This appears to be because the destination project is not stored in the refactoring script XML (see attached).   The From project is stored in the project attribute of the <refactoring> element.  However; the To project is not stored.,3
3.0RC1; ; - create new Java Project; - start a job holding the workspace lock during the following steps (e.g.; with; the org.eclipse.ui.examples.job plugin); - invoke the New JUnit Test Case wizard; - choose Yes when asked if junit.jar should be added to the build path; - cancel the user operation in the User Operation is Waiting dialog; -> the following exception:; ; org.eclipse.core.runtime.OperationCanceledException;         at org.eclipse.core.internal.jobs.ThreadJob.joinRun(ThreadJob.java:147);         at org.eclipse.core.internal.jobs.ImplicitJobs.begin(ImplicitJobs.java:8; 7);         at org.eclipse.core.internal.jobs.JobManager.beginRule(JobManager.java:1; 70);         at org.eclipse.core.internal.resources.WorkManager.checkIn(WorkManager.j; ava:95);         at org.eclipse.core.internal.resources.Workspace.prepareOperation(Worksp; ace.java:1628);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1668; );         at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaMod; elOperation.java:744);         at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject; .java:2655);         at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject; .java:2671);         at org.eclipse.jdt.internal.junit.wizards.NewTestCaseCreationWizardPage.; addToClasspath(NewTestCaseCreationWizardPage.java:727);         at org.eclipse.jdt.internal.junit.wizards.NewTestCaseCreationWizardPage.; addJUnitToBuildPath(NewTestCaseCreationWizardPage.java:713);         at org.eclipse.jdt.internal.junit.wizards.NewTestCaseCreationWizardPage.; validateJUnitOnBuildPath(NewTestCaseCreationWizardPage.java:693);         at org.eclipse.jdt.internal.junit.wizards.NewTestCaseCreationWizardPage.; handleFieldChanged(NewTestCaseCreationWizardPage.java:213);         at org.eclipse.jdt.ui.wizards.NewContainerWizardPage.containerDialogFiel; dChanged(NewContainerWizardPage.java:284);         at org.eclipse.jdt.ui.wizards.NewContainerWizardPage.access$1(NewContain; erWizardPage.java:279);         at org.eclipse.jdt.ui.wizards.NewContainerWizardPage$ContainerFieldAdapt; er.dialogFieldChanged(NewContainerWizardPage.java:266);         at org.eclipse.jdt.internal.ui.wizards.dialogfields.DialogField.dialogFi; eldChanged(DialogField.java:70);         at org.eclipse.jdt.internal.ui.wizards.dialogfields.StringDialogField.se; tText(StringDialogField.java:162);         at org.eclipse.jdt.ui.wizards.NewContainerWizardPage.setPackageFragmentR; oot(NewContainerWizardPage.java:411);         at org.eclipse.jdt.ui.wizards.NewContainerWizardPage.initContainerPage(N; ewContainerWizardPage.java:140);         at org.eclipse.jdt.internal.junit.wizards.NewTestCaseCreationWizardPage.; init(NewTestCaseCreationWizardPage.java:145);         at org.eclipse.jdt.internal.junit.wizards.NewTestCaseCreationWizard.addP; ages(NewTestCaseCreationWizard.java:53);         at org.eclipse.jface.wizard.WizardDialog.createContents(WizardDialog.jav; a:448);         at org.eclipse.jface.window.Window.create(Window.java:348);         at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:925);         at org.eclipse.ui.internal.ide.NewWizardShortcutAction.run(NewWizardShor; tcutAction.java:94);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:881);         at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection; (ActionContributionItem.java:915);         at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContri; butionItem.java:866);         at org.eclipse.jface.action.ActionContributionItem$7.handleEvent(ActionC; ontributionItem.java:785);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796);         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2716);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2382);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363);         at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334);         at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.jav; a:253);         at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141);         at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96; );         at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformAct; ivator.java:334);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.ja; va:273);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.ja; va:128);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.; java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces; sorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:324);         at org.eclipse.core.launcher.Main.basicRun(Main.java:185);         at org.eclipse.core.launcher.Main.run(Main.java:638);         at org.eclipse.core.launcher.Main.main(Main.java:622); org.eclipse.core.runtime.OperationCanceledException,3
Create an interface A and two classes; B1 and B2; which implement that interface.  (My interface ; had over 6 methods in it.) ; ; Manually add methods to the interface which match existing methods in B1 but do not exist in B2.  ; Add the needed methods to B2.  Notice in the Outline panel that the new methods are correctly ; flagged in B2 as belonging to an interface but they are not flagged for B1.; ; Quit Eclipse and reload the project.; ; The Outline panels for B1 and B2 are now correct.,3
I would like to be able to create launch configurations where the classpath ; is default plus - that is; I want the default classpath plus some additional ; entries. I can almost do this today by selecting the default class path ; checkbox; then deselecting it; then augmenting the classpath with my ; additional entries. HOWEVER; if I then go change the projects classpath; the ; launch configuration still has the old classpath. I want the launch ; configurations classpath to change along with the projects classpath.,3
Using I200412142000; ; Steps to reproduce:; ; 1. Define a new class; public class IntList implements List<Integer> {; }; ; 2. Use QuickFix to add unimplemented methods; 3. Extract interface on IntList with all methods selected; 4. Open the interface; 5. Note: there is a compile error at method public abstract T[] toArray(T[] a),3
The table that displays the installed JREs doesnt store its column width upon ; leaving the preferences dialog. This is a little annoying because when coming ; back it just shows me:; ; [ ] Standard ... | Sun JDK 1... | C:\Program Files\...; [ ] Standard ... | Sun JDK 1... | C:\Program Files\...; ; instead of; ; [ ] Standard VM | Sun JDK 1.3.1 - 07 | C:\Program F...; [ ] Standard VM | Sun JDK 1.4.1 - 02 | C:\Program F...; ; So I always have to resize the columns (I could also take other names for the ; JDK though).,3
20021029; it says Remove... suggesting that a dialog will show up,3
build: M8; ; When exporting javadoc for jface (or org.eclipse.ui) go to 2nd wizard page ; (configure javadoc) and the list of referenced classes on bottom is strange; ; and does not seem to map to project references etc..it is the same for both ; projects (i.e. jface and ui).  ; It is not clear to me that a user knows what to do with this list.; ; Also the sort order for list in question is not clear,3
In Eclipse; you can right-click on a class and choose Source -> ; Override/implement methods and then check the methods you want to override.  ; It works fine for the normal case.  But if you want to override methods in a ; class contained within a methods body; Eclipse throws an error dialog.  See ; attachment for a screenshot.; ; Operation not supported for specified element type; ; To reproduce:; 1. Create a class like the following.; ; package com.avaya.ic.vesp;; public class DummyClass {;    public void myTest() {;       class Blah extends Object {;          ;       };    }; }; ; 2. Right-click on Blah and choose Source --> Override/Implement methods.; 3. Choose a method to override (i.e. hashCode); 4. Get an error dialog.,3
Extract method doesnt work on this example:; ; -------------------------------; ; boolean handlesHeight = true;; int originalHeight = 100;; int desiredHeight = 199;; int desiredMaxHeight = 200;; ; // try to extract method on the section below; // it should require inputs of originalHeight;; // desiredHeight; and desiredMaxHeight. it should; // return a boolean; ; // depending on where I place this code chunk;; // it sometimes wants the boolean as an input as; // well; or it will not return anything; ; if (originalHeight != 0) {;     // height is set; so check it;     if (desiredHeight != 0) {;         // height is specified;         handlesHeight = (desiredHeight == originalHeight);;     } else if (desiredMaxHeight != 0) {;         // max height is specified;         handlesHeight = (originalHeight <= desiredMaxHeight);;     } else {;         handlesHeight = true;;     }; },3
* Ensure there is a compilation error in the workspace; * Enable suspend on compilation errors; * Fix all compilation errors; * Disable suspend on compilation errors; * Introduce a compilation error; * Enable suspend on compilation errors; * Debug; ; > Program does not suspend at comilation error; ; When the compilation error is introduced; the compilation error breakpoint ; is only enabled if the preference is on (and it is off in this case). The ; breakpoint is not re-enabled when the user enables the preference.,3
I20040413; ; Test Case; ; class A {;   public Object foo() {;      return null;;   }; }; ; Try to generalize the return type of foo.,3
"20020328; ; package p;; import java.util.List;; ; public abstract class Test {;   ;     public void foo() {;     	List l= new List(){<CODE ASSIST HERE>};     }; }; ; choose the addAll method (any of the two); you get the fully qualified name for Collections ; (although my java editor/code assist preference says it should insert an import ; statement)",2
In order to encourage test first methodology eclipse should be able to create; classes from test cases. I should be able to write a test case for a class that; does not yet exist and eclipse should create the class for me automatically. It; should also examine the individual tests to see what kind of objects the methods; return and set the proper getters and setters. If I enhance my test case (or add; additional test cases) it should non destructively add the methods and; attributes that are missing.,3
ASTRewritingTest should also support _since and _only on whole test class. ; ; Currently; all tests in ASTRewritingTypeAnnotationsTest start with;     if (this.apiLevel < AST.JLS8) return;; ; making it look like they also run on earlier AST levels.,3
Build 20021009; ; There are various situations where I want a qualified type name to be inserted; by codeassist; as opposed to have a bonus import statement added.; If I mean it; there should be a way to get it (like shift+accept selection?).; ; e.g. when typing a snippet to copy/paste into a conditional breakpoint; when ; evaluating code on the fly.,3
They have no effect in 3.1RC1.,3
"This bug describes the test failures in org.eclipse.jdt.ui.tests.reorg.MoveTest.; Looking back in earlier nightly builds; I found that this bug already appeared; in the N20040705 build.; ; Heres what we do:; ; in testDestination_yes_cuFromRoot():;   Map originalOptions= javaProject.getOptions(false);;   Map newOptions= javaProject.getOptions(false);;   newOptions.put(JavaCore.COMPILER_COMPLIANCE; 1.3);;   newOptions.put(JavaCore.COMPILER_SOURCE; 1.3);;   javaProject.setOptions(newOptions);; ...;   javaProject.setOptions(originalOptions);; ; in testDestination_no_cuFromRoot() (next test method):; ... (javaProject is the same project as in the test before);   Map originalOptions= javaProject.getOptions(false);; ; The call to IJavaProject#getOptions(false) fails now. It worked in 3.0.; ; The problem can also be reproduced in a runtime eclipse by setting per-project; compiler options and then switching back to use workspace settings.; ; ; java.lang.IllegalStateException: Preference node org.eclipse.jdt.core has been; removed.; 	at java.lang.Throwable.<init>(Throwable.java); 	at java.lang.Throwable.<init>(Throwable.java); 	at; org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java); 	at; org.eclipse.core.internal.preferences.EclipsePreferences.keys(EclipsePreferences.java:575); 	at org.eclipse.jdt.internal.core.JavaProject.getOptions(JavaProject.java:1439); 	at; org.eclipse.jdt.ui.tests.reorg.MoveTest.testDestination_no_cuFromRoot(MoveTest.java:1128); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58); 	at; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60); 	at java.lang.reflect.Method.invoke(Method.java:391); 	at junit.framework.TestCase.runTest(TestCase.java:154); 	at junit.framework.TestCase.runBare(TestCase.java:127); 	at junit.framework.TestResult$1.protect(TestResult.java:106); 	at junit.framework.TestResult.runProtected(TestResult.java:124); 	at junit.framework.TestResult.run(TestResult.java:109); 	at junit.framework.TestCase.run(TestCase.java:118); 	at junit.framework.TestSuite.runTest(TestSuite.java:208); 	at junit.framework.TestSuite.run(TestSuite.java:203); 	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22); 	at junit.extensions.TestSetup$1.protect(TestSetup.java:19); 	at junit.framework.TestResult.runProtected(TestResult.java:124); 	at junit.extensions.TestSetup.run(TestSetup.java:23); 	at; org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:421); 	at; org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:305); 	at; org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:30); 	at; org.eclipse.pde.internal.junit.runtime.UITestApplication$1.run(UITestApplication.java:92); 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:106); 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2749); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2434); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141); 	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96); 	at; org.eclipse.pde.internal.junit.runtime.UITestApplication.run(UITestApplication.java:33); 	at; org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58); 	at; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60); 	at java.lang.reflect.Method.invoke(Method.java:391); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:183); 	at org.eclipse.core.launcher.Main.run(Main.java:644); 	at org.eclipse.core.launcher.Main.main(Main.java:628)",3
Indenting text is way too difficult. ; ; Currently I have to select the text I want to indent and then press TAB. If I; dont select any text it just indents the selected line. But not form the start; of the line but from where the cursor is.; ; I would like it to work the following way:; - Shift+Tab indents the whole line to the left. Currently it shifts the text to; the right which is a bug in my opinion.; - Tab indents the whole line to the right. Not from where the cursor is positioned.; - It should not matter on which column the cursor is. If it is in the middle of; some text it should still indent the whole line.; - If more than one line is selected all the selected lines should be intented.; ; Thanks for a good IDE.,3
Using 1105; the display of the selected variable is not working very frequently.; I am using JDK1.4.1 vms and I get numerous examples where I cannot see the; string representation of the selected variable in the variable view.; This is very frustrating and it is wasting a lot of times. I dont remember such; issues with M4 or previous integration builds.; Sometimes after a while I get an error message instead of the expected display; saying that the evaluation failed.; Debugging takes lot of time and patience.,3
20030206; all other source actions show 1 error dialog if file is read-only; this action shows 2,3
"Once a project has been added to the required projects list; it is impossible to; remove this project from the list using the properties UI; because the Remove; button remains disabled.; ; Furthermore; deleting the childs of this required project (that is Included:; (All) and Excluded: None) leads to the following error message:; ; Setting build path (Error: An internal error occurred during: Setting build path.); An internal error occurred during: Setting build path.; java.lang.NullPointerException; 	at org.eclipse.jdt.internal.core.ClasspathEntry.<init>(ClasspathEntry.java:170); 	at org.eclipse.jdt.core.JavaCore.newProjectEntry(JavaCore.java:3041); 	at; org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement.newClasspathEntry(CPListElement.java:125); 	at; org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement.getClasspathEntry(CPListElement.java:108); 	at; org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathsBlock.internalConfigureJavaProject(BuildPathsBlock.java:709); 	at; org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathsBlock.configureJavaProject(BuildPathsBlock.java:647); 	at; org.eclipse.jdt.internal.ui.preferences.BuildPathsPropertyPage$1.run(BuildPathsPropertyPage.java:188); 	at; org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34); 	at; org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:700); 	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1676); 	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3506); 	at; org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:65); 	at; org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter$1.run(WorkbenchRunnableAdapter.java:80); 	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66); ; A possible workaround would be to delete the appropriate entry from the; .classpath file",2
Verifying results for build I20090331-0901; I see 3 failures in JDT/Text; performance tests:; ; 1) MoveLineTest.test(MoveLineTest.java:64); 2) AbstractJavaReplaceAllTest.test(AbstractJavaReplaceAllTest.java:71); 3) JavaReplaceAllWithQuickDiffTest.test(JavaReplaceAllWithQuickDiffTest.java:36),3
"I installed Eclipse 2.0 build 20020211 yesterday; and everything was working ; fine. Today; I fired up Eclipse (tried a couple of times); but when I type ; something; it pops up with an NPE. Im using Sun JDK1.4.; Ive got the stacktrace here:; ; org.eclipse.swt.SWTException: Failed to execute runnable ; (java.lang.NullPointerException); 	at org.eclipse.swt.SWT.error(SWT.java:1887); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages; (Synchronizer.java:96); 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1390); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:788); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:771); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:777); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke; (NativeMethodAccessorImpl.java:39); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke; (DelegatingMethodAccessorImpl.java:25); 	at java.lang.reflect.Method.invoke(Method.java:324); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:151); 	at org.eclipse.core.launcher.Main.run(Main.java:502); 	at org.eclipse.core.launcher.Main.main(Main.java:362); *** Stack trace of contained exception ***; java.lang.NullPointerException; 	at ; org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.synchronizeOutlinePageSelectio; n(JavaEditor.java:257); 	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run; (JavaReconcilingStrategy.java:60); 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages; (Synchronizer.java:93); 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1390); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:788); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:771); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:777); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke; (NativeMethodAccessorImpl.java:39); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke; (DelegatingMethodAccessorImpl.java:25); 	at java.lang.reflect.Method.invoke(Method.java:324); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:151); 	at org.eclipse.core.launcher.Main.run(Main.java:502); 	at org.eclipse.core.launcher.Main.main(Main.java:362)",1
"The following code doesnt produce an good output that can be recompiled:; ; public enum X {; 	BLEU(10);; 	BLANC(20);; 	ROUGE(30);; ; 	X(int i) {}; }; ; The output is:; ; public final enum X extends java.lang.Enum {;   ;   public static final X BLEU;;   ;   public static final X BLANC;;   ;   public static final X ROUGE;;   ;   private static final X[] ENUM$VALUES;;   ;   static {} {;   };   ;   private X(java.lang.String arg0; int arg1; int i) {;   };   ;   public static final X[] values() {;     return null;;   };   ;   public static final X valueOf(java.lang.String arg0) {;     return null;;   }; }; ; The problems are:; - synthetic methods are present and should be removed.; - enum constants should be separated with commas; - a semi-colon should follow the enum constants; - enum constants should get theirs initialization.; ; I can fix the first three items; but I dont see how to retrieve the; initialization for each enum constants as this is located in the clinit method.; ; I might be able to look for the constructor to find what argument is needed for; each enum constant; but I would then put a default value.; Would this be good enough?",3
Build id: 200302211557; ; Got error messages when importing preferences. I couldnt reproduce the problem ; anymore. Will attach stack traces (two generated in a row). Top entries are:; ; java.lang.NullPointerException; at ; org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider.rootsAndC; ontainers(PackageExplorerContentProvider.java:153); at ; org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider.getChildr; en(PackageExplorerContentProvider.java:131); at ; org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.getFilteredChildre; n(PackageExplorerPart.java:352); at org.eclipse.jface.viewers.StructuredViewer.getSortedChildren; (StructuredViewer.java:555); at org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren; (AbstractTreeViewer.java:1282); at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh; (AbstractTreeViewer.java:925); at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh; (AbstractTreeViewer.java:934); at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh; (AbstractTreeViewer.java:895); at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh; (AbstractTreeViewer.java:881); at org.eclipse.jface.viewers.StructuredViewer$7.run(StructuredViewer.java:858); at org.eclipse.jface.viewers.StructuredViewer.preservingSelection; (StructuredViewer.java:798); at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:856); at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:818); at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.propertyChange; (PackageExplorerPart.java:1062),2
"OS:	        All; Language:	All Language; Build level: 	M20050929-0840; JDK version:  IBM JDK 1.4.2 SR2; Test case #:  6.01 SYNCHRONIZING A NLS PROJECT NAME WITH A REPOSITORY; ; Summary: G2X: Cannot create folder in NLS java project; ; Steps to recreate problem:; 1- Create a Java Project started with NLS characters.; 2- Create a NLS folder in the NLS project.; 3- Delect the one created at step 2.; ; Error:; After step 2; a NLS package is created.; ; Expected Result:; After step 2; a NLS folder is created.",3
Build F1.; ; Open Window->Preferences->Java->Debug->Step Filtering.; Resize the dialog making it narrow.; ; The filters table could get a lot smaller before hidding the buttons.,3
R3.0 + Cheetah06; ; 1. Import org.eclipse.jdt.core as source; 2. Open JavaElement.java; 3. Select getSchedulingRule(); 4. Press Mark Occurences; 5. Put cursor on return type ISchedulingRule; Observe: You get the following error:; !ENTRY org.eclipse.core.runtime 4 2 Jun 30; 2004 15:20:22.680; !MESSAGE An internal error occurred during: Java AST creation.; !STACK 0; java.lang.UnsupportedOperationException: Operation only supported in JLS2 AST;         at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2(ASTNode.java:1775);         at org.eclipse.jdt.core.dom.MethodDeclaration.getReturnType; (MethodDeclaration.java:669);         at ; org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowAnalyzer.endVisit; (FlowAnalyzer.java:591);         at ; org.eclipse.jdt.internal.corext.refactoring.code.flow.InOutFlowAnalyzer.endVisi; t(InOutFlowAnalyzer.java:71);         at org.eclipse.jdt.core.dom.MethodDeclaration.accept0; (MethodDeclaration.java:501);         at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2454);         at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2524);         at org.eclipse.jdt.core.dom.TypeDeclaration.accept0; (TypeDeclaration.java:483);         at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2454);         at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2501);         at org.eclipse.jdt.core.dom.TypeDeclarationStatement.accept0; (TypeDeclarationStatement.java:186);         at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2454);         at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2524);         at org.eclipse.jdt.core.dom.Block.accept0(Block.java:133);         at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2454);         at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2501);         at org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:187);         at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2454);         at ; org.eclipse.jdt.internal.corext.refactoring.code.flow.InOutFlowAnalyzer.perform; (InOutFlowAnalyzer.java:39);         at org.eclipse.jdt.internal.ui.search.MethodExitsFinder.markReferences; (MethodExitsFinder.java:100);         at org.eclipse.jdt.internal.ui.search.MethodExitsFinder.perform; (MethodExitsFinder.java:80);         at ; org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.updateOccurrenceAnnotations; (JavaEditor.java:3605);         at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor$7.selectionChanged; (JavaEditor.java:3661);         at ; org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartLis; tenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:164);         at ; org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$3.run; (SelectionListenerWithASTManager.java:136);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66),3
"Opened the export wizard; selected JAR and Next.; Got the exception below. Ive exported from the same workspace before; using build 129.; ; NOTES:; ; Log: Mon Aug 20 16:52:44 EDT 2001; 4 org.eclipse.core.runtime 0 Unhandled exception caught in event loop.; org.eclipse.core.internal.runtime.AssertionFailedException: null argument:; 	at org.eclipse.core.internal.runtime.Assert.isNotNull(Assert.java(Compiled Code)); 	at org.eclipse.core.runtime.Path.initialize(Path.java(Compiled Code)); 	at org.eclipse.core.runtime.Path.initialize(Path.java(Compiled Code)); 	at org.eclipse.core.runtime.Path.<init>(Path.java(Compiled Code)); 	at org.eclipse.jdt.internal.ui.jarpackager.JarOptionsPage.getPathFromString(JarOptionsPage.java:270); 	at org.eclipse.jdt.internal.ui.jarpackager.JarOptionsPage.initializeJarPackage(JarOptionsPage.java:309); 	at org.eclipse.jdt.internal.ui.jarpackager.JarOptionsPage.restoreWidgetValues(JarOptionsPage.java:323); 	at org.eclipse.jdt.internal.ui.jarpackager.JarOptionsPage.createControl(JarOptionsPage.java:122); 	at org.eclipse.jface.wizard.Wizard.createPageControls(Wizard.java:164); 	at org.eclipse.jface.wizard.WizardDialog.createPageControls(WizardDialog.java:506); 	at org.eclipse.jface.wizard.WizardDialog.setWizard(WizardDialog.java:835); 	at org.eclipse.jface.wizard.WizardDialog.showPage(WizardDialog.java:870); 	at org.eclipse.jface.wizard.WizardDialog.nextPressed(WizardDialog.java:648); 	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:309); 	at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:211); 	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java(Compiled Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled Code)); 	at org.eclipse.jface.window.Window.open(Window.java:523); 	at org.eclipse.ui.internal.ExportResourcesAction.run(ExportResourcesAction.java:62); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:408); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java(Compiled Code)); 	at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code)); 	at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code)); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:622); 	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:815); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:119); 	at org.eclipse.core.launcher.Main.run(Main.java:401); 	at org.eclipse.core.launcher.Main.main(Main.java:274); ; KR (8/20/01 4:57:50 PM); 	Export to Zip or file system works. I get to the second page.; ; KR (8/20/01 5:00:37 PM); 	When I actually try to export to a zip file it doesnt work.; 	I selected a couple of folders and when I click on Finish I get the message; 	There are no resources currently selected for export; 	I tried exporting to a JAR on a different machine (i.e.; with a different workspace) and; 	got the same exception.; ; DM (8/21/01 5:19:03 PM); 	The bug is caused by the new wizard page name for JarOptionsPage. It has; 	been changed from JarWizardPage to JarOptionsPage in Eclipse 0.126.; 	Therefore one corresponding	setting returns null; causing the error.; 	The has already been fixed for the 2.0 stream.; 	WORKAROUND for 1.0 stream:; 		In your workspace delete the file: .metadata/.plugins/org.eclipse.jdt.ui/dialog_settings.xml; 		or if you dont want to loose the other settings: remove the JarPackageWizard section; 		from AND INCLUDING <section name=JarPackageWizard> to </section>; ; DM (8/21/01 5:45:01 PM); 	* e-mail sent to KR for more info about last comment.; 	* e-mail sent to EG to ask if this PR should be fixed in the 1.0 stream (simple if-null test); ; KR (8/21/01 1:31:44 PM); 	I got the no resources selected for export message when I tried exporting to a ZIP file; 	after switching from build 129 to 131.; 	When I copied a fresh dialog_settings.xml both the jar export and zip export worked again.; 	This should be reproducable by using a 129 workspace (or just the xml file) with 131 and ; 	trying to export to a zip file.; ; DM (8/22/01 2:59:40 PM); 	Fixed for 1.0 stream (>0.132) and 2.0 stream.; ; 	Waiting for KR to acknowledge that this PR contains two different PRs. Can be moved; 	to Verify if a new PR is created for the other problem.; ; DM (8/22/01 6:28:58 PM); 	KR filed a second PR but it describes an NPE and not the There are no resources currently selected for export; 	problem; though it could be related.; ; KR (8/22/01 1:17:54 PM); 	The no resources selected message also occurred in the crashed wizard. I assume it is related to; 	the problem I opened 1GIV8KI for.; 	I just couldnt reproduce the no resources selected problem anymore. I could only reproduce the ; 	NPE when clicking Browse button problem. Thats why I hacked the xml file; too. I didnt want to run ; 	129 to try and get an old style xml file.; ; DM (8/23/01 9:18:46 AM); 	OK; no additional PR needed - moving to verify",3
As part of its increased support for Javadoc; the model will support extracting Javadoc from attached source or HTML. It will allow defining optional classpath entries. The codeassist engine will be support pluggable extensions which can participate and contribute new proposals and/or filter others. Codeassist will support CamelCase pattern; and provide completions on new artifacts such as Javadoc; break/continue label. [JDT Core; JDT Text],4
"Reported by Danny Dig:; ; Scenario1:; - create a class C1 having a member type class C11; ; public class C1 {	; 	class C11{; 		void foo() {	; 		}; 	}; }; - create a new class C2; - apply Move... refactoring on the C11 and choose as the destination C2; - everything works fine. Now try to Undo this refactoring. You will notice:; 1. The Undo from the Refactoring Menu is not available anylonger; 2. Hitting a Ctrl+Z mysteriously undoes the refactoring though; ; ; ; Scenario 2:; - apply Move... refactoring on class C1. As the destination choose a different ; package.; - everything works fine. Now try to Undo this refactoring. The Undo menu ; item from the Refactoring Menu is not selectable. This time Ctrl+Z wont help ; you either",3
3.3; ; as the story of listening to Java delta to get the latest AST isnt complete (some AST are missing when a normal reconcile comes in between) we should offer API to give access to the AST of the current editor.; ; The API would be using the same options as out ASTProvider:; - WAIT_YES; - WAIT_ACTIVE_ONLY; - WAIT_NO,3
I am using Eclipse to debug my JSP web application. We use Tomcat 4.x as the ; web application server. I have configured Tomcat such that it generates the ; files in a directory structure like this:; ; someDirectory;     org;         apache;             jsp; ; and have added the someDirectory directory as a class library folder to my ; project. I have also attached the same folder as its attached source folder.; ; The Tomcat server compiles the JSP pages into java class names with $ sign in ; them:; ; For example a JSP page with name:; ; edit.jsp; ; is compiled into a java file:; ; someDirectory;     org;         apache;             jsp;                 edit$jsp.java; ; In the views like Package Explorer I can see the package:; ; org.apache.jsp ; ; (I use flattened package names option); ; However if I try to expand the package I do not see the .java files.; ; The Open Type dialog is able to locate the files though.,3
Window / Preferences / Java / Templates / pick one / Edit...; ; Then the Edit Template window comes up; and I can edit the text of the template.; Ill enclose a screen shot so you see what Im talking about.; ; When I hit Insert Variable...; nothing happens.; ; I closed eclipse and checked the log: Nothing.; ; This is F2; i.e.; build 20020602.,3
20020305; Dont know if reproducible:; 1. create new project with 2 classes pack.A & pack.B; 2. add a long comment to B; 3. Open Browser perspective; no editors open; 4. Select B (opens editor); select comment; now switch to A ->IAE; (Editor is reused); ; java.lang.IllegalArgumentException: Index out of bounds; ; Stack trace:;    java/lang/Throwable.<init>()V;    java/lang/Throwable.<init>(Ljava/lang/String;)V;    org/eclipse/swt/SWT.error(ILjava/lang/Throwable;)V;    org/eclipse/swt/SWT.error(I)V;    org/eclipse/swt/custom/StyledText.redrawRange(IIZ)V;    org/eclipse/jdt/internal/ui/javaeditor/LinePainter.drawHighlightLine()V;    org/eclipse/jdt/internal/ui/javaeditor/LinePainter.paint()V;    org/eclipse/jdt/internal/ui/javaeditor/PaintManager.paint()V;    org/eclipse/jdt/internal/ui/javaeditor/PaintManager.access$2; (Lorg/eclipse/jdt/internal/ui/javaeditor/PaintManager;)V;    org/eclipse/jdt/internal/ui/javaeditor/PaintManager$1.run()V;    org/eclipse/swt/widgets/RunnableLock.run()V;    org/eclipse/swt/widgets/Synchronizer.runAsyncMessages()Z;    org/eclipse/swt/widgets/Display.runAsyncMessages()Z;    org/eclipse/swt/widgets/Display.readAndDispatch()Z;    org/eclipse/ui/internal/Workbench.runEventLoop()V;    org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;;    org/eclipse/core/internal/boot/InternalBootLoader.run; (Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;); Ljava/lang/Object;;    org/eclipse/core/boot/BootLoader.run; (Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;); Ljava/lang/Object;;    SlimLauncher.main([Ljava/lang/String;)V,1
I20051031-2000; ; package p;; ; public class MyTest; {;     public Object clone();     {;     }; ;     public String toString();     {;     }; }; ; When I jump between the two errors with Navigate > Next/Previous Annotation; the; error message is only shown in the status line very shortly. The message also; does not always appear when the caret is in the error range.; ; It usually works when code is formatted normally. The problem could be that in; the example; the error range ends on a line break.,3
I have *.xml associated with the default text editor.  This problem occurs with; (at least) versions I20030114-linux-gtk through I20030121-linux-gtk and; executing gtk-config --version returns 1.2.10.; ; When I attempt to open an xml file (jetty.xml -- config for Jetty server);; Eclipse hangs.  If I kill it and attempt to restart; it will hang at the splash; screen (seems consistent; like its attempting to restore the editor and hanging; again).; ; If I then remove the editor element from workbench.xml Eclipse will proceed; through the splash screen and start.,3
"When attempting to run the following Java class from the Java Browsing ; perspective I get a The selection does not contain a main type error; ; however from the Java perspective it runs fine.; ; Code ; --------------------; package cp616.mazegame;; ; import cp616.mazegame.engine.control.DungeonMaster;; ; /**;  * @author greg;  *;  */; public class Runner {; ; 	public static void main(String[] args) {; 		DungeonMaster theDM = DungeonMaster.getInstance();; 		theDM.run();; 	}; }",2
Created attachment 88053; Suggestion for the fix; ; Pls see bugzilla https://bugs.eclipse.org/bugs/show_bug.cgi?id=208807 as this new problem is related to that one.; ; The changes made to fix that bugzilla avoid this line in the JavaCore.getEncoding() method to throw an exception:; ;   ResourcesPlugin.getWorkspace().getRoot().getDefaultCharset();; ; The problem now is that the very last line; ; ;   return ResourcesPlugin.getEncoding();; ; fails with a NPE; because ResourcePlugin.getPlugin() returns null when there is no workspace.; ; I am attaching a patch with a fix that solves the problems on the scenario I am working now.  As you can see; I am returning the systems file encoding; which is what is done by ResourcesPlugin.getEncoding().,3
"Im talking about integration build of December 11:; ; Here is a code (for jdk1.4):; ; ------------; import java.io.IOException;; ; public class test1 {; ; 	static Thread thr = new Thread() {; 		public void run() {; 			System.out.println(Shutting down);; 			try {; 				int c = System.in.read();; 				System.out.println(c);; 			} catch (IOException e) {; 			}; 		}; 	};; 	; 	int o = 5;; ; 	/**; 	 * Method main.; 	 * ; 	 * @param args; 	 */; 	public static void main(String[] args) {; 		; 		Runtime r = Runtime.getRuntime();; 		r.traceInstructions(true);; 		r.traceMethodCalls(true);; 		r.addShutdownHook(thr);; 		; 		System.out.println(Available procs:  + r.availableProcessors; ());; 		System.out.println(Free Memory:  + r.freeMemory()/1024 ; + Kb);; 		System.out.println(Total Memory:  + r.totalMemory()/1024 ; + Kb);; 		System.out.println(Max Memory:  + r.maxMemory()/1024 + Kb);; 		System.getProperties().list(System.out);; 		; 		try {; 			System.in.read();; 		} catch (Exception e) {; 		}; 	}; }; ---------- end of example code ------; ; Pressing CTRL+SHIFT+O to organize imports adds the following two imports:; ; import sun.security.krb5.internal.r;; import sun.security.krb5.internal.crypto.c;; ; for the c and r VARIABLES!.; ; This is a bad bad thing......; ; Surprisingly it skips the o field....",3
use case:; ; frequently when programming and your just doing some coding in side an if-block ; or so you realise that a local var needs to be accesible to the code after the ; block. A command to move the declaration to the next outer scope would be ; nice...; ; of course it needs to be init to a dummy value outside before block but for ; this see bug #59062,4
"Im yet not able to identify the cause but when navigating to other source files I get an error popup. the stacktrace below is what gets logged. All open files do not contain compile errors.; ; Build id: I20120515-2200; ; ; ; java.lang.IllegalArgumentException; 	at org.eclipse.jdt.core.Signature.appendTypeArgumentSignatures(Signature.java:825); 	at org.eclipse.jdt.core.Signature.appendClassTypeSignature(Signature.java:615); 	at org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:911); 	at org.eclipse.jdt.core.Signature.appendTypeSignature(Signature.java:855); 	at org.eclipse.jdt.core.Signature.toCharArray(Signature.java:2637); 	at org.eclipse.jdt.core.Signature.getSignatureSimpleName(Signature.java:1870); 	at org.eclipse.jdt.core.Signature.getSignatureSimpleName(Signature.java:1914); 	at org.eclipse.jdt.internal.core.SourceMapper$LocalVariableElementKey.<init>(SourceMapper.java:96); 	at org.eclipse.jdt.internal.core.SourceMapper.enterAbstractMethod(SourceMapper.java:836); 	at org.eclipse.jdt.internal.core.SourceMapper.enterMethod(SourceMapper.java:774); 	at org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(SourceElementNotifier.java:368); 	at org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(SourceElementNotifier.java:693); 	at org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(SourceElementNotifier.java:455); 	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:934); 	at org.eclipse.jdt.internal.core.SourceMapper.mapSource(SourceMapper.java:1404); 	at org.eclipse.jdt.internal.core.SourceMapper.mapSource(SourceMapper.java:1339); 	at org.eclipse.jdt.internal.core.ClassFile.mapSource(ClassFile.java:659); 	at org.eclipse.jdt.internal.core.ClassFile.openBuffer(ClassFile.java:635); 	at org.eclipse.jdt.internal.core.Openable.getBuffer(Openable.java:288); 	at org.eclipse.jdt.internal.core.ClassFile.getBuffer(ClassFile.java:359); 	at org.eclipse.jdt.internal.core.ClassFile.getSourceRange(ClassFile.java:523); 	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.getEditorID(EditorUtility.java:421); 	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:179); 	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:249); 	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:228); 	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlink.open(JavaElementHyperlink.java:77); 	at org.eclipse.jface.text.hyperlink.HyperlinkManager.mouseUp(HyperlinkManager.java:429); 	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:220); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84); 	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4130); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1458); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1481); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1466); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1271); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3976); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3615); 	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1021); 	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332); 	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:915); 	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86); 	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:585); 	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:540); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149); 	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124); 	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196); 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110); 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25); 	at java.lang.reflect.Method.invoke(Method.java:597); 	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629); 	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584); 	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)",3
It would be nice to have a toolbar button for syncing the packages view with the; currently selected editor (i.e. a button associated with Navigate->Show in; package Explorer); ; This would make the packages view UI consistent with the Navigator views UI.,3
20041017; ; I just updated the JDT UI label provider for var-args.; ; In the Java Models IMethod; Var args are signalled in a bit in the methods; flags (Flags.isVarargs(method.getFlags()). If this bit is set; this means that; parameter types (method.getParameterTypes()) have to be rendered differently.; foo(Object x; Object... y) returns parameter types Object;Object[]. The; renderer has then to substract one dimension from the last parameters type and; render ellipses instead.; ; I understand why this like that and I shows you a lot about how the new; construct is internally modelled. But for the Java model being is a source model; - Wouldnt it be better to have the varargs information in the signature of the; last parameter type? ; - Flags.toString() now says you have to pass flags & ~AccVarargs. The current; implementation doesnt add varargs yet; but if it would; clients would all; have to update the code that uses the result directly in code.; ; I think having the varargs information in the last parameter types signature; would make it much easier for Java model clients. As Signature.asString(typeSig); does return the correct type string; they would not even have to change something.; Also note that the AST also has the information in the parameter node.,3
I have one project. Abovementioned error is shown as soon as I debug or run the module.,3
EG (30.08.2001 18:22:36); ; I assume it is an oversight that private; protected; and public inner ; classes dont get their respective indicators.; ; NOTES:,4
Build R2.1; ; The javadoc for TypeDeclaration gives an incorrect grammar rule; for interface declarations. It should show that interface declarations; can extend multiple types.,3
A thread create event is sent and received by the WAS debug adapter.  The WAS ; debug adapter calls getThreadGroupName on the thread which results in a ; NullPointerException.  This problem occurs intermittently.; ; java.lang.NullPointerException;         at org.eclipse.jdt.internal.debug.core.model.JDIThread.getThreadGroupNam; e(JDIThread.java:946);         at com.ibm.debug.wsa.internal.core.WSAJavaDebugTarget.createThread(WSAJa; vaDebugTarget.java:232);         at com.ibm.debug.wsa.internal.core.WSADebugTarget.getWSAThread(WSADebugT; arget.java:214);         at com.ibm.debug.wsa.internal.core.WSADebugTarget.filterDebugEvents(WSAD; ebugTarget.java:149);         at org.eclipse.debug.core.DebugPlugin.filterEvents(DebugPlugin.java:226); ;         at org.eclipse.debug.core.DebugPlugin.fireDebugEventSet(DebugPlugin.java; :202);         at org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.fireEvent(J; DIDebugElement.java:133);         at org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.fireCreatio; nEvent(JDIDebugElement.java:123);         at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.createThread; (JDIDebugTarget.java:435);         at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget$ThreadStartH; andler.handleEvent(JDIDebugTarget.java:1822);         at org.eclipse.jdt.internal.debug.core.EventDispatcher.dispatch(EventDis; patcher.java:129);         at org.eclipse.jdt.internal.debug.core.EventDispatcher.run(EventDispatch; er.java:202);         at java.lang.Thread.run(Thread.java:512),3
"// --; import org.eclipse.jdt.annotation.NonNull;; import org.eclipse.jdt.annotation.Nullable;; ; public class X<T> {; 	T foo(@NonNull T t) {; 		return t;; 	}; 	public static void main(String[] args) {; 		X<@Nullable String> xs = new X<String>();; 		xs.foo(null);; 	}; 	; } ; // --; 1. Allowing X<@Nullable String> creates contradiction for X#foo which we dont; complain about.; ; 2. The unchecked conversion message reads strange. Target type @Nullable;; we should probably be just silent as it is always a safe conversion.",3
Eclipse uses encoding of current project to display source/javadoc of attached libraries despite the fact that the encoding used in the library may be different.; ; Steps to reproduce:; 1. Create project in UTF-8 encoding.; 2. Attach library with source/javadoc written in another (Cp1251) encoding.; 3. Try to view source or open Javadoc view of attached library from main project - you will see question signs instead of national symbols.; ; As an enhancement I would like to propose possibility to set encoding for each used library manually (like for other project resources).,3
M20050727-1200; ; class Top<E> { }; class Sub<S> extends Top<S> { }; ; Take the generic type binding of the declaration Sub<S> and ask it; isSubTypeCompatible(the generic type binding of the declaration Top<E>); is: false; expected: true; ; Works e.g. for; class Raw extends Top { },3
Bug 47132 and bug 46976 claim to have fixed this problem; but I believe that it still exists under Mac ; OS X using Eclipse 3.0M6.; ; When the preferences are set to Problems in JavaDoc: warning and Include missing JavaDoc tags in ; public types; methods and fields are set; I get warnings when I have an overriden method:; ; /*;  * (non-JavaDoc);  * @see java.lang.Object#toString();  */; public String toString() { ... }; ; then I get the warning.; ; Ideally; I want to be able to set up Eclipse so that when I have a /missing/ JavaDoc tag; then it ; generates a warning; but when I have an overridden method (like toString()); I can just have a /* (non-; JavaDoc) */ type identifier that disables the warning for that method. ; ; Bug 46976 fixed the problem by being able to turn the warning off; which IMHO is useful but not the fix ; to the problem; which is it should be able to check for other missing JavaDoc methods; but not ones ; with an ignore me comment.; ; My suggestion would be that the warning searches for missing *comments* above a method; type; or ; field; and not just whether they are JavaDoc or non-JavaDoc comments. (Perhaps this could be given a ; separate configuration at some point later; but not necessarily required.); ; Note that Eclipse projects will invariably have a lot of /* */ comments above overriden methods that are ; desirable to inherit the JavaDoc; but (new) method w/o a comment should be detected by this option.; ; Mac OS X.3.2 using Eclipse 3.0M6 (build 200311211210); Suspect this problem is OS independent; but leaving Mac/MacOSX above for now.,3
It is impossible to make extension of Package Explorers content; provider or something with the same result.; The problem is with PackageExplorerPart which hard depends on ; PackageContentProvider which is package private class.; ; Use case:; make some non-java files expandable with its own inner structure depending on ; files content (e.g. show inner structure of XML file in Package Explorer - XML ; file with some deployment; etc.),4
There seems to be an error with Eclipse generating the equals method. For example if we have a Simple class with the equals generated by Eclipse we get:; public class SimpleClass; {;    int i;;    public boolean equals(Object obj);    {;       if (this == obj);          return true;;       if (obj == null);          return false;;       if (getClass() != obj.getClass());          return false;;       final SimpleClass other = (SimpleClass) obj;;       if (i != other.i);          return false;;       return true;;    }  }; Which is correct; but if we use Eclipse to re-generate the equals method; we get:; public class SimpleClass; {;    int i;;      public boolean equals(Object obj);    {;       if (this == obj);          return true;;       if (!super.equals(obj));          return false;;       if (getClass() != obj.getClass());          return false;;       final SimpleClass other = (SimpleClass) obj;;       if (i != other.i);          return false;;       return true;;    }; }; Note the lines   if (!super.equals(obj));          return false; which is incorrect!,3
"Save the following class in HEAD.; ; public class X; {;     protected static <T extends Exception> void foo() throws T; Exce {;     }; }; ; After Exce; type p and wait for a second. The error should appear in the error; log view.; ; java.lang.NullPointerException; 	at; org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.bindThrownExceptions(AbstractMethodDeclaration.java:118); 	at; org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:389); 	at; org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1061); 	at; org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1110); 	at; org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:298); 	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:566); 	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:605); 	at; org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:165); 	at; org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:212); 	at; org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:78); 	at; org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:710); 	at; org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:766); 	at; org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1088); 	at; org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91); 	at; org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:133); 	at; org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86); 	at; org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:94); 	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:75); 	at org.eclipse.jdt.internal.ui.text.JavaReconciler.process(JavaReconciler.java:318); 	at; org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:204)",3
I20051102-0800; GTK+ 2.6.8; KDE 3.4.1; X.org 6.8.2; Linux 2.6.13 ;  ; The hierarchy view will sometimes contain stale information.  It doesnt seem ; to realize that the information is stale. ;  ; 1.) Have Platform/UI code checked out as well as org.eclipse.jdt.debug.ui.  ; 2.) Open a hierarchy on IObjectActionDelegate. ; 3.) Delete org.eclipse.jdt.debug.ui. ; 4.) Try to open a hierarchy on IObjectActionDelegate. ;  ; ACTUAL: The hierarchy opens again; and no attempt is made to refresh the ; information.  Clicking on some items leads to errors as the underlying files ; cant be found. ;  ; EXPECTED: The hierarchy either refreshes entirely; or does some clever tricks ; to figure out which items in the hierarchy no longer exist.,3
"Test case:; 	void foo() {; 		for (int i= 0; i < 1; i++) {; 			System.out.println(i++); //1//; 		}; 		; 		int k= 0;; 		for (int i= 0; i < 1; i++) {; 			k++; //2//; 		}; 	}; ; - select k++ at //2// and then apply Extract Method ...; -> Dialog says: Replace 3 duplicate code fragments (leave checked); -> Loop reentrance flow analysis is only performed for variable k;; but all is are also replaced by a method call (since the expressions; syntactically match). This is wrong.; ; - select i++ at //1// and then apply Extract Method ...; -> Message: Ambiguous return value...; (BTW: This message needs to be more verbose. I dont think that; many users understand what that means)",3
I20080617-2000; ; 1. Insert the SWT Text template; Is:;  one of the style parameter is SWT.READONLY; Should:;  SWT.READ_ONLY,3
If the Members View or some other browsing view is displayed in a background; perpective; it continiues to process selection events even though the user cant; see the effects.,3
I20061129-1340; ; Smart Paste into string should not escape single ticks (); since escaping them is not necessary. Likewise for pasting  into a char literal.; ; Proof: This program prints truetrue:; ; public class Try {;     public static void main(String[] args) {;         System.out.print({0} == \\{0}\\);;         System.out.print( == \);;     }; }; ; Bug 74235 requests to make escape characters configurable; but I think thats not necessary any more if this bug is fixed.,3
Build id: I20051108-1011; ; Pull-up some methods. Observe on the second page of the pull-up wizard; which; features a tree-preview of methods to be removed in the subtypes:; ; 1. Deselect one of the methods. ; ; Observe: The parent nodes get greyed; but not checked.; Expected: Parent class gets greyed and checked.; ; 2. Select some of the methods; and move forward or backward in the wizard and; back to the second page; ; Observe: Selection gets reset to default values; Expected: Selection stays the same if options are not changed on first dialog page.,3
There is about 300% regression on all platforms starting from I20110505-0800.,3
Version: 3.2.0; Build id: I20051213-0010; ; See bug 119528 for a description.,3
"If there is only one valid entry in the code completion list; the user should not have; to confirm -- The assistant should simply insert the completed text.  The current ; behaviour breaks the flow of typing.; ; NOTES:; ; PM (5/15/2001 1:33:54 PM); 	I disagree with the above comment; in VAJ this is an option; and I always turn it off.; 	I agree it should be configurable; but when automatic inserting the selection; I do not get a chance to see the argument types or the return type.; ; EG (5/17/01 10:57:34 AM); 	JFace text supports this option it isnt surfaced as a preference in the UI.; 	low priority; ; EG (24.07.2001 21:53:32); 	need a preference page for code completion.",4
20021210; junit setup; open a random new file; and a couple of junit files; when searching for references to Test; the search results are set to all ; editors; even tose not visible; that takes quite some time,3
When I have the logical structure displayed for an ArrayList; I have no menu ; entries for Open Declared Type and the other Open * menu items.,3
"Build ID: I20061214-1445; ; Steps To Reproduce:; Compile the following:; ; package temp;; public class JodeTest {; 	public static interface Foo 	{; 		void foo();; 	}; }; ; and:; ; package temp_other;; import temp.JodeTest;; public final class Bar implements JodeTest.Foo {; 	public void foo() { /* dummy */ }; }; ; Then decompile the file temp_other/Bar.class using javap -private -verbose temp_other.Bar. The resulting output for a javac 1.6.0-compiled .class file is:; ; Compiled from Bar.java; public final class temp_other.Bar extends java.lang.Object implements temp.JodeTest$Foo;   SourceFile: Bar.java;   InnerClass: ;    public abstract #17= #4 of #15; //Foo=class temp/JodeTest$Foo of class temp/JodeTest;   minor version: 0; ...; ; The output for Eclipses java compiler; however; is:; ; Compiled from Bar.java; public final class temp_other.Bar extends java.lang.Object implements temp.JodeTest$Foo;   SourceFile: Bar.java;   minor version: 0; ...; ; This missing attribute does; for instance; break proper decompilation by jode.sourceforge.net.; ; More information:; The relevant part of the JVM spec is probably:; ; http://java.sun.com/docs/books/vmspec/2nd-edition/html/ClassFile.doc.html#79996; ; I verified the bug with both Eclipse 3.3 M4; and with 3.2.",3
I200412081200; ; From Martins e-mail:; ; I deprecated some methods that access options that will soon be offered per; project as well:; ;   CodeFormatterUtil.getTabWidth() -> CodeFormatterUtil.getTabWidth(IJavaProject);   CodeFormatterUtil.createIndentString(int) ->; CodeFormatterUtil.createIndentString(int; IJavaProject); ;   JavaPreferencesSettings.getCodeGenerationSettings() ->; JavaPreferencesSettings.getCodeGenerationSettings(IJavaProject);   JavaPreferencesSettings.getImportNumberThreshold(IPreferenceStore) ->; JavaPreferencesSettings.getImportNumberThreshold(IJavaProject);   JavaPreferencesSettings.getImportOrderPreference(IPreferenceStore) ->; JavaPreferencesSettings.getImportOrderPreference(IJavaProject); ; Also make sure to not directly access to the following preference constants:; ;   PreferenceConstants.CODEGEN_*;   PreferenceConstants.ORGIMPORTS_*;   PreferenceConstants.FORMATTER_COMMENT_*; ; -> Use PreferenceConstants.getPreference(String key; IJavaProject project) to; get a JDT.UI preference value using the given project scope; ;   DefaultCodeFormatterConstants.*; ; -> Use javaProject.getOption(key; true) to get a preference value using the; given scope; ; I fixed most of the references. What is still open:; ; Refactoring:; fix the accesses to the deprecated methods listed above; Java Editor; IndentAction; JavaAutoIndentStrategy; ...:;                 Check all accesses to DefaultCodeFormatterConstants; e.g.; FORMATTER_TAB_SIZE; FORMATTER_TAB_CHAR to see if the OverlayPreferenceStore is used,3
It would be very convenient to also have smart caret positioning in java ; names for text fields in dialogs; such as the rename method refactoring etc.,3
Build 20020409; ; When opening a working copy with errors; the editor will not show errors until ; some explicit user input occurs.; ; (Recent) support from Jdt/Core however provides the necessary error ; notifications during the opening.,2
We should add a warning when the class literal is used as long as the problem; with class initialization is not fixed.; See bug 37565 and bug 48086.,3
Performed code formatting at project level containing more than 100 Java files.; ; Expected: The code must be formatted as per the template.; Actual: The formatter threw exception saying: Some characters cannot be mapped using Cp1252 character encoding. Either change the encoding or remove the characters which are not supported by the Cp1252 character encoding.; ; There are two problems here:; 1) The root cause for the exception; 2) The exception details are not enough - it doesnt state in which file the exception occurred. Now I have to dig through all the files one by one.; ; -- Configuration Details --; Product: Eclipse 2.0.0.20130613-0530 (org.eclipse.epp.package.jee.product); Installed Features:;  org.eclipse.jdt 3.9.0.v20130605-2000,3
"3.1; public class A {; 	int fFoo;; 	boolean fIsFoo;; }; ; f is set as field name prefix; I do get completion for get on methods level - i get getFoo() - Getter for fFoo; but I dont get anything for the boolean field.; ; Note that it does work if theres no field name prefix preference and fields; have simple; not prefixed; names.",3
To demonstrate:; 1) Create new A.java in package testpackage:; package testpackage;; ; public class A {}; class B{}; 2) Open Type Hierarchy on class A; 3) Change definition of B to:; class B extends testpackage.A; ; What happens: Hierarchy does not display B as a subtype of A.; Expected: B displayed as subtype of A.,3
A test case is to install the JSP debugging example; set a breakpoint on the 4th; line of date.jsp; launch the server; try to access the jsp page. When the; breakpoint is hit; try to evaluate date. Error message displayed is; Evaluations must contain either an expression or a block of well-formed; statements.; ; I think the problem is that the type of some local variables cannot be resolved; because the right jars are not in the Java build path of the project. And this; error is displayed because the error are located in the declaration of the; method created for the evaluation; but not in the code snippet itself.,3
I am trying to format the following method (the buffer.append() line is one long; one; hope it is not wrapped by Bugzilla); ;     public void longQualifiedMethodCallsTest() {;         StringBuffer buffer = new StringBuffer();;         buffer.append(SELECT service_id systemId; \n).append(parent_id; parentSystemId;\n).append(service_name serviceName;\n).append(short_desc; description;\n).append(theme theme\n).append(from services);;     }; ; Here is what I am getting (with the builtin Java Conventions):;     public void longQualifiedMethodCallsTest() {;         StringBuffer buffer = new StringBuffer();;         buffer.append(SELECT service_id systemId; \n).append(;                 parent_id parentSystemId;\n).append(;                 service_name serviceName;\n).append(;                 short_desc description;\n).append(theme theme\n).append(;                 from services);;     }; ; I was expecting something along the following line:; ;     public void longQualifiedMethodCallsTest() {;         StringBuffer buffer = new StringBuffer();;         buffer.append(SELECT service_id systemId; \n);                .append(parent_id parentSystemId;\n);                .append(service_name serviceName;\n);                .append(short_desc description;\n);                .append(theme theme\n);                .append(from services);;     }; ; This type of code writing is frequently occur in Java code. More of that the; Java Conventions are recomending it. (Prefer higher-level breaks to lower-level; breaks.),3
Enter <c and type ctrl-space; Select <code></code>; Note the extra spaces; Same for other <*></*>,3
Would it be possible to get some details? Otherwise Ill close as WORKSFORME.,3
Build ID: I20081211-1908; ; Steps To Reproduce:; (Disabled never join lines); ;     @Override;     public void addSelectionListener(SelectionListener listener) {;         super.addSelectionListener(new SelectionListener() {;             @Override;             public void widgetSelected(SelectionEvent e) {;             }; ;             @Override;             public void widgetDefaultSelected(SelectionEvent e) {;             };;         });;     }; ; (Enabled never join lines); ;     @Override;     public void addSelectionListener(SelectionListener listener) {;         super.addSelectionListener(new SelectionListener() {;                 @Override;             public void widgetSelected(SelectionEvent e) {;                 }; ;             @Override;             public void widgetDefaultSelected(SelectionEvent e) {;                 };;                         });;     }; ; ; More information:,3
Created attachment 213869; stack dump; ; SDK 3.8 Build id: I20120125-1800; ; In the background JUnit Plug-in Tests were running.; I was trying to continue browsing code and expanding items in the JUnit view.; I think it was at the expand click that the busy cursor appeared; and Eclipse froze. I killed the debug target; but still Eclipse would not unfreeze.; ; Attaching stack traces after killing the debug target. A few debug related threads had disappeared by then but the following threads have not changed since the freeze:; Worker-79; Worker-73; main; all of which are interested in the same lock object.; ; Although I see a key event in the stack I cant recall using the keyboard at that time but recollection is blurred by the fact that I was also switching virtual desktops and just came back to Eclipse at what time it wouldnt respond to the next click.,3
"I ran into a strange temporary AST node range problem with the reconciler AST when the org.eclipse.jdt.core/debug/dom/ast debug tracing option is set to true.; ; Could be related to bug 423584; which also shows up for this AST.; ; I cant reproduce reliably; but it happens in more than 50% of my attempts.; ; Steps:; ; - create snippet:; ; public class Snippet {;     {;         // a;         // few;         // comments;         // here;         ;         foo((int x) -> 9);;     }; }; ; - save the editor; - put caret after 9; - press backspace once; - press 1 (or any other digit); => an AST with a bad source range for the lambda parameter declaration is created:; ; !ENTRY org.eclipse.jdt.core 4 4 2013-12-16 18:52:51.610; !MESSAGE Bad AST node structure:; - parent [121; 133] org.eclipse.jdt.core.dom.LambdaExpression;    parameters [39; 127] org.eclipse.jdt.core.dom.SingleVariableDeclaration; ; ----------------------------------- SOURCE BEGIN -------------------------------------; public class Snippet {;     {;         // a;         // few;         // comments;         // here;         ;         foo((int x) -> 1);;     }; }; ; ----------------------------------- SOURCE END -------------------------------------; !STACK 0; java.lang.IllegalStateException: Bad AST node structure; 	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419); 	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:273); 	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203); 	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258); 	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:521); 	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082); 	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170); 	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89); 	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728); 	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788); 	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247); 	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126); 	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108); 	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89); 	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42); 	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87); 	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151); 	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86); 	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104); 	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77); 	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)",3
"User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 6.0; de; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729); Build Identifier: 20090920-1017; ; Given the following type hierarchy I get an compile error The type FooCmp must implement the inherited abstract method FooComparator.compare(Foo; Foo). ; Apparently the method is implemented in FooCmp. Neither Eclipse 3.5 (Build ID 20090621-0832) nor javac 1.6.0_16 do report an error.; ; The error does not happen if I remove method compare(T;T) from FooComparator. Letting FooCmp implement FooComparator<Foo> instead of the raw type and removing the method compare(Object;Object) does solve the problem to.; ; interface Foo {}; interface FooComparator<T extends Foo> extends java.util.Comparator<T>; {; 	public int compare(T o1; T o2);; }; class FooCmp implements FooComparator; {; 	public int compare(Object o1; Object o2); 		{ return compare((Foo)o1; (Foo)o2); }; 	public int compare(Foo o1; Foo o2); 		{ return 0; }; }; ; ; Reproducible: Always; ; Steps to Reproduce:; Just compile type hierarchy given in Details text.",3
"When saving in WSAD-IE 4.1.0; I get a message box with the title Save ; problems. The messagebox contains the following texts : ; Save could not be completed; Reason:;  Erors during build; ; In the log file there is an exception (see below). I found that the problem ; occurs only when I declare a method without parameters and leave the braces ; out. I my case I the following code caused the problem:; ; 	public String toString{; 		StringBuffer strBuff = new StringBuffer(255);; 		// some other stuff here; but thats not relevant..; 		return strBuff.toString();; 	}; ; The thing works OK(= produces compiler errors) when I use a String instead of a ; StringBuffer.; R. Arthur; Log: Fri May 10 10:27:07 GMT+03:00 2002; 2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-; in: org.eclipse.core.resources.; java.lang.ClassCastException: ; org.eclipse.jdt.internal.compiler.ast.FieldDeclaration; 	at ; org.eclipse.jdt.internal.compiler.parser.Parser.buildInitialRecoveryState; (Parser.java:539); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java; (Compiled Code)); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java; (Compiled Code)); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse; (Parser.java:6362); 	at org.eclipse.jdt.internal.compiler.ast.Initializer.parseStatements; (Initializer.java:52); 	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethod; (TypeDeclaration.java:695); 	at org.eclipse.jdt.internal.compiler.Compiler.getMethodBodies; (Compiler.java:256); 	at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:363); 	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:202); 	at ; org.eclipse.jdt.internal.core.builder.impl.AbstractImageBuilder.compile; (AbstractImageBuilder.java:90); 	at org.eclipse.jdt.internal.core.builder.impl.BatchImageBuilder.build; (BatchImageBuilder.java(Compiled Code)); 	at ; org.eclipse.jdt.internal.core.builder.impl.JavaDevelopmentContextImpl.createStat; e(JavaDevelopmentContextImpl.java:146); 	at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.fullBuild; (JavaBuilder.java:148); 	at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.build; (JavaBuilder.java:46); 	at org.eclipse.core.internal.events.BuildManager$1.run; (BuildManager.java:93); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:761); 	at org.eclipse.core.runtime.Platform.run(Platform.java:393); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:114); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:73); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:41); 	at org.eclipse.core.internal.events.BuildManager$2.run; (BuildManager.java:140); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:761); 	at org.eclipse.core.runtime.Platform.run(Platform.java:393); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:154); 	at org.eclipse.core.internal.events.BuildManager.build; (BuildManager.java:214); 	at org.eclipse.core.internal.resources.Project.build(Project.java:110); 	at org.eclipse.ui.actions.BuildAction.invokeOperation; (BuildAction.java:90); 	at org.eclipse.ui.actions.WorkspaceAction.execute; (WorkspaceAction.java:111); 	at org.eclipse.ui.actions.WorkspaceAction$1.execute; (WorkspaceAction.java:268); 	at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run; (WorkspaceModifyOperation.java:64); 	at org.eclipse.core.internal.resources.Workspace.run; (Workspace.java:1197); 	at org.eclipse.ui.actions.WorkspaceModifyOperation.run; (WorkspaceModifyOperation.java:78); 	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run; (ModalContext.java:98); Log: Fri May 10 11:07:01 GMT+03:00 2002; 2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-; in: org.eclipse.core.resources.; java.lang.ClassCastException: ; org.eclipse.jdt.internal.compiler.ast.FieldDeclaration; 	at ; org.eclipse.jdt.internal.compiler.parser.Parser.buildInitialRecoveryState; (Parser.java:539); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java; (Compiled Code)); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java; (Compiled Code)); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse; (Parser.java:6362); 	at org.eclipse.jdt.internal.compiler.ast.Initializer.parseStatements; (Initializer.java:52); 	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethod; (TypeDeclaration.java:695); 	at org.eclipse.jdt.internal.compiler.Compiler.getMethodBodies; (Compiler.java:256); 	at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:363); 	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:202); 	at ; org.eclipse.jdt.internal.core.builder.impl.AbstractImageBuilder.compile; (AbstractImageBuilder.java:90); 	at ; org.eclipse.jdt.internal.core.builder.impl.IncrementalImageBuilder.applySourceDe; lta(IncrementalImageBuilder.java:264); 	at ; org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.incrementalBuild; (JavaBuilder.java:210); 	at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.build; (JavaBuilder.java:54); 	at org.eclipse.core.internal.events.BuildManager$1.run; (BuildManager.java:93); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:761); 	at org.eclipse.core.runtime.Platform.run(Platform.java:393); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:114); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:73); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:41); 	at org.eclipse.core.internal.events.BuildManager$2.run; (BuildManager.java:140); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:761); 	at org.eclipse.core.runtime.Platform.run(Platform.java:393); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:154); 	at org.eclipse.core.internal.events.BuildManager.build; (BuildManager.java:174); 	at org.eclipse.core.internal.resources.Workspace.endOperation; (Workspace.java:663); 	at org.eclipse.core.internal.resources.Workspace.run; (Workspace.java:1202); 	at org.eclipse.ui.actions.WorkspaceModifyOperation.run; (WorkspaceModifyOperation.java:78); 	at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation; (AbstractTextEditor.java:1484); 	at ; com.ibm.etools.ejb.ui.java.copies.OveridableCompilationUnitEditor.doSave; (OveridableCompilationUnitEditor.java:208); 	at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:712); 	at org.eclipse.jface.operation.ModalContext.runInCurrentThread; (ModalContext.java:296); 	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249); 	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run; (ProgressMonitorDialog.java:335); 	at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation; (EditorManager.java:570); 	at org.eclipse.ui.internal.EditorManager.saveEditor; (EditorManager.java:717); 	at org.eclipse.ui.internal.WorkbenchPage.saveEditor; (WorkbenchPage.java:1225); 	at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:31); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection; (ActionContributionItem.java:407); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent; (ActionContributionItem.java:361); 	at org.eclipse.jface.action.ActionContributionItem.access$0; (ActionContributionItem.java:352); 	at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent; (ActionContributionItem.java:47); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:634); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:673); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:656); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:815); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:151); 	at org.eclipse.core.launcher.Main.run(Main.java:451); 	at org.eclipse.core.launcher.Main.main(Main.java:324); Log: Fri May 10 11:07:27 GMT+03:00 2002; 2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-; in: org.eclipse.core.resources.; java.lang.ClassCastException: ; org.eclipse.jdt.internal.compiler.ast.FieldDeclaration; 	at ; org.eclipse.jdt.internal.compiler.parser.Parser.buildInitialRecoveryState; (Parser.java:539); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java; (Compiled Code)); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java; (Compiled Code)); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse; (Parser.java:6362); 	at org.eclipse.jdt.internal.compiler.ast.Initializer.parseStatements; (Initializer.java:52); 	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethod; (TypeDeclaration.java:695); 	at org.eclipse.jdt.internal.compiler.Compiler.getMethodBodies; (Compiler.java:256); 	at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:363); 	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:202); 	at ; org.eclipse.jdt.internal.core.builder.impl.AbstractImageBuilder.compile; (AbstractImageBuilder.java:90); 	at ; org.eclipse.jdt.internal.core.builder.impl.IncrementalImageBuilder.applySourceDe; lta(IncrementalImageBuilder.java:264); 	at ; org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.incrementalBuild; (JavaBuilder.java:210); 	at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.build; (JavaBuilder.java:54); 	at org.eclipse.core.internal.events.BuildManager$1.run; (BuildManager.java:93); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:761); 	at org.eclipse.core.runtime.Platform.run(Platform.java:393); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:114); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:73); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:41); 	at org.eclipse.core.internal.events.BuildManager$2.run; (BuildManager.java:140); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:761); 	at org.eclipse.core.runtime.Platform.run(Platform.java:393); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:154); 	at org.eclipse.core.internal.events.BuildManager.build; (BuildManager.java:174); 	at org.eclipse.core.internal.resources.Workspace.endOperation; (Workspace.java:663); 	at org.eclipse.core.internal.resources.Workspace.run; (Workspace.java:1202); 	at org.eclipse.ui.actions.WorkspaceModifyOperation.run; (WorkspaceModifyOperation.java:78); 	at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation; (AbstractTextEditor.java:1484); 	at ; com.ibm.etools.ejb.ui.java.copies.OveridableCompilationUnitEditor.doSave; (OveridableCompilationUnitEditor.java:208); 	at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:712); 	at org.eclipse.jface.operation.ModalContext.runInCurrentThread; (ModalContext.java:296); 	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249); 	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run; (ProgressMonitorDialog.java:335); 	at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation; (EditorManager.java:570); 	at org.eclipse.ui.internal.EditorManager.saveEditor; (EditorManager.java:717); 	at org.eclipse.ui.internal.WorkbenchPage.saveEditor; (WorkbenchPage.java:1225); 	at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:31); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection; (ActionContributionItem.java:407); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent; (ActionContributionItem.java:361); 	at org.eclipse.jface.action.ActionContributionItem.access$0; (ActionContributionItem.java:352); 	at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent; (ActionContributionItem.java:47); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:634); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:656); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:815); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:151); 	at org.eclipse.core.launcher.Main.run(Main.java:451); 	at org.eclipse.core.launcher.Main.main(Main.java:324); Log: Fri May 10 11:08:12 GMT+03:00 2002; 2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-; in: org.eclipse.core.resources.; java.lang.ClassCastException: ; org.eclipse.jdt.internal.compiler.ast.FieldDeclaration; 	at ; org.eclipse.jdt.internal.compiler.parser.Parser.buildInitialRecoveryState; (Parser.java:539); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java; (Compiled Code)); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java; (Compiled Code)); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse; (Parser.java:6362); 	at org.eclipse.jdt.internal.compiler.ast.Initializer.parseStatements; (Initializer.java:52); 	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethod; (TypeDeclaration.java:695); 	at org.eclipse.jdt.internal.compiler.Compiler.getMethodBodies; (Compiler.java:256); 	at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:363); 	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:202); 	at ; org.eclipse.jdt.internal.core.builder.impl.AbstractImageBuilder.compile; (AbstractImageBuilder.java:90); 	at org.eclipse.jdt.internal.core.builder.impl.BatchImageBuilder.build; (BatchImageBuilder.java(Compiled Code)); 	at ; org.eclipse.jdt.internal.core.builder.impl.JavaDevelopmentContextImpl.createStat; e(JavaDevelopmentContextImpl.java:146); 	at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.fullBuild; (JavaBuilder.java:148); 	at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.build; (JavaBuilder.java:51); 	at org.eclipse.core.internal.events.BuildManager$1.run; (BuildManager.java:93); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:761); 	at org.eclipse.core.runtime.Platform.run(Platform.java:393); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:114); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:73); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:41); 	at org.eclipse.core.internal.events.BuildManager$2.run; (BuildManager.java:140); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:761); 	at org.eclipse.core.runtime.Platform.run(Platform.java:393); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:154); 	at org.eclipse.core.internal.events.BuildManager.build; (BuildManager.java:174); 	at org.eclipse.core.internal.resources.Workspace.endOperation; (Workspace.java:663); 	at org.eclipse.core.internal.resources.Workspace.run; (Workspace.java:1202); 	at org.eclipse.ui.actions.WorkspaceModifyOperation.run; (WorkspaceModifyOperation.java:78); 	at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation; (AbstractTextEditor.java:1484); 	at ; com.ibm.etools.ejb.ui.java.copies.OveridableCompilationUnitEditor.doSave; (OveridableCompilationUnitEditor.java:208); 	at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:712); 	at org.eclipse.jface.operation.ModalContext.runInCurrentThread; (ModalContext.java:296); 	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249); 	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run; (ProgressMonitorDialog.java:335); 	at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation; (EditorManager.java:570); 	at org.eclipse.ui.internal.EditorManager.saveEditor; (EditorManager.java:717); 	at org.eclipse.ui.internal.WorkbenchPage.saveEditor; (WorkbenchPage.java:1225); 	at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:31); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection; (ActionContributionItem.java:407); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent; (ActionContributionItem.java:361); 	at org.eclipse.jface.action.ActionContributionItem.access$0; (ActionContributionItem.java:352); 	at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent; (ActionContributionItem.java:47); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:656); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:815); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:151); 	at org.eclipse.core.launcher.Main.run(Main.java:451); 	at org.eclipse.core.launcher.Main.main(Main.java:324); Log: Fri May 10 11:08:32 GMT+03:00 2002; 2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-; in: org.eclipse.core.resources.; java.lang.ClassCastException: ; org.eclipse.jdt.internal.compiler.ast.FieldDeclaration; 	at ; org.eclipse.jdt.internal.compiler.parser.Parser.buildInitialRecoveryState; (Parser.java:539); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java; (Compiled Code)); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java; (Compiled Code)); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse; (Parser.java:6362); 	at org.eclipse.jdt.internal.compiler.ast.Initializer.parseStatements; (Initializer.java:52); 	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethod; (TypeDeclaration.java:695); 	at org.eclipse.jdt.internal.compiler.Compiler.getMethodBodies; (Compiler.java:256); 	at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:363); 	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:202); 	at ; org.eclipse.jdt.internal.core.builder.impl.AbstractImageBuilder.compile; (AbstractImageBuilder.java:90); 	at org.eclipse.jdt.internal.core.builder.impl.BatchImageBuilder.build; (BatchImageBuilder.java(Compiled Code)); 	at ; org.eclipse.jdt.internal.core.builder.impl.JavaDevelopmentContextImpl.createStat; e(JavaDevelopmentContextImpl.java:146); 	at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.fullBuild; (JavaBuilder.java:148); 	at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.build; (JavaBuilder.java:51); 	at org.eclipse.core.internal.events.BuildManager$1.run; (BuildManager.java:93); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:761); 	at org.eclipse.core.runtime.Platform.run(Platform.java:393); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:114); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:73); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:41); 	at org.eclipse.core.internal.events.BuildManager$2.run; (BuildManager.java:140); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:761); 	at org.eclipse.core.runtime.Platform.run(Platform.java:393); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:154); 	at org.eclipse.core.internal.events.BuildManager.build; (BuildManager.java:174); 	at org.eclipse.core.internal.resources.Workspace.endOperation; (Workspace.java:663); 	at org.eclipse.core.internal.resources.Workspace.run; (Workspace.java:1202); 	at org.eclipse.ui.actions.WorkspaceModifyOperation.run; (WorkspaceModifyOperation.java:78); 	at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation; (AbstractTextEditor.java:1484); 	at ; com.ibm.etools.ejb.ui.java.copies.OveridableCompilationUnitEditor.doSave; (OveridableCompilationUnitEditor.java:208); 	at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:712); 	at org.eclipse.jface.operation.ModalContext.runInCurrentThread; (ModalContext.java:296); 	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249); 	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run; (ProgressMonitorDialog.java:335); 	at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation; (EditorManager.java:570); 	at org.eclipse.ui.internal.EditorManager.saveEditor; (EditorManager.java:717); 	at org.eclipse.ui.internal.WorkbenchPage.saveEditor; (WorkbenchPage.java:1225); 	at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:31); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection; (ActionContributionItem.java:407); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent; (ActionContributionItem.java:361); 	at org.eclipse.jface.action.ActionContributionItem.access$0; (ActionContributionItem.java:352); 	at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent; (ActionContributionItem.java:47); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:656); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:815); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:151); 	at org.eclipse.core.launcher.Main.run(Main.java:451); 	at org.eclipse.core.launcher.Main.main(Main.java:324); Log: Fri May 10 11:33:04 GMT+03:00 2002; 2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-; in: org.eclipse.core.resources.; java.lang.ClassCastException: ; org.eclipse.jdt.internal.compiler.ast.FieldDeclaration; 	at ; org.eclipse.jdt.internal.compiler.parser.Parser.buildInitialRecoveryState; (Parser.java:539); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java; (Compiled Code)); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java; (Compiled Code)); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse; (Parser.java:6362); 	at org.eclipse.jdt.internal.compiler.ast.Initializer.parseStatements; (Initializer.java:52); 	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethod; (TypeDeclaration.java:695); 	at org.eclipse.jdt.internal.compiler.Compiler.getMethodBodies; (Compiler.java:256); 	at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:363); 	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:202); 	at ; org.eclipse.jdt.internal.core.builder.impl.AbstractImageBuilder.compile; (AbstractImageBuilder.java:90); 	at org.eclipse.jdt.internal.core.builder.impl.BatchImageBuilder.build; (BatchImageBuilder.java(Compiled Code)); 	at ; org.eclipse.jdt.internal.core.builder.impl.JavaDevelopmentContextImpl.createStat; e(JavaDevelopmentContextImpl.java:146); 	at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.fullBuild; (JavaBuilder.java:148); 	at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.build; (JavaBuilder.java:51); 	at org.eclipse.core.internal.events.BuildManager$1.run; (BuildManager.java:93); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:761); 	at org.eclipse.core.runtime.Platform.run(Platform.java:393); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:114); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:73); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:41); 	at org.eclipse.core.internal.events.BuildManager$2.run; (BuildManager.java:140); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:761); 	at org.eclipse.core.runtime.Platform.run(Platform.java:393); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:154); 	at org.eclipse.core.internal.events.BuildManager.build; (BuildManager.java:174); 	at org.eclipse.core.internal.resources.Workspace.endOperation; (Workspace.java:663); 	at org.eclipse.core.internal.resources.Workspace.run; (Workspace.java:1202); 	at org.eclipse.ui.actions.WorkspaceModifyOperation.run; (WorkspaceModifyOperation.java:78); 	at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation; (AbstractTextEditor.java:1484); 	at ; com.ibm.etools.ejb.ui.java.copies.OveridableCompilationUnitEditor.doSave; (OveridableCompilationUnitEditor.java:208); 	at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:712); 	at org.eclipse.jface.operation.ModalContext.runInCurrentThread; (ModalContext.java:296); 	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249); 	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run; (ProgressMonitorDialog.java:335); 	at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation; (EditorManager.java:570); 	at org.eclipse.ui.internal.EditorManager.saveEditor; (EditorManager.java:717); 	at org.eclipse.ui.internal.WorkbenchPage.saveEditor; (WorkbenchPage.java:1225); 	at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:31); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection; (ActionContributionItem.java:407); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent; (ActionContributionItem.java:361); 	at org.eclipse.jface.action.ActionContributionItem.access$0; (ActionContributionItem.java:352); 	at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent; (ActionContributionItem.java:47); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:656); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:815); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:151); 	at org.eclipse.core.launcher.Main.run(Main.java:451); 	at org.eclipse.core.launcher.Main.main(Main.java:324); Log: Fri May 10 11:35:05 GMT+03:00 2002; 2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-; in: org.eclipse.core.resources.; java.lang.ClassCastException: ; org.eclipse.jdt.internal.compiler.ast.FieldDeclaration; 	at ; org.eclipse.jdt.internal.compiler.parser.Parser.buildInitialRecoveryState; (Parser.java:539); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java; (Compiled Code)); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java; (Compiled Code)); 	at org.eclipse.jdt.internal.compiler.parser.Parser.parse; (Parser.java:6362); 	at org.eclipse.jdt.internal.compiler.ast.Initializer.parseStatements; (Initializer.java:52); 	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethod; (TypeDeclaration.java:695); 	at org.eclipse.jdt.internal.compiler.Compiler.getMethodBodies; (Compiler.java:256); 	at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:363); 	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:202); 	at ; org.eclipse.jdt.internal.core.builder.impl.AbstractImageBuilder.compile; (AbstractImageBuilder.java:90); 	at org.eclipse.jdt.internal.core.builder.impl.BatchImageBuilder.build; (BatchImageBuilder.java(Compiled Code)); 	at ; org.eclipse.jdt.internal.core.builder.impl.JavaDevelopmentContextImpl.createStat; e(JavaDevelopmentContextImpl.java:146); 	at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.fullBuild; (JavaBuilder.java:148); 	at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.build; (JavaBuilder.java:51); 	at org.eclipse.core.internal.events.BuildManager$1.run; (BuildManager.java:93); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:761); 	at org.eclipse.core.runtime.Platform.run(Platform.java:393); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:114); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:73); 	at org.eclipse.core.internal.events.BuildManager.basicBuild; (BuildManager.java:41); 	at org.ec",2
"What about a compiler option flagging double method declarations in interfaces; and/or abstract classes; examples below to illustrate what I mean:; ; interface A {; 	void doIt();; }; ; interface B {; 	void doIt();; }; ; interface C extends A {; 	void doIt(); //flag because already in A; }; ; interface D extends A; B {} //flag because both A and B contain void doIt(); ; abstract class E implements A {; 	public abstract void doIt(); //flag because already in A; }; ; abstract class F {; 	abstract void doIt();; }; ; abstract class G extends F {; 	abstract void doIt(); //flag because already in F; }; ; @@@@; ; Havent tested yet what happens to the Javadoc in those cases above.; ; Default setting should be Warning.",3
I have a class X which Ive created. It contains no methods.; ; I would like to be able to the following...; ; X x = new X();; x.setNumber(5);; ; Eclipse will then underline the setNumber method in the above example and one; of the quick fix options will be create method setNumber.; ; I would like another option for the quick fix called: create field from setter.; Selecting that option will create the field called number and create the; relevant getters and setters.; ; That would be just great.,3
M4 test pass.; ; The Quick Fix Change workspace compliance settings to 5.0 does not make much; sense when the project already has project specific settings.; ; Either the Quick Fix should not appear when the project overrides workspace; settings; or the user should be asked whether the project should take over; workspace settings.,3
Upgraded an ongoing project from 3.1 to 3.1.1 (over OS 10.4.3 and java build; 1.4.2_09-232/vm build 1.4.2-54)... now when I build a project the .classpath; file disappears and I get an error saying Eclipse cant build until the build; path problem is corrected.  Using the project properties editor doesnt seem to; recreate the missing file.  Managed to manual restore and got a good build...; once; but then the .classpath and .project files both vanished.,3
I20050509-2010; Motif; KDE 3.3.2; X.org 6.8.2; Linux 2.6.11; ; I had SWT checked out from CVS; but closed.  I opened the Table class; and the; realized it was only a class file.  I then opened the SWT project; and closed; the Table class.  Then; with the Open Type dialog; I tried to open the; Table java file.  I selected the Table item from the list of recent item in; the dialog; and pressed enter.  The class file opened; and not the java file.,3
In the debug window (the pane that displays running and terminated processes) ; it is difficult to quickly identify which programs are still executing.  I know ; there is a little running man image and a standing still man image; but thats ; not that easy to identify.  If the man can be colored differently; such as ; green for running and red for terminated; that would help.  Or Possibly ; colorize the text differently of the process. ; ; Example usage (use case):  Run a server process and starting 15 test clients.  ; The debug will list 16 running programs.  After some duration of time the ; clients will complete.  Since the output of each client process needs to be ; reviewed; the remove all terminated is not an option.  But identifying the ; still running processes is a quick visual manner would be helpful.,3
Data to follow shortly.,3
"Build ID: M20070212-1330 (Ubuntu version: 3.2.2-0ubuntu3); ; Steps To Reproduce:; 1. Select JUnit test to execute; 2. Receive message An internal error occured during: Launching.; ; ; ; More information:; This is the default Eclipse build available from Ubuntu 7.04 and I am executing one of JUnit tests which works on Windows without issues. I am using Sun Java 1.5 (Java(TM) 2 Runtime Environment; Standard Edition (build 1.5.0_11-b03)) The .log file contains following exception; ; !MESSAGE An internal error occurred during: Launching.; !STACK 0; java.lang.NullPointerException; 	at org.eclipse.jdt.internal.junit.launcher.ClasspathLocalizer.localURL(JUnitLaunchConfiguration.java:188); 	at org.eclipse.jdt.internal.junit.launcher.ClasspathLocalizer.entryString(JUnitLaunchConfiguration.java:177); 	at org.eclipse.jdt.internal.junit.launcher.ClasspathLocalizer.addEntry(JUnitLaunchConfiguration.java:164); 	at org.eclipse.jdt.internal.junit.launcher.ClasspathLocalizer.localizeClasspath(JUnitLaunchConfiguration.java:155); 	at org.eclipse.jdt.internal.junit.launcher.JUnitLaunchConfiguration.createClassPath(JUnitLaunchConfiguration.java:127); 	at org.eclipse.jdt.internal.junit.launcher.JUnitLaunchConfiguration.createVMRunner(JUnitLaunchConfiguration.java:54); 	at org.eclipse.jdt.internal.junit.launcher.JUnitBaseLaunchConfiguration.launchTypes(JUnitBaseLaunchConfiguration.java:159); 	at org.eclipse.jdt.internal.junit.launcher.JUnitBaseLaunchConfiguration.launch(JUnitBaseLaunchConfiguration.java:98); 	at org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:639); 	at org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:565); 	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:754); 	at org.eclipse.debug.internal.ui.DebugUIPlugin$6.run(DebugUIPlugin.java:944); 	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)",3
IT would be nice to have JDT Editor understand some semantics on strings and allow to plug other completion engines or code validator for subparts of the code.; For example; here are some use-case (inspired from IntelliJ):; * Allow SQL validation (and complettion) of JPA Query annotation,3
"build I20030324; ; Noticed the following in the log:; ; !ENTRY org.eclipse.core.resources 2 1 Mar 24; 2003 16:58:27.713; !MESSAGE Skipping builder org.eclipse.releng.tools.mapFileValidator for project ; org.eclipse.releng. Either the builder is missing from the install; or it ; belongs to a project nature that is missing or disabled.; !ENTRY org.eclipse.core.runtime 4 2 Mar 24; 2003 17:19:35.786; !MESSAGE Problems occurred when invoking code from plug-; in: org.eclipse.core.runtime.; !STACK 0; java.lang.NullPointerException; 	at org.eclipse.jdt.internal.launching.LaunchingPlugin.startup; (LaunchingPlugin.java:382); 	at org.eclipse.core.internal.plugins.PluginDescriptor$1.run; (PluginDescriptor.java:728); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:889); 	at ; org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation; (PluginDescriptor.java:740); 	at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation; (PluginDescriptor.java:188); 	at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin; (PluginClassLoader.java:112); 	at ; org.eclipse.core.internal.plugins.PluginClassLoader.internalFindClassParentsSelf; (PluginClassLoader.java:185); 	at ; org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassParentsSelf; (DelegatingURLClassLoader.java:490); 	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass; (DelegatingURLClassLoader.java:882); 	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass; (DelegatingURLClassLoader.java:862); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:250); 	at ; org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension; (PluginDescriptor.java:130); 	at ; org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension; (PluginDescriptor.java:167); 	at ; org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension; (ConfigurationElement.java:103); 	at org.eclipse.jdt.core.JavaCore.getClasspathContainerInitializer; (JavaCore.java:961); 	at org.eclipse.jdt.core.JavaCore.getClasspathContainer; (JavaCore.java:881); 	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath; (JavaProject.java:1531); 	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath; (JavaProject.java:1463); 	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath; (JavaProject.java:1439); 	at org.eclipse.jdt.internal.core.search.JavaSearchScope.add; (JavaSearchScope.java:75); 	at org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.initialize; (JavaWorkspaceScope.java:78); 	at org.eclipse.jdt.internal.core.search.JavaSearchScope.<init>; (JavaSearchScope.java:49); 	at org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.<init>; (JavaWorkspaceScope.java:30); 	at org.eclipse.jdt.internal.core.search.indexing.IndexManager.shutdown; (IndexManager.java:507); 	at org.eclipse.jdt.internal.core.JavaModelManager.shutdown; (JavaModelManager.java:1550); 	at org.eclipse.jdt.core.JavaCore.shutdown(JavaCore.java:3004); 	at org.eclipse.core.internal.plugins.PluginRegistry$2.run; (PluginRegistry.java:283); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:889); 	at org.eclipse.core.internal.plugins.PluginRegistry$1.visit; (PluginRegistry.java:296); 	at org.eclipse.core.internal.plugins.PluginRegistry.accept; (PluginRegistry.java:55); 	at org.eclipse.core.internal.plugins.PluginRegistry.shutdownPlugins; (PluginRegistry.java:299); 	at org.eclipse.core.internal.plugins.PluginRegistry.shutdown; (PluginRegistry.java:265); 	at org.eclipse.core.internal.runtime.InternalPlatform.loaderShutdown; (InternalPlatform.java:520); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.internal.boot.InternalBootLoader.shutdown; (InternalBootLoader.java:979); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:850); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:291); 	at org.eclipse.core.launcher.Main.run(Main.java:747); 	at org.eclipse.core.launcher.Main.main(Main.java:583); ; Followed by many stack traces like the following.; ; !ENTRY org.eclipse.core.runtime 4 2 Mar 24; 2003 17:19:35.796; !MESSAGE Plug-in org.eclipse.jdt.launching was unable to load class ; org.eclipse.jdt.internal.launching.JREContainerInitializer.; !STACK 0; org.eclipse.core.internal.boot.DelegatingLoaderException: ; org.eclipse.core.runtime.CoreException: Problems encountered starting up plug-; in: org.eclipse.jdt.launching.; 	at ; org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation; (PluginDescriptor.java:746); 	at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation; (PluginDescriptor.java:188); 	at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin; (PluginClassLoader.java:112); 	at ; org.eclipse.core.internal.plugins.PluginClassLoader.internalFindClassParentsSelf; (PluginClassLoader.java:185); 	at ; org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassParentsSelf; (DelegatingURLClassLoader.java:490); 	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass; (DelegatingURLClassLoader.java:882); 	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass; (DelegatingURLClassLoader.java:862); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:250); 	at ; org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension; (PluginDescriptor.java:130); 	at ; org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension; (PluginDescriptor.java:167); 	at ; org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension; (ConfigurationElement.java:103); 	at org.eclipse.jdt.core.JavaCore.getClasspathContainerInitializer; (JavaCore.java:961); 	at org.eclipse.jdt.core.JavaCore.getClasspathContainer; (JavaCore.java:881); 	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath; (JavaProject.java:1531); 	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath; (JavaProject.java:1463); 	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath; (JavaProject.java:1439); 	at org.eclipse.jdt.internal.core.search.JavaSearchScope.add; (JavaSearchScope.java:75); 	at org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.initialize; (JavaWorkspaceScope.java:78); 	at org.eclipse.jdt.internal.core.search.JavaSearchScope.<init>; (JavaSearchScope.java:49); 	at org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.<init>; (JavaWorkspaceScope.java:30); 	at org.eclipse.jdt.internal.core.search.indexing.IndexManager.shutdown; (IndexManager.java:507); 	at org.eclipse.jdt.internal.core.JavaModelManager.shutdown; (JavaModelManager.java:1550); 	at org.eclipse.jdt.core.JavaCore.shutdown(JavaCore.java:3004); 	at org.eclipse.core.internal.plugins.PluginRegistry$2.run; (PluginRegistry.java:283); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:889); 	at org.eclipse.core.internal.plugins.PluginRegistry$1.visit; (PluginRegistry.java:296); 	at org.eclipse.core.internal.plugins.PluginRegistry.accept; (PluginRegistry.java:55); 	at org.eclipse.core.internal.plugins.PluginRegistry.shutdownPlugins; (PluginRegistry.java:299); 	at org.eclipse.core.internal.plugins.PluginRegistry.shutdown; (PluginRegistry.java:265); 	at org.eclipse.core.internal.runtime.InternalPlatform.loaderShutdown; (InternalPlatform.java:520); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.internal.boot.InternalBootLoader.shutdown; (InternalBootLoader.java:979); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:850); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:291); 	at org.eclipse.core.launcher.Main.run(Main.java:747); 	at org.eclipse.core.launcher.Main.main(Main.java:583)",3
The launch timeout (time waiting for a debugger to connect to a VM) is specific ; to a VM runner. That is if a VM runner uses an underlying connector that ; supports a timeout; we should allow the user to specify what that timeout is.; ; We could generalize this to have IVMRunners capable of returning a Map of ; arguements that a user may specify. This map could be exposed in the launch ; config UI such that the user could edit them. If we use the ; com.sun.jdi.connect.Connector.Argument class as entries in the map; each ; arguement has a description and type associated with it; that we can use to ; help create/verify the UI info for an argument.; ; As a short term fix; we could make this a global java debug preference. ; Currently; the value is not exposed and hard coded to 20 seconds in the ; Standard VM debug runner (it is not supported by the J9 debug runner).,2
I20050920; ; Search should provide a match rule that is a Camel Case rule so that a user can; search for references to NPE in Camel Case mode; and references to; NullPointerException will be returned.,3
200412070800:; ; Method argument types of the form T<? extends Q & R & S ...> are rejected. ; Same for lower type bounds.,3
Im using latest integration build of Eclipse on Windows 2000 Server and Suns ; 1.3.1 JDK. I set-up Java project in Eclipse; setup CVS repository; checked-out ; java files into source folder. I was able to run ant-script too - all classes ; went in to classes folder. Now when I opened a Java file; I was able to use ; code-completion most of places - I had lib\rt.jar and weblogic.jar in build-; path for the project. However; I wanted code-completion on classes we had ; written that were also being used.; ; So I added classes folder to build-path for the project. When I tried to open ; any of the source Java files; it would now take 4-5 minutes before I would ; see the file...CPU usage for associated Java process would go to 95% ; (sometimes; not always). I could do code-completion on package-name (Eclipse ; would crawl when I did ctrl+space after .). However; Eclipse was not able to ; see any of the classes - only the packages under classes folder. This was ; confirmed when I did Go To Type and Go To Package - I saw our packages in ; the dropdown - but none of our classes.; ; So I restarted my Eclipse - jar-ed up my classes; and this time added the jar ; to build-path for the project. Now I was able to see both our packages and our ; classes. However; Eclipse still takes ages opening a Java file - and crawls ; when I use code completion feature. I have to wait more than a minute before I ; can see the drop-down with the method-signatures. CPU usage goes to over 95%. ; ; If I remove my classes jar from the build-path; auto-complete works fine. ; Except for code which uses/inherits my classes - and of course; I get type ; cannot be resolved whenever I hover over any of my classes/interfaces.,3
"Ideally there should be a way to indicate a scope which is used to stop if the exception is uncaught in this given scope.; Typically; for Eclipse-in-Eclipse; I am interested in exception uncaught in the jdtcore; knowing that they will eventually get caught by the platform.; Similarily the JUnit tests are catching exceptions at some point.; ; I am wondering if the notion of search scope could not be reused in that sense... I would be using my user defined scope for more than one purpose; which; would make them more appealing.; ; NOTES:; ; DS (7/30/01 2:36:11 PM); 	Another interesting idea here (out of our step filtering idea); is to not worry about exceptions that come out of; 	class libraries (do not show exceptions thrown out of these packages/classes).; ; DW (8/28/01 9:57:29 AM); 	Also a request to allow exclusion filter: In the debugger I had a BP for exceptions. However the; 		code I am dealing with throws this exception a lot; in a particular function where I dont; 		have control over. It would be handy to have an exclusion list available; 		where the exception would be ignored.",1
Build 20020412; ; There are red X on Java project; packages if they contain an error class.; However; there is no red X on the class itself.  Why?,3
A new compiler option has been provided to fix bug 106478. This should be exposed in the UI.; Patch to follow.,3
"Build 20011025; ; Got the following exception while clicking into the text editor. Could; not reproduce; ; java.lang.IllegalArgumentException: Index out of bounds; 	at org.eclipse.swt.SWT.error(SWT.java:1791); 	at org.eclipse.swt.SWT.error(SWT.java:1737); 	at org.eclipse.swt.custom.StyledText.setStyleRange(StyledText.java:5944); 	at org.eclipse.jface.text.TextViewer.addPresentation(TextViewer.java; (Compiled Code)); 	at org.eclipse.jface.text.TextViewer.changeTextPresentation; (TextViewer.java:2227); 	at ; org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$BracketHighlighter.; resetBracketHighlighting(CompilationUnitEditor.java:184); 	at ; org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$BracketHighlighter.; mouseDown(CompilationUnitEditor.java:214); 	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:658); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:820); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:151); 	at org.eclipse.core.launcher.Main.run(Main.java:433); 	at org.eclipse.core.launcher.Main.main(Main.java:306)",3
"I20060221-1300; ; I got several exceptions in .log but nothing visibly in the UI. I started the JDT Text tests several times in Debug and Run mode (in sequence; not parallel). I also terminated one of those via Debug view.; ; !ENTRY org.eclipse.jdt.junit 4 4 2006-02-27 17:54:28.022; !MESSAGE Error; !STACK 0; java.lang.Exception: Unexpected TestElement type for testId 230: org.eclipse.jdt.text.tests.JUnitProjectTestSetup: NOT_RUN (1); 	at org.eclipse.jdt.internal.junit.model.TestRunSession$TestSessionNotifier.logUnexpectedTest(TestRunSession.java:476); 	at org.eclipse.jdt.internal.junit.model.TestRunSession$TestSessionNotifier.testFailed(TestRunSession.java:414); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$7.run(RemoteTestRunnerClient.java:525); 	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37); 	at org.eclipse.core.runtime.Platform.run(Platform.java:816); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.notifyTestFailed(RemoteTestRunnerClient.java:522); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.access$16(RemoteTestRunnerClient.java:517); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$TraceProcessingState.readMessage(RemoteTestRunnerClient.java:170); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.receiveMessage(RemoteTestRunnerClient.java:342); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.access$26(RemoteTestRunnerClient.java:341); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$ServerConnection.run(RemoteTestRunnerClient.java:267); ; !ENTRY org.eclipse.jdt.junit 4 4 2006-02-27 17:54:28.053; !MESSAGE Error; !STACK 0; java.lang.Exception: Unexpected TestElement type for testId 243: org.eclipse.jdt.text.tests.JUnitProjectTestSetup: NOT_RUN (1); 	at org.eclipse.jdt.internal.junit.model.TestRunSession$TestSessionNotifier.logUnexpectedTest(TestRunSession.java:476); 	at org.eclipse.jdt.internal.junit.model.TestRunSession$TestSessionNotifier.testFailed(TestRunSession.java:414); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$7.run(RemoteTestRunnerClient.java:525); 	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37); 	at org.eclipse.core.runtime.Platform.run(Platform.java:816); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.notifyTestFailed(RemoteTestRunnerClient.java:522); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.access$16(RemoteTestRunnerClient.java:517); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$TraceProcessingState.readMessage(RemoteTestRunnerClient.java:170); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.receiveMessage(RemoteTestRunnerClient.java:342); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.access$26(RemoteTestRunnerClient.java:341); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$ServerConnection.run(RemoteTestRunnerClient.java:267); ; !ENTRY org.eclipse.jdt.junit 4 4 2006-02-27 17:54:30.251; !MESSAGE Error; !STACK 0; java.lang.Exception: Unexpected TestElement type for testId 301: org.eclipse.jdt.text.tests.AbstractSemanticHighlightingTest$SemanticHighlightingTestSetup: NOT_RUN (1); 	at org.eclipse.jdt.internal.junit.model.TestRunSession$TestSessionNotifier.logUnexpectedTest(TestRunSession.java:476); 	at org.eclipse.jdt.internal.junit.model.TestRunSession$TestSessionNotifier.testFailed(TestRunSession.java:414); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$7.run(RemoteTestRunnerClient.java:525); 	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37); 	at org.eclipse.core.runtime.Platform.run(Platform.java:816); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.notifyTestFailed(RemoteTestRunnerClient.java:522); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.access$16(RemoteTestRunnerClient.java:517); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$TraceProcessingState.readMessage(RemoteTestRunnerClient.java:170); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.receiveMessage(RemoteTestRunnerClient.java:342); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.access$26(RemoteTestRunnerClient.java:341); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$ServerConnection.run(RemoteTestRunnerClient.java:267); ; !ENTRY org.eclipse.jdt.junit 4 4 2006-02-27 17:54:30.261; !MESSAGE Error; !STACK 0; java.lang.Exception: Unexpected TestElement type for testId 321: org.eclipse.jdt.text.tests.AbstractSemanticHighlightingTest$SemanticHighlightingTestSetup: NOT_RUN (1); 	at org.eclipse.jdt.internal.junit.model.TestRunSession$TestSessionNotifier.logUnexpectedTest(TestRunSession.java:476); 	at org.eclipse.jdt.internal.junit.model.TestRunSession$TestSessionNotifier.testFailed(TestRunSession.java:414); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$7.run(RemoteTestRunnerClient.java:525); 	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37); 	at org.eclipse.core.runtime.Platform.run(Platform.java:816); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.notifyTestFailed(RemoteTestRunnerClient.java:522); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.access$16(RemoteTestRunnerClient.java:517); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$TraceProcessingState.readMessage(RemoteTestRunnerClient.java:170); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.receiveMessage(RemoteTestRunnerClient.java:342); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.access$26(RemoteTestRunnerClient.java:341); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$ServerConnection.run(RemoteTestRunnerClient.java:267); ; !ENTRY org.eclipse.jdt.junit 4 4 2006-02-27 17:54:31.607; !MESSAGE Error; !STACK 0; java.lang.Exception: Unexpected TestElement type for testId 363: org.eclipse.jdt.ui.tests.core.ProjectTestSetup: NOT_RUN (1); 	at org.eclipse.jdt.internal.junit.model.TestRunSession$TestSessionNotifier.logUnexpectedTest(TestRunSession.java:476); 	at org.eclipse.jdt.internal.junit.model.TestRunSession$TestSessionNotifier.testFailed(TestRunSession.java:414); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$7.run(RemoteTestRunnerClient.java:525); 	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37); 	at org.eclipse.core.runtime.Platform.run(Platform.java:816); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.notifyTestFailed(RemoteTestRunnerClient.java:522); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.access$16(RemoteTestRunnerClient.java:517); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$TraceProcessingState.readMessage(RemoteTestRunnerClient.java:170); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.receiveMessage(RemoteTestRunnerClient.java:342); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.access$26(RemoteTestRunnerClient.java:341); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$ServerConnection.run(RemoteTestRunnerClient.java:267); ; !ENTRY org.eclipse.jdt.junit 4 4 2006-02-27 17:54:33.343; !MESSAGE Error; !STACK 0; java.lang.Exception: Unexpected TestElement type for testId 512: org.eclipse.jdt.text.tests.IndentActionTest$IndentTestSetup: NOT_RUN (1); 	at org.eclipse.jdt.internal.junit.model.TestRunSession$TestSessionNotifier.logUnexpectedTest(TestRunSession.java:476); 	at org.eclipse.jdt.internal.junit.model.TestRunSession$TestSessionNotifier.testFailed(TestRunSession.java:414); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$7.run(RemoteTestRunnerClient.java:525); 	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37); 	at org.eclipse.core.runtime.Platform.run(Platform.java:816); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.notifyTestFailed(RemoteTestRunnerClient.java:522); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.access$16(RemoteTestRunnerClient.java:517); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$TraceProcessingState.readMessage(RemoteTestRunnerClient.java:170); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.receiveMessage(RemoteTestRunnerClient.java:342); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient.access$26(RemoteTestRunnerClient.java:341); 	at org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient$ServerConnection.run(RemoteTestRunnerClient.java:267)",3
"3.1; ; The Javadoc compiler should offer an option to warn about incomplete @param; tags. I am talking about tags like; ; 	/**; 	 * @param integer; 	 */; 	public void foo(Integer integer) {; 	}; ; where the @param integer is actually missing the description.; ; The Javadoc checker already does so for @return tags if they miss the description.",3
"N20031029; but was able to reproduce with JDT/Core v_379a as well.; ; What I see is that I get the delta of adding a field to a type is sent out ; when manipulating the type a second time. Here are steps to reproduce:; ; - set two breakpoints in AllTypesCacheTest:testNewElementCreation (please make;   sure that the suite method of the test either executes all tests or that;   the testNewElementCreation method is passed to the constructor. Otherwise;   you will never execute the test).;   first at line(210): type.createField(public int fCount;; null; true; null);;   second at line(212): res1.clear();; ; - run the test case under debugger; ; - when hitting the first breakpoint set a break point in;   TypeCacheDeltaListener#elementChanged which is a inner type of the;   AllTypesCache; ; - resume. The delta sent out by adding the field is:; ;   org.eclipse.jdt.core.ElementChangedEvent[source=Java Model[*]: {CHILDREN}; 	TestProject2[*]: {CHILDREN}; 		src[*]: {CHILDREN}; 			<default>[*]: {CHILDREN}; 				A.java[*]: {CONTENT}]; ; - resume; ; - now slowly step over including the statment type.createType(public class ;   AInner {}; null; true; null); ;   This seems to be important. Sometime when directly resuming the second delta;   contained the newly added type and field.; ; - the break point in the element change listener is hit again; ; - the delta sent out by adding the type is; ; org.eclipse.jdt.core.ElementChangedEvent[source=Java Model[*]: {CHILDREN}; 	TestProject2[*]: {CHILDREN}; 		src[*]: {CHILDREN}; 			<default>[*]: {CHILDREN}; 				A.java[*]: {CHILDREN | FINE GRAINED}; 					A[*]: {CHILDREN | FINE GRAINED}; 						fCount[+]: {}]; ;   which is the delta from adding the field.; ; - debugging further shows that the delta adding the type is sent out when ;   deleting the test projects.",3
Build Identifier: 3.5.1  M20090917-0800; ; This is a bug I know for ages and it is so annoying I am reporting it now - it cost me lots of time already.; ; When I run a web app using for example a maven plugin with jetty:run - and I use this configuration for debugging the  webapp; it sometimes says source not found.; ; When I click on add and then ok - even without doing anything; the source is shown for 1-2 seconds and disappears again. You can do this all the time and it is reproducable.; ; I have had this problem 1 year ago and I have it now with the latest Yoxos Eclipse with some J2ee tools; ; The only solution I know for this; is to use Netbeans....; ; Reproducible: Always; ; Steps to Reproduce:; 1. Install any Eclipse; 2. Get a project (e.g. from me); 3. Run it in debug mode,3
Type in editor:; ; stdo{ctrl+space}; ; observe:; ; System.out.println({cursor here});; ; it should be:; ; System.out.println({cursor here});,3
"The OPTIONAL attribute for classpath entries doesnt appear to work for variable classpath entries.; ; For example; wed like to use the following entry in our classpath file:; 	<classpathentry kind=var path=ECLIPSE_INSTALL/plugins/org.apache.ant_1.7.0.v200803061910/lib/ant.jar>; 		<attributes>; 			<attribute name=optional value=true/>; 		</attributes>; 	</classpathentry>; ; Basically; we want our projects to use this classpath entry if the ECLIPSE_INSTALL variable is defined. But if its not; then we still want the project to compile.; ; Wed like the OPTIONAL attribute on variable entries to work the same way it does for source entries. For example:; 	<classpathentry kind=src path=bar>; 		<attributes>; 			<attribute name=optional value=true/>; 		</attributes>; 	</classpathentry>; ; If the folder bar doesnt exist; the project will still compile.",3
Update the code formatter for Java 8 constructs. Currently; the formatter just gives up if it e.g. sees an annotation on an array type or vararg.; ; ASTRewrite needs a working code formatter to work correctly. ASTRewriteFormatter formats snippets to find the current formatter settings; and it runs the code formatter for new nodes.,3
Hi; it would be very nice if brackets colouring is included on the current line.; This would help alot to destinguished the brakets when there are a lot in one ; line.; ; Best Regards;; Dimitar Giormov,4
The new Task markers feature in 2.1 is great! Now it would be even better if ; you could assign priorities to specific task markers. For example; for high ; priority tasks you use TODO_HIGH; for medium TODO_MEDIUM etc. ; So instead of one input field for the markers you would have three; one for ; each priority.,3
Put the following line of code in a Java editor;   String commonLinks = ROOT_PREFIX + LINK;; ; Put the cursor after LINK. ; Do Ctrl-Shift-leftArrow; LINK will be selected; this is fine.; Do Ctrl-Shift-leftArrow; everything from LINK to commonLinks will be included.; This is annoying because it is way too much.; ; In 2.1; the second Ctrl-Shift-leftArrow used to select the +.,3
"When trying to add a breakpoint in an empty method; the breakpoint is set on the; line of the {.; ; public class Bug_ {; 	public static void main(String[] args) {;                 // add breakpoint here; 	}; }",3
"Steps to see the problem:; 	1) Set a breakpoint in some code; and run to it.; 	2) Notice that the current line of code is selected; 	3) Now click somewhere in the editor; 	4) The current line is no longer selected (because the selection folows the caret); ; 	Would be nice if the user always knew where the current line was; even if they select; 	somewhere else in the text editor.; ; 	You could do this by setting the background color in the StyledText widget.... (maybe); ; 	Or you could do it the VAME way; by having a little red arrow in the breakpoint bar; 	to the left of the text.; ; NOTES:; ; DS (5/17/01 2:05:51 PM); 	Duplicate of 1G3A7CG: ITPDUI:ALL - Displaying Instruction pointer; ; DW (5/17/01 5:48:23 PM); 	Deferred to post June.",3
Currently there are bugs in the code.  The constant has changed and we should ; check for null when getting the key (even though JavaCore initializes the value ; to ).; ; More difficult:; The UI for manipulating the setting of this option in the JavaOptions does not ; take into consideration anyone setting a filter via code ; (JavaBuilderPreferencePage).  Is this an intended limitation?,1
I20060217-1115; ; Use blocks in if/while/for... statements:; AFAICS; ... stands for /do. If so; then the label would better be explicit.; ; Changes as discussed:; - parenthesis -> parentheses; - Non if not necessary -> Only where necessary; - try to avoid mnemonics on narrow letters i; l; j; I,3
Build ID: I20080530-1730; ; Steps To Reproduce:; 1. Create a method with Javadoc and include a Commons Attributes annotation (starting with @@) at the end; i.e.; not followed by a regular Javadoc tag.; 2. Let the formatter format the source file.; 3. A blank line is inserted between the javadoc comment and the method signature. If you repeat step 2; a second line will be inserted; but after that it stops. A third line does not appear.; ; More information:; I tried this with several different formatter profiles; including the built-in Java and Eclipse profiles.; ; This:;     /**;      * foo;      * ;      * @@Foo(foo);      */;     Object doSomething(Object object) throws Exception;; ; gets turned into this:;     /**;      * foo;      * ;      * @@Foo(foo);      */;      ;     Object doSomething(Object object) throws Exception;; ; Note the spurious blank line. A second formatter call gives me:;     /**;      * foo;      * ;      * @@Foo(foo);      */;      ; ;     Object doSomething(Object object) throws Exception;; ; A second blank line. Here it stops; there will be no third line. Strangely; if I add a regular Javadoc tag after the @@ part; like this:;    /**;      * foo;      * ;      * @@Foo(foo);      * @deprecated;      */;     Object doSomething(Object object) throws Exception;; ; Then it works. No line is added. This used to work in Europa and has occurred for me now at least in the Ganymede build i mentioned.,3
Created attachment 79190; error log; ; Build ID: I20070625-1500; ; Steps To Reproduce:; 1. Create a Java project and include the attached source file BadClass.java; 2. Compile it; ; ; More information:; ; The attached example was simplified and it only contains the error cause.; ; The intent of the method is to do the following assignment;  People oPeople;;  {oPeople= (People) obj;}; ; Since the automated tool which made the source invoked Class.toString() instead of Class.getName() the resulting code was; ; class People oPeople;; {oPeople= (class People) obj;} ; ; When compiling; an internal compiler error occurs.; It DOES NOT occur unless the assignment is done inside its own scope. (i.e; the following example do not compiles; ; but the compiler errors are fine); ; class People oPeople;; oPeople= (class People) obj;; ; All this examples are included into the attachment. You may also need a People class which may be implemented as:; ; public class People {},3
Build ID: I20090313-0100; ; Steps To Reproduce:; 1. Fill paste buffer.; 2. Select a constant to rename; ALT+SHIFT+r to rename; 3. CRTL-v or CRTL-INS (Windows XP); 4. All instances will now show the correct renaming; 5. Hit enter to rename - not all previewed instances will be renamed.; 6. But - if you type the refactoring instead of pasting; then it works correct.; ; ; More information:; // example code: try to copy IPSE and refactor ECL_CONSTANT to ECLIPSE_CONSTANT; // this is short enough to show; that the preview is correct; but the following update is not updating CONCATENATION; ; public class EclipseRefactorCopyAndPaste; {; ;     private static final String ECL_CONSTANT = ECL_CONSTANT;; ;     static final private String CONCATENATION = SOME_TEXT  + ECL_CONSTANT;; ;     public EclipseRefactorCopyAndPaste();     {;         System.out.println(ECL_CONSTANT);;     }; },3
"In the 200306511 build; I attempted to move 10 static fields from ; ILaunchVariableConstants to ILaunchVariableManager. The refactoring failed with ; this exception: (Clicking Undo did not undo the operation - it left many ; edits in the workspace).; ; !ENTRY org.eclipse.jdt.ui 4 10001 Jun 16; 2003 10:05:37.503; !MESSAGE Internal Error; !STACK 1; org.eclipse.core.runtime.CoreException: Overlapping text edits; 	at java.lang.Throwable.<init>(Throwable.java); 	at java.lang.Throwable.<init>(Throwable.java); 	at org.eclipse.core.runtime.CoreException.<init>(CoreException.java:35); 	at ; org.eclipse.jdt.internal.corext.textmanipulation.TextBufferEditor.performEdits; (TextBufferEditor.java:143); 	at ; org.eclipse.jdt.internal.corext.refactoring.changes.AbstractTextChange.perform; (AbstractTextChange.java:142); 	at ; org.eclipse.jdt.internal.corext.refactoring.changes.TextFileChange.perform; (TextFileChange.java:208); 	at ; org.eclipse.jdt.internal.corext.refactoring.CompositeChange.createUndoList; (CompositeChange.java:122); 	at org.eclipse.jdt.internal.corext.refactoring.CompositeChange.perform; (CompositeChange.java:149); 	at org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run; (PerformChangeOperation.java:173); 	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation; (BatchOperation.java:34); 	at org.eclipse.jdt.internal.core.JavaModelOperation.execute; (JavaModelOperation.java:365); 	at org.eclipse.jdt.internal.core.JavaModelOperation.run; (JavaModelOperation.java:704); 	at org.eclipse.core.internal.resources.Workspace.run; (Workspace.java:1595); 	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2809); 	at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange; (PerformChangeOperation.java:183); 	at org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run; (PerformChangeOperation.java:151); 	at org.eclipse.jface.operation.ModalContext.runInCurrentThread; (ModalContext.java:302); 	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252); 	at org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.run; (RefactoringWizardDialog2.java:271); 	at ; org.eclipse.jdt.internal.ui.refactoring.PerformRefactoringUtil.performRefactorin; g(PerformRefactoringUtil.java:53); 	at ; org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish; (RefactoringWizard.java:371); 	at ; org.eclipse.jdt.internal.ui.refactoring.PreviewWizardPage.performFinish; (PreviewWizardPage.java:302); 	at ; org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish; (RefactoringWizard.java:434); 	at ; org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.okPressed; (RefactoringWizardDialog2.java:395); 	at org.eclipse.jface.dialogs.Dialog.buttonPressed(Dialog.java:256); 	at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:423); 	at org.eclipse.swt.widgets.TypedListener.handleEvent; (TypedListener.java:89); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:583); 	at org.eclipse.jface.window.Window.open(Window.java:563); 	at ; org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate; (RefactoringStarter.java:55); 	at ; org.eclipse.jdt.internal.ui.refactoring.actions.MoveStaticMembersAction.startRef; actoring(MoveStaticMembersAction.java:162); 	at ; org.eclipse.jdt.internal.ui.refactoring.actions.MoveStaticMembersAction.run; (MoveStaticMembersAction.java:86); 	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun; (SelectionDispatchAction.java:191); 	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run; (SelectionDispatchAction.java:169); 	at org.eclipse.jdt.ui.actions.MoveAction.run(MoveAction.java:114); 	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun; (SelectionDispatchAction.java:191); 	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run; (SelectionDispatchAction.java:169); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection; (ActionContributionItem.java:542); 	at org.eclipse.jface.action.ActionContributionItem.access$4; (ActionContributionItem.java:496); 	at org.eclipse.jface.action.ActionContributionItem$6.handleEvent; (ActionContributionItem.java:468); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1742); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1399); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1382); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:858); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461); 	at java.lang.reflect.AccessibleObject.invokeL(AccessibleObject.java:207); 	at java.lang.reflect.Method.invoke(Method.java:271); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:291); 	at org.eclipse.core.launcher.Main.run(Main.java:747); 	at org.eclipse.core.launcher.Main.main(Main.java:583); !ENTRY org.eclipse.jdt.ui 4 4 Jun 16; 2003 10:05:37.523; !MESSAGE Overlapping text edits",2
