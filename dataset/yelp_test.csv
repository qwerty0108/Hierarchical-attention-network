text,stars
"Build F1 + latest CVS code as of 20020528; Linux-GTK; ; 1. Bring up the launch config dialog in a new workspace; 2. Select the Remote Java Application config type; 3. Click New. The following exception is written to the log.; ; !ENTRY org.eclipse.core.resources 1 4 May 28; 2002 08:50:18.618; !MESSAGE Unhandled exception caught in event loop.; !ENTRY org.eclipse.ui 4 0 May 28; 2002 08:50:18.623; !MESSAGE -1; !STACK 0; java.lang.ArrayIndexOutOfBoundsException: -1; 	at ; org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab.handleConnectorComboModified(JavaConnectTab.java:201); 	at ; org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab$3.modifyText(JavaConnectTab.java:163); 	at ; org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:179); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:810); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795); 	at org.eclipse.swt.widgets.Combo.processModify(Combo.java:700); 	at org.eclipse.swt.widgets.Widget.processEvent(Widget.java:584); 	at org.eclipse.swt.widgets.Display.windowProc(Display.java:1731); 	at org.eclipse.swt.internal.gtk.OS.gtk_editable_delete_text(Native ; Method); 	at org.eclipse.swt.widgets.Combo.setText(Combo.java:1059); 	at ; org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab.updateConnectionFromConfig(JavaConnectTab.java:301); 	at ; org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab.initializeFrom(JavaConnectTab.java:274); 	at ; org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.initializeFrom(AbstractLaunchConfigurationTabGroup.java:78); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.setLaunchConfiguration(LaunchConfigurationDialog.java:1336); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.selectionChanged(LaunchConfigurationDialog.java:1265); 	at ; org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:147); 	at ; org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1154); 	at ; org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:903); 	at org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:342); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.handleNewAction(LaunchConfigurationDialog.java:1806); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog$ButtonActionNew.run(LaunchConfigurationDialog.java:2854); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog$1.widgetSelected(LaunchConfigurationDialog.java:2823); 	at ; org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:85); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:815); 	at ; org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1379); 	at ; org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1223); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:551); 	at org.eclipse.jface.window.Window.open(Window.java:538); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.doLastLaunchedConfig(LaunchConfigurationDialog.java:530); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.open(LaunchConfigurationDialog.java:491); 	at ; org.eclipse.debug.internal.ui.actions.OpenLaunchConfigurationsAction.run(OpenLaunchConfigurationsAction.java:133); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:590); 	at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407); 	at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361); 	at ; org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352); 	at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:815); 	at ; org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1379); 	at ; org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1223); 	at ; org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1085); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1068); 	at ; org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:432); 	at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24)",1
F2; ; - workspace with JDK 1.3.1; - now install JDK 1.4.1 and make it the default JDK using Preference->Java->;   Install JRES; ; observe: workspace doesnt rebuild.,1
20021216; open java build path page; libraries tab; expand rt.jar node; select javadoc; edit; put this in the field: http://java.sun.com/j2se/1.3/docs/api/; validate; it says that everything is fine; OK; see: nothing happens - javadoc is still (None); ; eature as if not not being there,1
"DW (8/10/01 11:00:27 AM); 	When a breakpoint is hit while doing a step; the step event may be received; 	after the breakpoint. The breakpoint has already ended (aborted) the step.; 	It looks like our model does more work than necessary to process the step; 	event.",1
"While trying to debug a class using native methods on a Windows system; we have ; found that breakpoints are simply ignored no matter how many are added or where ; they are in the code. This happens whether the native methods are actually used ; or not - simply declaring them seems to cause the problem.; ; I have a very simple HelloWorld testcase that demonstrates the problem. To run ; this; compile the c file to a dll and add the line -Djava.library.path=<path> ; to the VM arguments. When you debug the class; the debugger wont stop on the ; breakpoint and will just run the class to completion.; ; ; HelloWorld.java; ; public class HelloWorld {; 	private native void print();; ; 	public static void main(String[] args) {; 		new HelloWorld().print();; 	}; 	; 	static {; 		System.loadLibrary(HelloWorld);; 	}; }; ; ; HelloWorld.h; ; /* DO NOT EDIT THIS FILE - it is machine generated */; #include <jni.h>; /* Header for class HelloWorld */; ; #ifndef _Included_HelloWorld; #define _Included_HelloWorld; #ifdef __cplusplus; extern C {; #endif; /*;  * Class:     HelloWorld;  * Method:    print;  * Signature: ()V;  */; JNIEXPORT void JNICALL Java_HelloWorld_print;   (JNIEnv *; jobject);; ; #ifdef __cplusplus; }; #endif; #endif; ; ; HelloWorld.c; ; #include <jni.h>; #include <stdio.h>; #include HelloWorld.h; ; JNIEXPORT void JNICALL; Java_HelloWorld_print(JNIEnv *env; jobject obj); {; 	printf(Hello World);; 	return;; }",1
TestCase (source follows):; Set a suspendVM modification watchpoint on myString; Set a breakpoint on line 30; ; After hitting the watchpoint; resume the VM.; ; You hit the breakpoint at line 30; but you get the top stack frame as <not ; responding> and it seems to be the stack frame from hitting the watchpoint.,1
"The Junit Workbench Launcher does not work due to a NullPointerException trying ; to start the Launcher.; ; I am using org.eclipse.pde.junit dated 20020213.; ; STEPS; 1) Select any Junit test that requires the workbench; 2) Select Run->JUnit Workbench; ; Internal Error ; ; java.lang.NullPointerException; 	at org.eclipse.debug.internal.core.Launcher.launch(Launcher.java:104); 	at org.eclipse.debug.internal.ui.actions.LaunchSelectionAction$1.run; (LaunchSelectionAction.java:67); 	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56); 	at org.eclipse.debug.internal.ui.actions.LaunchSelectionAction.run; (LaunchSelectionAction.java:63); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:466); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection; (ActionContributionItem.java:407); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent; (ActionContributionItem.java:361); 	at org.eclipse.jface.action.ActionContributionItem.access$0; (ActionContributionItem.java:352); 	at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent; (ActionContributionItem.java:47); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1420); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:692); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:675); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:777); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:151); 	at org.eclipse.core.launcher.Main.run(Main.java:502); 	at org.eclipse.core.launcher.Main.main(Main.java:362)",1
If the selection cant be resolved an exception occurs.; Test Case:; - open Java editor; - select something that does not resolve (e.g. new); ; Note: F3 works i.e. does nothing (no beep; no status info),1
"I tried to search for all references to Action.setImageDescriptor() in the ; workspace.  The search appeared to complete; but then it showed an error ; message.  After pressing OK; I got at least partial search results in the ; search view.; ; I tried the search again with the same results.; ; The following error was logged:; ; java.lang.reflect.InvocationTargetException: java.lang.NullPointerException; 	at org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getMethods; (SourceTypeBinding.java(Compiled Code)); 	at ; org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getExactConstructor; (SourceTypeBinding.java:353); 	at org.eclipse.jdt.internal.compiler.lookup.BlockScope.getConstructor; (BlockScope.java:923); 	at org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.resolve; (ExplicitConstructorCall.java:243); 	at ; org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.checkName; (ConstructorDeclaration.java:126); 	at ; org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve; (AbstractMethodDeclaration.java:258); 	at org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.resolve; (ConstructorDeclaration.java:322); 	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve; (TypeDeclaration.java:726); 	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve; (TypeDeclaration.java:754); 	at ; org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve; (CompilationUnitDeclaration.java:188); 	at ; org.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatchesInCo; mpilationUnit(MatchingOpenable.java:282); 	at ; org.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatches; (MatchingOpenable.java:144); 	at ; org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches; (MatchLocator.java:1092); 	at ; org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches; (MatchLocator.java:426); 	at org.eclipse.jdt.core.search.SearchEngine.search; (SearchEngine.java:344); 	at org.eclipse.jdt.core.search.SearchEngine.search; (SearchEngine.java:290); 	at org.eclipse.jdt.internal.ui.search.JavaSearchOperation.execute; (JavaSearchOperation.java:79); 	at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run; (WorkspaceModifyOperation.java:64); 	at org.eclipse.core.internal.resources.Workspace.run; (Workspace.java:1232); 	at org.eclipse.ui.actions.WorkspaceModifyOperation.run; (WorkspaceModifyOperation.java:78); 	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run; (ModalContext.java:98); ; (Build 20020125)",1
20020123 with the latest plugins isnt showing new breakpoints in the; breakpoints view. I have to close the view and reopen it for my breakpoints to; appear. Im using only simple line breakpoints.,1
"20020521; 1. have a workspace with some projects; including a closed one.; 2. open javadoc export wizard; ; walkback printed to log:; ; Java Model Exception: Java Model Status [Test does not exist.]; 	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException; (JavaElement.java:501); 	at org.eclipse.jdt.internal.core.JavaProject.openWhenClosed; (JavaProject.java:1625); 	at org.eclipse.jdt.internal.core.JavaElement.openHierarchy; (JavaElement.java:522); 	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo; (JavaElement.java(Compiled Code)); 	at org.eclipse.jdt.internal.core.JavaElement.getChildren; (JavaElement.java:266); 	at org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoots; (JavaProject.java:1096); 	at org.eclipse.jdt.internal.core.JavaProject.getPackageFragments; (JavaProject.java:1145); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocProjectContentProvider.getEleme; nts(JavadocProjectContentProvider.java:54); 	at org.eclipse.jface.viewers.StructuredViewer.getRawChildren; (StructuredViewer.java:397); 	at org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren; (AbstractTreeViewer.java:570); 	at org.eclipse.jface.viewers.StructuredViewer.getFilteredChildren; (StructuredViewer.java:346); 	at org.eclipse.jface.viewers.StructuredViewer.getSortedChildren; (StructuredViewer.java:447); 	at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren; (AbstractTreeViewer.java:241); 	at org.eclipse.jface.viewers.AbstractTreeViewer$2.run; (AbstractTreeViewer.java:646); 	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection; (StructuredViewer.java:688); 	at org.eclipse.jface.viewers.CheckboxTreeViewer.preservingSelection; (CheckboxTreeViewer.java:324); 	at org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged; (AbstractTreeViewer.java:638); 	at org.eclipse.jface.viewers.ContentViewer.setInput; (ContentViewer.java:234); 	at org.eclipse.jface.viewers.StructuredViewer.setInput; (StructuredViewer.java:875); 	at ; org.eclipse.jdt.internal.ui.jarpackager.CheckboxTreeAndListGroup.initialize; (CheckboxTreeAndListGroup.java:433); 	at ; org.eclipse.jdt.internal.ui.jarpackager.CheckboxTreeAndListGroup.createContents; (CheckboxTreeAndListGroup.java:220); 	at ; org.eclipse.jdt.internal.ui.jarpackager.CheckboxTreeAndListGroup.<init>; (CheckboxTreeAndListGroup.java:90); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocTreeWizardPage.createInputGroup; (JavadocTreeWizardPage.java:159); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocTreeWizardPage.createControl; (JavadocTreeWizardPage.java:138); 	at org.eclipse.jface.wizard.Wizard.createPageControls(Wizard.java:164); 	at org.eclipse.jface.wizard.WizardDialog.createPageControls; (WizardDialog.java:505); 	at org.eclipse.jface.wizard.WizardDialog.setWizard; (WizardDialog.java:841); 	at org.eclipse.jface.wizard.WizardDialog.showPage(WizardDialog.java:875); 	at org.eclipse.jface.wizard.WizardDialog.nextPressed; (WizardDialog.java:653); 	at org.eclipse.jface.wizard.WizardDialog.buttonPressed; (WizardDialog.java:308); 	at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:398); 	at org.eclipse.swt.widgets.TypedListener.handleEvent; (TypedListener.java:85); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:551); 	at org.eclipse.jface.window.Window.open(Window.java:538); 	at org.eclipse.ui.actions.ExportResourcesAction.run; (ExportResourcesAction.java:80); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:590); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection; (ActionContributionItem.java:407); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent; (ActionContributionItem.java:361); 	at org.eclipse.jface.action.ActionContributionItem.access$0; (ActionContributionItem.java:352); 	at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent; (ActionContributionItem.java:47); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1085); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1068); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:739); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:200); 	at org.eclipse.core.launcher.Main.run(Main.java:643); 	at org.eclipse.core.launcher.Main.main(Main.java:476)",1
1) select a CU or type; 2) compare with local history; ; ->there is no support to perform a structure compare.,2
Is there some way to get the Java formatting in the details area when a java ; value is being displayed? The debug model presentation specifies a source ; viewer configuration to do code assist; but it does not seem to have a way to ; do the color coding/formatting.,2
"Eclipse 3.0M7; ; Using the same example as in Bug 52344; setting the editor to use space for tab; and using the Default-settings for the formatter. ; ; Reformatting this code: ; ; public class Test1 {;     /**;      *     <ul>;     <li>1. K = INT( X / 100 );;     <li>2. M = 15 + INT(( 3*K+3 ) / 4 ) - INT(( 8*K+13 ) / 25 );;     <li>3. S = 2 - INT(( 3*K+3 ) / 4 );;     <li>4. A = MOD( X; 19 );;     <li>5. D = MOD( 19*A+M; 30 );;     <li>6. R = INT( D / 29 ) + ( INT( D / 28 ) - INT( D / 29 )) * INT( A / 11 );;     <li>7. OG = 21 + D - R; - M rzdatum des Ostervollmonds (= 14. Tag des ersten; Monats im Mondkalender; genannt Nisanu);     <li>8. SZ = 7 - MOD( X + INT( X / 4 ) + S; 7 ); - Datum des 1. Sonntags im M rz;     <li>9. OE = 7 - MOD( OG - SZ; 7 );;     </ul>;      */;     public void foo() {;     }; }; ; and immediately pressing undo yields this: ; ; public class Test1 {;     /**;      *     <ul>;     <li>1. K = INT( X / 100 );;     <li>2. M = 15 + INT(( 3*K+3 ) / 4 ) - INT(( 8*K+13 ) / 25 );;     <li>3. S = 2 - INT(( 3*K+3 ) / 4 );;     <li>4. A = MOD( X; 19 );;     <li>5. D = MOD( 19*A+M; 30 );;     <li>6. R = INT( D / 29 ) + ( INT( D / 28 ) - INT( D / 29 )) * INT( A / 11 );;     <li>7. OG = 21 + D - R; - M rzdatum des Ostervollmonds (= 14. Tag des ersten; Monats im Mondkalender; genannt Nisanu);     <li>8. SZ = 7 - MOD( X + INT( X / 4 ) + S; 7 ); - Datum des 1. Sonntags im M rz;     <li>9. OE = 7 - MOD( OG - SZ; 7 );;     </ul>;      */;     public void foo() {;     }; }/; 	public void foo() {; 	}; }; ; Yes; settings the editor and the formatter to using different things for a tab; is probably useless; but I dont think it should break code when doing stupid; things :-)",2
Reproduced on 2 different machines; one running RHEL 3.0 and one running SLES 9 ; Beta 6.; ; IES Build 200405060200; ; To reproduce:; ; Make sure you are in a german locale and have the 3.0 NL fragments installed so ; that menus; etc. are in german.  Create a new java project and switch to the ; java perspective.  Then; create a new class.  When you click finish to create ; the class; it will fail and a dialog will pop up complaining about an invalid ; thread access.  No special german characters are required to produce the bug.,2
"During the course of new Java project wizard; you are called upon to specify ; source root and build output destination. However there is no support to browse ; to locations for those. Users who are migrating existing projects from other ; IDEs may have their project folder structures already set; and will want the ; browse-to capability. ; ; To Reproduce:; ; 1.	Open WSWB; 2.	Create a new Java Project; 3.	After naming the project hit next; 4.	The next window allows you to specify the source and if you select use ; source folders contained in the project notice you have no browse support to ; select an existing project folder.; ; Expected Behaviour:; ; The user should be able to browse to an existing project folder.",2
OSX 10.2.6; Eclipse I20030916; ; Doing a surround with try catch:; ; !ENTRY org.eclipse.jdt.ui 4 10004 Sep 16; 2003 15:13:55.722; !MESSAGE Unrecoverable error occurred while performing the refactoring.; !STACK 0; ChangeAbortException: org.eclipse.jdt.internal.corext.refactoring.base.ChangeAbortException;         at ; org.eclipse.jdt.internal.ui.refactoring.changes.AbortChangeExceptionHandler.handle(AbortChangeExcept; ionHandler.java:28);         at org.eclipse.jdt.internal.corext.refactoring.base.Change.handleException(Change.java:108);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.AbstractTextChange.perform(AbstractTextChange.jav; a:201);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.TextFileChange.perform(TextFileChange.java:208);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:173; );         at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34);         at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366);         at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1571);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1588);         at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2963);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation; .java:183);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:151);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRu; nnableContext.java:113);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableC; ontext.java:80);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:126; );         at ; org.eclipse.jdt.ui.actions.SurroundWithTryCatchAction.run(SurroundWithTryCatchAction.java:127);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:196);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:842);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:529);         at org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:482);         at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:454);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82);         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1027);         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2180);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2037);         at org.eclipse.ui.internal.Workbench.run(Workbench.java:2020);         at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858);         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:324);         at org.eclipse.core.launcher.Main.basicRun(Main.java:295);         at org.eclipse.core.launcher.Main.run(Main.java:751);         at org.eclipse.core.launcher.Main.main(Main.java:587); Exception wrapped by ChangeAbortException: org.eclipse.jface.text.Assert$AssertionFailedException: ; Assertion failed: ;         at org.eclipse.jface.text.Assert.isTrue(Assert.java:175);         at org.eclipse.jface.text.Assert.isTrue(Assert.java:160);         at ; org.eclipse.jdt.internal.ui.text.link.LinkedPositionManager.getPositions(LinkedPositionManager.java:427);         at ; org.eclipse.jdt.internal.ui.text.link.LinkedPositionManager.documentAboutToBeChanged(LinkedPosition; Manager.java:477);         at ; org.eclipse.jface.text.AbstractDocument.fireDocumentAboutToBeChanged(AbstractDocument.java:549);         at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:956);         at ; org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedDocument.replace(PartiallySynchronizedDocum; ent.java:61);         at org.eclipse.jdt.internal.corext.textmanipulation.TextEdit.performReplace(TextEdit.java:401);         at org.eclipse.jdt.internal.corext.textmanipulation.SimpleTextEdit.perform(SimpleTextEdit.java:80);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:183);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.executeDo(EditProcessor.java:163);         at ; org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.performEdits(EditProcessor.java:121);         at ; org.eclipse.jdt.internal.corext.textmanipulation.TextBufferEditor.performEdits(TextBufferEditor.java:55);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.AbstractTextChange.perform(AbstractTextChange.jav; a:199);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.TextFileChange.perform(TextFileChange.java:208);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:173; );         at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34);         at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366);         at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1571);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1588);         at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2963);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation; .java:183);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:151);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRu; nnableContext.java:113);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableC; ontext.java:80);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:126; );         at ; org.eclipse.jdt.ui.actions.SurroundWithTryCatchAction.run(SurroundWithTryCatchAction.java:127);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:196);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:842);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:529);         at org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:482);         at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:454);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82);         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1027);         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2180);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2037);         at org.eclipse.ui.internal.Workbench.run(Workbench.java:2020);         at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858);         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:324);         at org.eclipse.core.launcher.Main.basicRun(Main.java:295);         at org.eclipse.core.launcher.Main.run(Main.java:751);         at org.eclipse.core.launcher.Main.main(Main.java:587),2
"package p;; class A {; 	void m(){; 		Object u= /*[*/new Object(){}/*]*/;; 	}; }; is extracted to a temp with no type",2
v20030115 + HEAD of (jdt.launching; jdt.launching.macosx):; ; Cannot launch from within Eclipse; cannot open JRE pref pag:; ; ; !ENTRY org.eclipse.ui 4 0 Jan 20; 2003 11:46:07.774; !MESSAGE null argument:; !STACK 0; org.eclipse.core.internal.runtime.AssertionFailedException: null argument:;         at org.eclipse.core.internal.runtime.Assert.isNotNull(Assert.java:78);         at org.eclipse.core.internal.runtime.Assert.isNotNull(Assert.java:66);         at org.eclipse.core.runtime.Path.initialize(Path.java:470);         at org.eclipse.core.runtime.Path.<init>(Path.java:98);         at ; org.eclipse.jdt.internal.launching.LaunchingPlugin$VMChanges.getConatinerId(Launchi; ngPlugin.java:132);         at ; org.eclipse.jdt.internal.launching.LaunchingPlugin$VMChanges.vmChanged(Launching; Plugin.java:157);         at ; org.eclipse.jdt.internal.launching.LaunchingPlugin.vmChanged(LaunchingPlugin.java:6; 86);         at org.eclipse.jdt.launching.JavaRuntime.fireVMChanged(JavaRuntime.java:1680);         at ; org.eclipse.jdt.launching.AbstractVMInstall.setInstallLocation(AbstractVMInstall.java:94);         at ; org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType.doCreateVMInstall(Mac; OSXVMInstallType.java:55);         at ; org.eclipse.jdt.launching.AbstractVMInstallType.createVMInstall(AbstractVMInstallType.j; ava:92);         at ; org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType.detectInstallLocation(M; acOSXVMInstallType.java:108);         at ; org.eclipse.jdt.launching.JavaRuntime.detectEclipseRuntime(JavaRuntime.java:1341);         at org.eclipse.jdt.launching.JavaRuntime.detectDefaultVM(JavaRuntime.java:1375);         at ; org.eclipse.jdt.launching.JavaRuntime.detectAndSaveVMDefinitions(JavaRuntime.java:; 1442);         at ; org.eclipse.jdt.launching.JavaRuntime.initializeVMConfiguration(JavaRuntime.java:1260; );         at org.eclipse.jdt.launching.JavaRuntime.initializeVMTypes(JavaRuntime.java:240);         at org.eclipse.jdt.launching.JavaRuntime.getVMInstallTypes(JavaRuntime.java:404);         at ; org.eclipse.jdt.internal.debug.ui.launcher.VMPreferencePage.createContents(VMPrefere; ncePage.java:162);         at ; org.eclipse.jface.preference.PreferencePage.createControl(PreferencePage.java:209);         at ; org.eclipse.jface.preference.PreferenceDialog.showPage(PreferenceDialog.java:963);         at org.eclipse.jface.preference.PreferenceDialog$7.run(PreferenceDialog.java:456);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65);         at ; org.eclipse.jface.preference.PreferenceDialog$6.widgetSelected(PreferenceDialog.java:; 449);         at ; org.eclipse.jface.util.OpenStrategy.firePostSelectionEvent(OpenStrategy.java:192);         at org.eclipse.jface.util.OpenStrategy.access$4(OpenStrategy.java:187);         at org.eclipse.jface.util.OpenStrategy$3.run(OpenStrategy.java:327);         at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31);         at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:94);         at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1137);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1027);         at org.eclipse.jface.window.Window.runEventLoop(Window.java:561);         at org.eclipse.jface.window.Window.open(Window.java:541);         at ; org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:47);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:804);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributio; nItem.java:422);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionIte; m.java:374);         at ; org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:36; 8);         at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContri; butionItem.java:69);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77);         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:634);         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1252);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1009);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1467);         at org.eclipse.ui.internal.Workbench.run(Workbench.java:1450);         at ; org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845);         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462);         at java.lang.reflect.Method.invoke(Native Method);         at org.eclipse.core.launcher.Main.basicRun(Main.java:247);         at org.eclipse.core.launcher.Main.run(Main.java:703);         at org.eclipse.core.launcher.Main.main(Main.java:539);         at java.lang.reflect.Method.invoke(Native Method);         at apple.launcher.LaunchRunner.run(LaunchRunner.java:88);         at apple.launcher.LaunchRunner.callMain(LaunchRunner.java:50);         at ; apple.launcher.JavaApplicationLauncher.launch(JavaApplicationLauncher.java:52),2
"Syntax highlighting deactivated after saving editor. Note: This only happened ; in the visible editor; all others were unaffected. Highlighting still shows in ; Editor preference page. Unable to reproduce (sorry). Here is log.; ; !MESSAGE Error logged from Debug Core: ; !STACK 1; org.eclipse.core.internal.resources.ResourceException: The resource tree is ; locked for modifications.; 	at org.eclipse.core.internal.resources.Workspace.beginOperation; (Workspace.java:116); 	at org.eclipse.core.internal.resources.Workspace.run; (Workspace.java:1377); 	at org.eclipse.debug.internal.core.BreakpointManager.addBreakpoints; (BreakpointManager.java:412); 	at org.eclipse.debug.internal.core.BreakpointManager.loadBreakpoints; (BreakpointManager.java:150); 	at ; org.eclipse.debug.internal.core.BreakpointManager.initializeBreakpoints; (BreakpointManager.java:277); 	at org.eclipse.debug.internal.core.BreakpointManager.getBreakpoints0; (BreakpointManager.java:248); 	at org.eclipse.debug.internal.core.BreakpointManager.getBreakpoints; (BreakpointManager.java:257); 	at org.eclipse.jdt.internal.debug.ui.JavaModelListener.elementChanged; (JavaModelListener.java:48); 	at org.eclipse.jdt.internal.core.JavaModelManager$3.run; (JavaModelManager.java:710); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:839); 	at org.eclipse.core.runtime.Platform.run(Platform.java:413); 	at org.eclipse.jdt.internal.core.JavaModelManager.fire; (JavaModelManager.java:705); 	at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged; (DeltaProcessor.java:1448); 	at org.eclipse.core.internal.events.NotificationManager$1.run; (NotificationManager.java:128); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:839); 	at org.eclipse.core.runtime.Platform.run(Platform.java:413); 	at org.eclipse.core.internal.events.NotificationManager.notify; (NotificationManager.java:143); 	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges; (NotificationManager.java:67); 	at org.eclipse.core.internal.resources.Workspace.broadcastChanges; (Workspace.java:133); 	at org.eclipse.core.internal.resources.Workspace.endOperation; (Workspace.java:753); 	at org.eclipse.core.internal.resources.Workspace.run; (Workspace.java:1383); 	at org.eclipse.ui.actions.WorkspaceModifyOperation.run; (WorkspaceModifyOperation.java:78); 	at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation; (AbstractTextEditor.java:2578); 	at ; org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperatio; n(CompilationUnitEditor.java:689); 	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave; (CompilationUnitEditor.java:739); 	at org.eclipse.ui.internal.EditorManager$11.run(EditorManager.java:1011); 	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:880); 	at org.eclipse.jface.operation.ModalContext.runInCurrentThread; (ModalContext.java:299); 	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249); 	at org.eclipse.jface.window.ApplicationWindow$1.run; (ApplicationWindow.java:394); 	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:66); 	at org.eclipse.jface.window.ApplicationWindow.run; (ApplicationWindow.java:391); 	at org.eclipse.ui.internal.WorkbenchWindow.run; (WorkbenchWindow.java:1119); 	at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation; (EditorManager.java:886); 	at org.eclipse.ui.internal.EditorManager.saveEditor; (EditorManager.java:1016); 	at org.eclipse.ui.internal.WorkbenchPage.saveEditor; (WorkbenchPage.java:2047); 	at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:32); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:749); 	at ; org.eclipse.ui.internal.registry.AcceleratorScope$AcceleratorAction.run; (AcceleratorScope.java:289); 	at org.eclipse.ui.internal.registry.AcceleratorScope.processKey; (AcceleratorScope.java:249); 	at org.eclipse.ui.internal.KeyBindingMenu$1.keyPressed; (KeyBindingMenu.java:54); 	at org.eclipse.ui.internal.KeyTable.handleEvent(KeyTable.java:75); 	at org.eclipse.ui.internal.KeyTable$3.handleEvent(KeyTable.java:116); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1623); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1369); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1360); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1343); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:775); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke; (NativeMethodAccessorImpl.java:42); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke; (DelegatingMethodAccessorImpl.java:28); 	at java.lang.reflect.Method.invoke(Method.java:327); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:247); 	at org.eclipse.core.launcher.Main.run(Main.java:703); 	at org.eclipse.core.launcher.Main.main(Main.java:539); !ENTRY org.eclipse.core.resources 1 4 Oct 14; 2002 17:05:21.535; !MESSAGE The resource tree is locked for modifications.; ; >20021009 with plugin-export 20021009-20021014.3; JRT.",2
RC1; J9; ; If a breakpoint is restricted for two different instance; the breakpoint is; effectif only for the last edited; and no error message reports the problem.; ; 1. create the following compilation unit : ; ; public class TestLineBreakpoint {;   public static void main(String[] args) {;     new Thread(new Runnable() {;       public void run() {;         new TestLineBreakpoint().foo();;       };     }).start();;     new TestLineBreakpoint().foo();;   };   public void foo() {;     int i= 0;;     while (1 == 1) {;       i++;  // <-- breakpoint here;     };   }; }; ; 2. Launch the program in debug mode.; 3. When the thread are suspended; restrict the breakpoint for the two this; variable.; 4. Resume the threads.; Only one off the two thread stop to the breakpoint.; ; We should warn the user of this behavior.,2
OSX 10.2.6; Eclipse I20030916; ; Doing a surround with try catch:; ; !ENTRY org.eclipse.jdt.ui 4 10004 Sep 16; 2003 15:13:55.722; !MESSAGE Unrecoverable error occurred while performing the refactoring.; !STACK 0; ChangeAbortException: org.eclipse.jdt.internal.corext.refactoring.base.ChangeAbortException;         at ; org.eclipse.jdt.internal.ui.refactoring.changes.AbortChangeExceptionHandler.handle(AbortChangeExcept; ionHandler.java:28);         at org.eclipse.jdt.internal.corext.refactoring.base.Change.handleException(Change.java:108);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.AbstractTextChange.perform(AbstractTextChange.jav; a:201);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.TextFileChange.perform(TextFileChange.java:208);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:173; );         at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34);         at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366);         at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1571);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1588);         at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2963);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation; .java:183);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:151);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRu; nnableContext.java:113);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableC; ontext.java:80);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:126; );         at ; org.eclipse.jdt.ui.actions.SurroundWithTryCatchAction.run(SurroundWithTryCatchAction.java:127);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:196);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:842);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:529);         at org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:482);         at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:454);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82);         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1027);         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2180);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2037);         at org.eclipse.ui.internal.Workbench.run(Workbench.java:2020);         at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858);         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:324);         at org.eclipse.core.launcher.Main.basicRun(Main.java:295);         at org.eclipse.core.launcher.Main.run(Main.java:751);         at org.eclipse.core.launcher.Main.main(Main.java:587); Exception wrapped by ChangeAbortException: org.eclipse.jface.text.Assert$AssertionFailedException: ; Assertion failed: ;         at org.eclipse.jface.text.Assert.isTrue(Assert.java:175);         at org.eclipse.jface.text.Assert.isTrue(Assert.java:160);         at ; org.eclipse.jdt.internal.ui.text.link.LinkedPositionManager.getPositions(LinkedPositionManager.java:427);         at ; org.eclipse.jdt.internal.ui.text.link.LinkedPositionManager.documentAboutToBeChanged(LinkedPosition; Manager.java:477);         at ; org.eclipse.jface.text.AbstractDocument.fireDocumentAboutToBeChanged(AbstractDocument.java:549);         at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:956);         at ; org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedDocument.replace(PartiallySynchronizedDocum; ent.java:61);         at org.eclipse.jdt.internal.corext.textmanipulation.TextEdit.performReplace(TextEdit.java:401);         at org.eclipse.jdt.internal.corext.textmanipulation.SimpleTextEdit.perform(SimpleTextEdit.java:80);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:183);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.executeDo(EditProcessor.java:163);         at ; org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.performEdits(EditProcessor.java:121);         at ; org.eclipse.jdt.internal.corext.textmanipulation.TextBufferEditor.performEdits(TextBufferEditor.java:55);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.AbstractTextChange.perform(AbstractTextChange.jav; a:199);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.TextFileChange.perform(TextFileChange.java:208);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:173; );         at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34);         at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366);         at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1571);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1588);         at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2963);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation; .java:183);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:151);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRu; nnableContext.java:113);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableC; ontext.java:80);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:126; );         at ; org.eclipse.jdt.ui.actions.SurroundWithTryCatchAction.run(SurroundWithTryCatchAction.java:127);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:196);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:842);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:529);         at org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:482);         at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:454);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82);         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1027);         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2180);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2037);         at org.eclipse.ui.internal.Workbench.run(Workbench.java:2020);         at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858);         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:324);         at org.eclipse.core.launcher.Main.basicRun(Main.java:295);         at org.eclipse.core.launcher.Main.run(Main.java:751);         at org.eclipse.core.launcher.Main.main(Main.java:587),2
1) Copy and paste junit.ui.; 2) Observe: the resulting package is named ui. It should be something like;    copy.of.junit.ui or junit.ui.copy.of.;    Also compile errors are introduced as the CUs still expect the package name;    to be junit.ui.; 3) Paste again.;    Theres a new folder (not package) called Copy of ui.;    It should remain a package and have package-like names.,2
Create a launch configuration; Test1.; Exit Eclipse.; Restart Eclipse; The JRE entry is removed from the JRE installed list; REalize the launch configuration dialog.; Select Test1.; It is enabled for debug (with no JRE entry); but hitting the button gives you ; the error that the JRE could not be found.; ; As well; any history items do not report the error of the missing ; JRE...clicking on them has no noticeable effect.,2
When a new launch config is created and a project is selected then the; entire project is searched for a main and the first one (?) is picked; and shown to the user. This random picking of a main is costly ; for large projects and we should not do this. We should only pick; the selection when a Compilation; type; classfile is selected.,2
I2002-12-17; ; Using the Ctrl Key to activate the source hover interfere with MacOS X way of; bringing up the context menu (which is therefore not available in the JDT editor),2
"I20050219-1500; ; Found the following while importing Organize Import preferences from the; Organize Import preference page.; ; java.lang.ClassCastException; 	at; org.eclipse.jdt.internal.ui.preferences.ImportOrganizeConfigurationBlock$ImportOrganizeLabelProvider.getText(ImportOrganizeConfigurationBlock.java:115); 	at; org.eclipse.jface.viewers.StructuredViewer.buildLabel(StructuredViewer.java:1730); 	at org.eclipse.jface.viewers.TableViewer.doUpdateItem(TableViewer.java:421); 	at; org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:352); 	at; org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1015); 	at org.eclipse.core.runtime.Platform.run(Platform.java:757); 	at; org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:1655); 	at org.eclipse.jface.viewers.TableViewer.internalRefreshAll(TableViewer.java:804); 	at org.eclipse.jface.viewers.TableViewer.internalRefresh(TableViewer.java:710); 	at org.eclipse.jface.viewers.TableViewer.internalRefresh(TableViewer.java:699); 	at org.eclipse.jface.viewers.StructuredViewer$7.run(StructuredViewer.java:1172); 	at; org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1109); 	at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1170); 	at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1129); 	at; org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField.setElements(ListDialogField.java:549); 	at; org.eclipse.jdt.internal.ui.preferences.ImportOrganizeConfigurationBlock.doButtonPressed(ImportOrganizeConfigurationBlock.java:281); 	at; org.eclipse.jdt.internal.ui.preferences.ImportOrganizeConfigurationBlock.access$0(ImportOrganizeConfigurationBlock.java:250); 	at; org.eclipse.jdt.internal.ui.preferences.ImportOrganizeConfigurationBlock$ImportOrganizeAdapter.customButtonPressed(ImportOrganizeConfigurationBlock.java:135); 	at; org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField.buttonPressed(ListDialogField.java:202); 	at; org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField.doButtonSelected(ListDialogField.java:450); 	at; org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField.access$0(ListDialogField.java:446); 	at; org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField$2.widgetSelected(ListDialogField.java:413); 	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2908); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2541); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:718); 	at org.eclipse.jface.window.Window.open(Window.java:696); 	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:66); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:1003); 	at; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:557); 	at; org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:507); 	at; org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:421); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2908); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2541); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1612); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1578); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:293); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144); 	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102); 	at; org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:333); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:150); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39); 	at; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25); 	at java.lang.reflect.Method.invoke(Method.java:324); 	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:268); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:260); 	at org.eclipse.core.launcher.Main.run(Main.java:887); 	at org.eclipse.core.launcher.Main.main(Main.java:871)",2
"Using attached InnerAnon source; place a breakpoint at line 13.; Select this in the variables view; In the detail pane; display hasMoreElements(); ; Get error dialog claiming an NPE (correct) but we are reporting the ; InvocationException in the log (I dont believe we should be logging this?); ; <log-entry date=Wed Apr 10 11:19:09 CDT 2002>;   <status;      plugin-id=org.eclipse.jdt.debug.ui;      severity=ERROR;      message=Internal Error;      code=150>;     <exception;        message=null;        trace=; com.sun.jdi.InvocationException; 	at org.eclipse.jdi.internal.ObjectReferenceImpl.invokeMethod; (ObjectReferenceImpl.java:327); 	at org.eclipse.jdt.internal.debug.core.model.JDIThread.invokeMethod; (JDIThread.java:619); 	at org.eclipse.jdt.internal.debug.core.model.JDIObjectValue.sendMessage; (JDIObjectValue.java:73); 	at ; org.eclipse.jdt.internal.debug.eval.model.EvaluationObject.sendMessage; (EvaluationObject.java:58); 	at ; org.eclipse.jdt.internal.debug.eval.ast.instructions.SendMessage.execute; (SendMessage.java:48); 	at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute; (Interpreter.java:32); 	at ; org.eclipse.jdt.internal.debug.eval.ast.instructions.InstructionSequence.evaluat; e(InstructionSequence.java:43); 	at ; org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$2.run; (ASTEvaluationEngine.java:210); 	at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation; (JDIThread.java:542); 	at ; org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$EvaluationThr; ead.doEvaluation(ASTEvaluationEngine.java:215); 	at ; org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$1.run; (ASTEvaluationEngine.java:175); 	at java.lang.Thread.run(Thread.java:512); >;     </exception>;   </status>; </log-entry>",2
I got a NPE on this code; IStatus validation= JavaConventions.validateClasspath(fJavaProject; ; newClasspath; fOutputLocation);; if (!validation.matches(IStatus.ERROR)) {; ; On debugging I saw that JavaModelStatus.fChildren is null.; Cant see how that happens; but it was.,2
"Do the following to reproduce the problem:; 1.  Define a Java project.; 2.  Import the attached file into the project.  (Ive also gotten the error by; copying and pasting the file.); ; I get the following error:; java.lang.StackOverflowError; 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.computePriority(CompilationR; esult.java:97); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:220); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230)  etc...; ; I am using a 2.0 build of Eclipse.  This looks alot like bug #21230.",2
- create this class X.;   <----------------------------->;   public class X {;      public class Y extends X {};      public class Z extends Y {};   };   <----------------------------->; - do a build.; ; there is an error : Cannot use this in a static context; ; same test case with;   javac 1.3 : OK;   javac 1.2.2 :;      X.java:2: No constructor matching X() found in class X.;              public class Y extends X {;                           ^;      X.java:5: Cant reference this before the superclass constructor has been ; called.;              public class Z extends Y {;                           ^;      2 errors,2
3.0RC3; ; With default settings:; - enable Mark Occurences; - perform a local search on a local variable with many occurences; - step through the search results; -> hits change between Occurences and Search Result background colors,2
"After creating a Javadoc documentation using the Generate Javadoc... wizard; ; with the option Open generated index file in browser activated; the index ; page doesnt show up and an exception is logged (see below).; ; When the option Preferences > Help > Always use external browsers is ; activated; the index page shows up correctly in the browser.; ; Thus; it may be that the exception occurs because the Javadoc wizard is open ; and because it is a modal dialog; it prevents the internal browser window from ; being opened.; ; Heres the exception:; !ENTRY org.eclipse.core.runtime 4 2 Apr 02; 2004 21:32:08.78; !MESSAGE Problems occurred when invoking code from plug-; in: org.eclipse.core.runtime.; !STACK 0; org.eclipse.swt.SWTException: Invalid thread access; 	at org.eclipse.swt.SWT.error(SWT.java:2625); 	at org.eclipse.swt.SWT.error(SWT.java:2555); 	at org.eclipse.swt.widgets.Widget.error(Widget.java:354); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:245); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:236); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:189); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:127); 	at org.eclipse.help.ui.internal.util.ErrorUtil.displayErrorDialog; (ErrorUtil.java:48); 	at org.eclipse.help.ui.internal.util.ErrorUtil.displayError; (ErrorUtil.java:23); 	at org.eclipse.help.internal.base.HelpDisplay.displayHelpURL; (HelpDisplay.java:169); 	at org.eclipse.help.internal.base.HelpDisplay.displayHelpResource; (HelpDisplay.java:88); 	at org.eclipse.help.ui.internal.DefaultHelpUI.displayHelpResource; (DefaultHelpUI.java:56); 	at org.eclipse.ui.help.WorkbenchHelp.displayHelpResource; (WorkbenchHelp.java:264); 	at org.eclipse.jdt.internal.ui.actions.OpenBrowserUtil$1.run; (OpenBrowserUtil.java:31); 	at org.eclipse.swt.custom.BusyIndicator.showWhile; (BusyIndicator.java:51); 	at org.eclipse.jdt.internal.ui.actions.OpenBrowserUtil.open; (OpenBrowserUtil.java:29); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard.spawnInBrowser; (JavadocWizard.java:502); 	at org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard.access$3; (JavadocWizard.java:497); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard$JavadocDebugEventListen; er.handleDebugEvents(JavadocWizard.java:525); 	at org.eclipse.debug.core.DebugPlugin$EventNotifier.run; (DebugPlugin.java:910); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:607); 	at org.eclipse.core.runtime.Platform.run(Platform.java:524); 	at org.eclipse.debug.core.DebugPlugin$EventNotifier.dispatch; (DebugPlugin.java:942); 	at org.eclipse.debug.core.DebugPlugin.fireDebugEventSet; (DebugPlugin.java:311); 	at org.eclipse.debug.core.model.RuntimeProcess.fireEvent; (RuntimeProcess.java:262); 	at org.eclipse.debug.core.model.RuntimeProcess.fireTerminateEvent; (RuntimeProcess.java:270); 	at org.eclipse.debug.core.model.RuntimeProcess.terminated; (RuntimeProcess.java:228); 	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorJob.run; (RuntimeProcess.java:356); 	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62); !ENTRY org.eclipse.debug.core 4 120 Apr 02; 2004 21:32:08.78; !MESSAGE An exception occurred while dispatching debug events.; !STACK 0; org.eclipse.swt.SWTException: Invalid thread access; 	at org.eclipse.swt.SWT.error(SWT.java:2625); 	at org.eclipse.swt.SWT.error(SWT.java:2555); 	at org.eclipse.swt.widgets.Widget.error(Widget.java:354); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:245); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:236); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:189); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:127); 	at org.eclipse.help.ui.internal.util.ErrorUtil.displayErrorDialog; (ErrorUtil.java:48); 	at org.eclipse.help.ui.internal.util.ErrorUtil.displayError; (ErrorUtil.java:23); 	at org.eclipse.help.internal.base.HelpDisplay.displayHelpURL; (HelpDisplay.java:169); 	at org.eclipse.help.internal.base.HelpDisplay.displayHelpResource; (HelpDisplay.java:88); 	at org.eclipse.help.ui.internal.DefaultHelpUI.displayHelpResource; (DefaultHelpUI.java:56); 	at org.eclipse.ui.help.WorkbenchHelp.displayHelpResource; (WorkbenchHelp.java:264); 	at org.eclipse.jdt.internal.ui.actions.OpenBrowserUtil$1.run; (OpenBrowserUtil.java:31); 	at org.eclipse.swt.custom.BusyIndicator.showWhile; (BusyIndicator.java:51); 	at org.eclipse.jdt.internal.ui.actions.OpenBrowserUtil.open; (OpenBrowserUtil.java:29); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard.spawnInBrowser; (JavadocWizard.java:502); 	at org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard.access$3; (JavadocWizard.java:497); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard$JavadocDebugEventListen; er.handleDebugEvents(JavadocWizard.java:525); 	at org.eclipse.debug.core.DebugPlugin$EventNotifier.run; (DebugPlugin.java:910); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:607); 	at org.eclipse.core.runtime.Platform.run(Platform.java:524); 	at org.eclipse.debug.core.DebugPlugin$EventNotifier.dispatch; (DebugPlugin.java:942); 	at org.eclipse.debug.core.DebugPlugin.fireDebugEventSet; (DebugPlugin.java:311); 	at org.eclipse.debug.core.model.RuntimeProcess.fireEvent; (RuntimeProcess.java:262); 	at org.eclipse.debug.core.model.RuntimeProcess.fireTerminateEvent; (RuntimeProcess.java:270); 	at org.eclipse.debug.core.model.RuntimeProcess.terminated; (RuntimeProcess.java:228); 	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorJob.run; (RuntimeProcess.java:356); 	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)",2
Build 2.0 IBM JRE 1.3.0 Win2k; ; I was doing some debugging; and after awhile I noticed a stack trace on the ; console (nothing in the log file).  I unfortunately dont have steps to ; reproduce it.  Hopefully the stack trace has enough info to go on.  Things I was ; doing that may have caused breakage:; ; - modifying code from within the debugger while program was running.  I would ; then kill the thread on failure to HCR; - had a conditional breakpoint in a fairly tight loop.  The loop had roughly ; 50;000 iterations; which is nowhere near the size reported in the exception.  ; The conditional breakpoint seemed to functioning fine.; ; Here is the stack trace:; ; java.lang.ArrayIndexOutOfBoundsException: 376653368;         at java.util.ArrayList.ensureCapacity(ArrayList.java(Compiled Code));         at java.util.ArrayList.add(ArrayList.java(Compiled Code));         at org.eclipse.jdt.internal.debug.core.model.JDIModificationVariable.<in; it>(JDIModificationVariable.java(Compiled Code));         at org.eclipse.jdt.internal.debug.core.model.JDIValue.getVariables0(JDIV; alue.java(Compiled Code));         at org.eclipse.jdt.internal.debug.core.model.JDIValue.getVariables0(JDIV; alue.java(Compiled Code));         at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.findVariable(; JDIStackFrame.java(Compiled Code));         at org.eclipse.jdt.internal.debug.core.model.JDIThread.findVariable(JDIT; hread.java:1401);         at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.findVariable; (JDIDebugTarget.java:1363);         at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo(JavaDeb; ugHover.java:91);         at org.eclipse.jdt.internal.ui.text.java.hover.JavaTextHover.getHoverInf; o(JavaTextHover.java:304);         at org.eclipse.jface.text.TextViewerHoverManager$2.run(TextViewerHoverMa; nager.java:98),2
"Suddenly in the middle of typing something the cursor stops and all the ; characters cosequently typed appear while pushing others to the right of the ; cursor.  To get correct output one must type words backwards.; ; I have this problem every 2-3 hours of work.  It happens on 3M8; 3.0; 3.0.1 ; and 3.1 -- Ive tried all of these.  It does not depend on the project or on ; the plugins -- For instiance it just happened with a clean 3.0.1 with no ; custom plugins at all.; ; The only way out is to close eclipse and restart. The following is the last ; error in the log.  Would be happy to make the entire log available.; ; !ENTRY org.eclipse.ui 4 0 Nov 11; 2004 16:43:37.362; !MESSAGE java.lang.NullPointerException; !STACK 0; java.lang.NullPointerException; 	at ; org.eclipse.jface.text.source.projection.ProjectionViewer.handleVisibleDocument; Changed(ProjectionViewer.java(Compiled Code)); 	at ; org.eclipse.jface.text.TextViewer$VisibleDocumentListener.documentChanged; (TextViewer.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged; (AbstractDocument.java(Inlined Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged; (AbstractDocument.java(Compiled Code)); 	at ; org.eclipse.jface.text.projection.ProjectionDocument.fireDocumentChanged; (ProjectionDocument.java:768); 	at org.eclipse.jface.text.AbstractDocument.replace; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.projection.ProjectionDocument.replace; (ProjectionDocument.java:551); 	at org.eclipse.jface.text.DefaultDocumentAdapter.replaceTextRange; (DefaultDocumentAdapter.java:238); 	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.doBackspace(StyledText.java:2488); 	at org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java:5482); 	at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java; (Inlined Compiled Code)); 	at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java(Compiled Code)); 	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled ; Code)); 	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method); 	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench; (Workbench.java:254); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141); 	at org.eclipse.ui.internal.ide.IDEApplication.run; (IDEApplication.java:96); 	at org.eclipse.core.internal.runtime.PlatformActivator$1.run; (PlatformActivator.java:335); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run; (EclipseStarter.java:273); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run; (EclipseStarter.java:129); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke; (NativeMethodAccessorImpl.java:79); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke; (DelegatingMethodAccessorImpl.java:41); 	at java.lang.reflect.Method.invoke(Method.java:386); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:185); 	at org.eclipse.core.launcher.Main.run(Main.java:704); 	at org.eclipse.core.launcher.Main.main(Main.java:688); ; !ENTRY org.eclipse.ui 4 4 Nov 11; 2004 16:43:37.622; !MESSAGE Unhandled event loop exception; ; !ENTRY org.eclipse.ui 4 0 Nov 11; 2004 16:43:37.632; !MESSAGE java.lang.NullPointerException; !STACK 0; java.lang.NullPointerException; 	at ; org.eclipse.jface.text.source.projection.ProjectionViewer.handleVisibleDocument; Changed(ProjectionViewer.java(Compiled Code)); 	at ; org.eclipse.jface.text.TextViewer$VisibleDocumentListener.documentChanged; (TextViewer.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged; (AbstractDocument.java(Inlined Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged; (AbstractDocument.java(Compiled Code)); 	at ; org.eclipse.jface.text.projection.ProjectionDocument.fireDocumentChanged; (ProjectionDocument.java:768); 	at org.eclipse.jface.text.AbstractDocument.replace; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.projection.ProjectionDocument.replace; (ProjectionDocument.java:551); 	at org.eclipse.jface.text.DefaultDocumentAdapter.replaceTextRange; (DefaultDocumentAdapter.java:238); 	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.doBackspace(StyledText.java:2488); 	at org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java:5482); 	at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java; (Inlined Compiled Code)); 	at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java(Compiled Code)); 	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled ; Code)); 	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method); 	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench; (Workbench.java:254); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141); 	at org.eclipse.ui.internal.ide.IDEApplication.run; (IDEApplication.java:96); 	at org.eclipse.core.internal.runtime.PlatformActivator$1.run; (PlatformActivator.java:335); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run; (EclipseStarter.java:273); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run; (EclipseStarter.java:129); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke; (NativeMethodAccessorImpl.java:79); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke; (DelegatingMethodAccessorImpl.java:41); 	at java.lang.reflect.Method.invoke(Method.java:386); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:185); 	at org.eclipse.core.launcher.Main.run(Main.java:704); 	at org.eclipse.core.launcher.Main.main(Main.java:688)",2
"20021016; Enable eating code assist.; Given this code; 	public void setNewName(String newName) {; 		Assert.isNotNull(newName);; 	}; Do code assist after Assert.; 1. No eating range marked. I think isNotNull should be marked; 2. While the dialog is still up; press twice cursor right and once cursor ; left. The eating range consist of one letter. very strange",2
3.2 M3 test pass; ; - use the Clean up action and make sure the add missing $NON-NLS$ checkbox is; checked; - have a CU open with an NLS warning; - choose Source>Clean up; - check the selection on the first wizard pane: it is correct: only the active; CU is checked; - press Return or click Finish to execute the clean up; ; > expected: the NLS tag is added; < actual: no changes occur; ; Note: the same works if I manually go to the configuration page first and then; click Finish,2
"20020214; jdk 1.3.1; ; When I use the Java browsing view to try to create getters/setters from the ; context menu on a class field; there is not entry.  I have to switch back to ; the regular Java view; ; I tried to use Self-encapsulate field; but received an internal error (listed ; below). This may have been because one of the classes I had open had a syntax ; error (no closing bracket).; ; ; ; Log: Wed Feb 20 19:19:09 PST 2002; 1 org.eclipse.help 0 Help System started.; Log: Wed Feb 20 20:42:47 PST 2002; 4 org.eclipse.jdt.ui 1 Internal Error; java.lang.reflect.InvocationTargetException: java.lang.ClassCastException: ; org.eclipse.jdt.internal.compiler.lookup.ProblemBinding; 	at ; org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveNameForMessageSend; (DefaultBindingResolver.java:121); 	at org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveName; (DefaultBindingResolver.java:100); 	at org.eclipse.jdt.core.dom.Name.resolveBinding(Name.java:75); 	at ; org.eclipse.jdt.internal.corext.refactoring.sef.AccessAnalyzer.visit; (AccessAnalyzer.java:74); 	at org.eclipse.jdt.core.dom.SimpleName.accept0(SimpleName.java:85); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.MethodInvocation.accept0; (MethodInvocation.java:91); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0; (ExpressionStatement.java:76); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:76); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:98); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:99); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:76); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0; (MethodDeclaration.java:183); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0; (ClassInstanceCreation.java:118); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0; (VariableDeclarationFragment.java:96); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.FieldDeclaration.accept0; (FieldDeclaration.java:119); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.TypeDeclaration.accept0; (TypeDeclaration.java:163); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.CompilationUnit.accept0; (CompilationUnit.java:143); 	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:981); 	at ; org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring.; checkInput(SelfEncapsulateFieldRefactoring.java:206); 	at ; org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run; (CheckConditionsOperation.java:58); 	at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run; (CreateChangeOperation.java:93); 	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run; (ModalContext.java:98)",2
The dialog needs an accelerator for the text field.,2
A custom perspective which contains a Debug view; and it has the buttons for ; Resume; Step Into etc.  However; the function keys do not work in that ; perspective.  I.e.  F8 for Resume; F5 for Step into; F6 for Step Over and F7 ; for Run to return.,2
"DS (6/1/01 3:35:32 PM); 	On 116; ; 	Test Case; 		Have a program running and paused at a breakpoint; 		Go to the display view; 		With nothing selected; hit the Inpsect or Display actions; ; An evaluation occurs on the empty String.; ; NOTES:; 	GDA (6/5/01 11:40:48 AM); 		Defer; ; DS (10/10/2001 4:29:14 PM); 	This is still the current behaviour...but have proposal/prototype to select the entire current line; 	of an empty selection.; 	@see 1GJ6GR9: ITPDUI:ALL - Display window enhancement",2
"Build 2.0; ; In the following example put the cursor before m and expand to enclosing ; element. Observe: the whole method is selected. Now change method name m to mm ; and do the same again. Observe: simple name mm is selected. There should not be ; a difference in this case.; ; package p;; class A{; 	void m(int t){; 	}; }",3
Have a line that has an indent greater than it is required.; Place cursor at the correct indent position.; Press Tab.; => Cursor ends up at the beginning of the document.,3
I20040924; ; Code in JDT Core often use Util.splitOn(...) to be able to compare a qualified ; name to a compound name.; ; We should introduce a helper that allows to compare a qualified name with a ; compound name without creating new objects.,3
While iterating over the installed versions of Java in the detectInstallLocation method in ; MacOSXVMInstallType; the following ; condition evaluates to false if the findVMInstall returns a valid VMInstall for the given version:; if (home.exists() && findVMInstall(version) == null && !CURRENT_JVM.equals(version)) {; ; The only place the defaultLocation returned by detectInstallLocation is set is within this if block; so if ; the default install location is able to be found; the method will return null.,3
"I tried to do a Rename Variable refactoring on a public field; when this error occurs everytime.; ; -- Error Log --; Date: Fri Apr 06 08:49:57 CEST 2007; Message: Internal Error; Severity: Error; Plugin ID: org.eclipse.ltk.ui.refactoring; Stack Trace:; java.lang.reflect.InvocationTargetException; 	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:350); 	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:304); 	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:571); 	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:414); 	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.computeSuccessorPage(UserInputWizardPage.java:75); 	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.getNextPage(UserInputWizardPage.java:115); 	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.nextOrPreviewPressed(RefactoringWizardDialog2.java:475); 	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.access$0(RefactoringWizardDialog2.java:472); 	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2$1.widgetSelected(RefactoringWizardDialog2.java:660); 	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1496); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1505); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1279); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3312); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2941); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:820); 	at org.eclipse.jface.window.Window.open(Window.java:796); 	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run(RefactoringWizardOpenOperation.java:132); 	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67); 	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:145); 	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:40); 	at org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.activate(UserInterfaceStarter.java:56); 	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameUserInterfaceStarter.activate(RenameUserInterfaceStarter.java:155); 	at org.eclipse.jdt.ui.refactoring.RenameSupport.openDialog(RenameSupport.java:114); 	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startRenameRefactoring(RefactoringExecutionStarter.java:382); 	at org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:172); 	at org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:131); 	at org.eclipse.jdt.ui.actions.RenameAction.run(RenameAction.java:117); 	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:271); 	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:243); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499); 	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185); 	at org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109); 	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:461); 	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:424); 	at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:160); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:466); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:799); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:846); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:564); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:506); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:122); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66); 	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1109); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1495); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1505); 	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1557); 	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1552); 	at org.eclipse.swt.widgets.Control.kEventUnicodeKeyPressed(Control.java:1820); 	at org.eclipse.swt.widgets.Composite.kEventUnicodeKeyPressed(Composite.java:583); 	at org.eclipse.swt.widgets.Control.kEventTextInputUnicodeForKeyEvent(Control.java:1812); 	at org.eclipse.swt.widgets.Widget.textInputProc(Widget.java:2000); 	at org.eclipse.swt.widgets.Display.textInputProc(Display.java:3838); 	at org.eclipse.swt.internal.carbon.OS.SendEventToEventTarget(Native Method); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2910); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1930); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1894); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:422); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149); 	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95); 	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78); 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92); 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25); 	at java.lang.reflect.Method.invoke(Method.java:585); 	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:336); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:280); 	at org.eclipse.core.launcher.Main.run(Main.java:977); 	at org.eclipse.core.launcher.Main.main(Main.java:952); Caused by: java.lang.NullPointerException; 	at org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchReportReference(FieldLocator.java:221); 	at org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchReportReference(PatternLocator.java:398); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2034); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2440); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2187); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(MatchLocator.java:1548); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1033); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1074); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1180); 	at org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94); 	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:212); 	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:490); 	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:538); 	at org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.internalSearch(RefactoringSearchEngine.java:145); 	at org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.search(RefactoringSearchEngine.java:131); 	at org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.getNewReferences(RenameFieldProcessor.java:837); 	at org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.analyzeRenameChanges(RenameFieldProcessor.java:799); 	at org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.createChanges(RenameFieldProcessor.java:626); 	at org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.doCheckFinalConditions(RenameFieldProcessor.java:441); 	at org.eclipse.jdt.internal.corext.refactoring.rename.JavaRenameProcessor.checkFinalConditions(JavaRenameProcessor.java:46); 	at org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions(ProcessorBasedRefactoring.java:175); 	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:83); 	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:118); 	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1737); 	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87); 	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)",3
Build 20011204; ; If an IResourceDelta is received by the DeltaProcessor before the java model is ; open; it fails with a NullPointerException.,3
While looking for a fix for bug 289683; I discovered that JavaDebugUtils.resolveType(IJavaType) was not working properly for some nested types. The AST visitor was visiting TypeDeclarationStatements; rather than all TypeDeclarations; so it was potentially missing some types.,3
Build I20050527-1300 (RC1); ; Shortly after pasting a block of code which modifies the imports; the editor; scrolls up to the import section. Note: This only seems to happen if the imports; are folded.,3
I20070206-0010.; ; The New Class Path Variable dialog should not show entries that cant be added.,3
See bug 198437.  ; ; There a lot of instances where we create new  empty strings.  Some classes create their own constants for this.  It would be beneficial if the JDT plugins had a global constant.,3
M7; ; Similar to the key bindings preference transfer; it would be good to have a; transfer of all repository connections if this is possible.; ; we in JDT will remove our All JDT transfer and instead choose some selected;; useful settings.; ; Suggestion List; - keys; - repositories; - ant runtime settings; - Java code and comment templates; - installed JREs,3
If I want to copy a file from one source folder to another and that file ; happens to be read-only then I get a pop-up complaining that the file is read-; only and the file doesnt get copied accross!,3
Build ID:  I20080617-2000; ; Steps To Reproduce:; 1. Install the leJOS plug-in (Go to Help -> Software Updates -> Available Software -> Add Site -> http://lejos.sourceforge.net/tools/eclipse/plugin/nxj/); 2. Go to: http://lejos.sourceforge.net/nxj-downloads.php and download and install the software (preferably somewhere handy like C:\ or My Documents).; 3. Create a new project (like mcl).; 4. Right click on the project; go to: leJOS NXJ -> Convert to leJOS NXJ Project.; 5. Go to: Project -> Properties -> Java Build Path; 6. Click on: Add an External JAR.; 7. Navigate to the folder where you installed the leJOS software (step 2) and add \leJOS Projects\pccomms\lib\pccomm.jar; 8. Click on Add a Library -> JRE System Library -> Workspace Default.; 9. Click OK and return to the project.; 10. Create a new package in the src folder (like  computer ).; 11. Go to: http://www.cs.uwaterloo.ca/~adcaine/MCL/ ; 12. Download all of the .java files (except Robot.java).; 13. Drag and drop the files into the src folder; but NOT into the new package (files should go into the default package).; 14.14. Select all the files in the default package and drag and drop them into the new package.; 15. At this point at least one of the files will most likely be sporting the first error.  It will complain that: The type Class is not generic; it cannot be parameterized with arguments <T>; 16. To see the second error (or if the first is not yet showing); open any file; create and then delete a space; and save the file.  It will now exhibit the first error and or complain that it has no idea what object X is; object X being a class who exhibits the first error.; ; More information:; I am not sure if the error is being caused by Eclipse or by the leJOS plug-in (I have contacted them; but they are mystified).  All I do know is that Eclipse complains that class X is not generic; a thing which I have never heard of before; especially as I am not trying to use any generics.,3
A library classpath entry also contains a location of its JavaDoc.; ; Features based on this:; - show the JavaDoc of a Java Element in a web browser.;   (jdt.ui); - use the JavaDoc as secondary source; if no source attchment is available.;   (jdt.core; SourceBuffer); - Use the JavaDoc location as links for the creation of JavaDoc from sources.; ; - JavaDoc generation: Use the location attached to the sourcefolder as ; destination. ; ; Issues:; Location as IPath / URL?; The idea to represent it as URL is very tempting; but is not very consistent ; with the rest of eclipse.; Clathpath variables are defines a IPath; so JRE witching would not be possible ; if URL would be taken.; ; What about putting an URL in a Path? Probably fails due to port numbers in URLs.; ; -> IPath is not optimal; but theres no alternative.,3
Imagine a Floder class; with instance field name.; The constructor will report unused namee but also reports that the assignement; as no effect. ; ; Folder(String namee); { this.name = name; }; ; We nee all these extremely usefull warnings to be in the compiler options.; I would easily put this one as an ERROR; to be sure it shows up in my filtered; task list.,3
I20050308; ; To be consistent with the runtime behavior where you can have strict and loose; access control to classes in required plugin; PDE needs to control the severity; of access rules. Some access rules would always be flagged as errors; some would; be flagged as warnings.,3
I20060816-1200; ; IClassFile#getType() is a handle-only query and should therefore not throw a JavaModelException. The implementation in ClassFile already doesnt throw the JME.,3
Eclipse currently lacks the capacity to change the next line to execute while debugging.  It seems this is possible for Java because JBuilder claims to do it.  Its present in other products; for example MSVC++; where its very useful.,3
build I20050509-2010; ; In a typical self-hosting workspace with OSGi; Runtime; Resources; SWT; JFace;; Workbench; IDE and random other odds and ends in source;; choose Window > About > Configuration Details.; ; It takes a while to open (see bug 94489).  Press Copy to Clipboard; paste the; contents to Notepad; and save as a file.  The resulting file is >2M.; ; Many of the entries are prefs having to do with the PDE classpath container and; access rules.  This seems very verbose; with much duplication.; ; Is it necessary to use prefs here?  Would workspace properties be more; appropriate?  If prefs must be used; is there some way they could be made more; compact?,3
20030107; once in 2 hours or so i get a message ; file has changed on the file system. you you want to overwrite?; ; regardless of what i select the whole ide freezes forever ; (or for so long that i never waited more than 5 minutes); ; i need to kill it; then after restart; full build is requuired; but it never completes - ide; freezes again (on updating... after build); ; i must kill eclipse again; 3rd time round another full build is required; which completes; ; after more than 20 minutes of wasted time and a lot of frustration; you can work again; ; this happens 2-4 times a day and is greatly frustrating; ; (didnt know where to enter this report),3
"Build ID: M20080221-1800; ; Steps To Reproduce:; I dont have a simple repro yet but this is a real world problem weve come across using the Beehive annotations in eclipse with version 3.3.2 of JDT (3.3.2.r33x_r20080129-7o7jE7_EDhYDiyVEnjb1pFd7ZGD7); ; I have a Apache Beehive project with a NetUI page flow that declares an array type action output for an action...; ; @Jpf.Action(forwards = {;     @Jpf.Forward(;         name = success; ;         path = results.jsp; ;         actionOutputs = {;             @Jpf.ActionOutput(;                 name = mybeanmethodResult;;                 type = mypkg.Mybean[].class;             );         };     ); }); public Forward mybeanmethod(MyFormBean form) {; ...; }; ; The type attribute on the @Jpf.ActionOutput annotation that is an Array; cause the ClassCastException.; ; type = mypkg.Mybean[].class; ; More information:; This appears to be a regression in JDT compiler code. I think it may have been introduced by the fixes for Bugzilla bug 187430.; ; I noticed the code change introduced in BinaryTypeBinding in revision 1.108 (and 1.105.2.2 for 3.3).; ; From the file revision history; it looks like the fix was back ported into 3.3.2. It adds the cast that seems to be the issue in this particular scenario. Specifically; we have a type attribute on an annotation that is an Array.; ; type = mypkg.Mybean[].class; ; The LookupEnvironment.getTypeFromSignature() method checks for the [ char to calculate a possible array (and dimension) if it exists and if found returns an ArrayBinding which cannot be cast to ReferenceBinding.; ; Heres the Exception and stack we see...; ; Internal compiler error; java.lang.ClassCastException: ; org.eclipse.jdt.internal.compiler.lookup.ArrayBinding; 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.convertMemberValue(BinaryTypeBinding.java:58); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createAnnotation(BinaryTypeBinding.java:86); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.convertMemberValue(BinaryTypeBinding.java:61); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.convertMemberValue(BinaryTypeBinding.java:74); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createAnnotation(BinaryTypeBinding.java:86); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.convertMemberValue(BinaryTypeBinding.java:61); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.convertMemberValue(BinaryTypeBinding.java:74); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createAnnotation(BinaryTypeBinding.java:86); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createAnnotations(BinaryTypeBinding.java:96); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createMethod(BinaryTypeBinding.java:508); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createMethods(BinaryTypeBinding.java:559); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.cachePartsFrom(BinaryTypeBinding.java:328); 	at ; org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:609); 	at ; org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:588); 	at org.eclipse.jdt.internal.compiler.Compiler.accept(Compiler.java:276); 	at ; org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:128); 	at ; org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(PackageBinding.java:178); 	at ; org.eclipse.jdt.internal.compiler.lookup.Scope.getPackage(Scope.java:2104); 	at ; org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.getTypeBinding(QualifiedTypeReference.java:69); 	at ; org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(TypeReference.java:134); 	at ; org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.resolveTypesFor(SourceTypeBinding.java:1358); 	at ; org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.methods(SourceTypeBinding.java:1099); 	at ; org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.faultInTypesForFieldsAndMethods(SourceTypeBinding.java:583); 	at ; org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes(CompilationUnitScope.java:431); 	at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:616); 	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:392); 	at ; org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:362); 	at ; org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.compile(IncrementalImageBuilder.java:302); 	at ; org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:299); 	at ; org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:130); 	at ; org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:280); 	at ; org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:192)",3
Code related; org.eclipse.jdt.internal.core.builder.State 1.53 and related classes.; Following discussions about bug 76266 and bug 122763; we (Philippe and I) believe that storing access restrictions templates into the project build state is not needed; hence should be avoided. ; This would call for their removal for the sake of optimization.; Moreover; Philippe pointed out that storing them is due to trigger a full build when the user changes his locale; which is not intended.; Note: need to check that the build state comparison is aligned as well.,3
"I20081119-1600; ; java-test:;      [echo] Running org.eclipse.pde.api.tools.tests.ApiToolsPluginTestSuite. Result file: C:\buildtest\I20081119-1600\eclipse-testing/results/win32.win32.x86_6.0/org.eclipse.pde.api.tools.tests.ApiToolsPluginTestSuite.xml.;      [java] org.eclipse.core.runtime.CoreException: Problems encountered while deleting files.;      [java] 	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:124);      [java] 	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFile(ResourceTree.java:303);      [java] 	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFile(ResourceTree.java:780);      [java] 	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1751);      [java] 	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:711);      [java] 	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:682);      [java] 	at org.eclipse.pde.api.tools.builder.tests.ApiTestingEnvironment.deleteWorkspaceFile(ApiTestingEnvironment.java:432);      [java] 	at org.eclipse.pde.api.tools.builder.tests.ApiTestingEnvironment.revertWorkspace(ApiTestingEnvironment.java:401);      [java] 	at org.eclipse.pde.api.tools.builder.tests.ApiTestingEnvironment.resetWorkspace(ApiTestingEnvironment.java:370);      [java] 	at org.eclipse.jdt.core.tests.builder.BuilderTests.tearDown(BuilderTests.java:470);      [java] 	at org.eclipse.pde.api.tools.builder.tests.ApiBuilderTest.tearDown(ApiBuilderTest.java:983);      [java] 	at org.eclipse.pde.api.tools.builder.tests.tags.TagTest.tearDown(TagTest.java:81);      [java] 	at junit.framework.TestCase.runBare(TestCase.java:136);      [java] 	at junit.framework.TestResult$1.protect(TestResult.java:106);      [java] 	at junit.framework.TestResult.runProtected(TestResult.java:124);      [java] 	at junit.framework.TestResult.run(TestResult.java:109);      [java] 	at junit.framework.TestCase.run(TestCase.java:120);      [java] 	at junit.framework.TestSuite.runTest(TestSuite.java:230);      [java] 	at junit.framework.TestSuite.run(TestSuite.java:225);      [java] 	at junit.framework.TestSuite.runTest(TestSuite.java:230);      [java] 	at junit.framework.TestSuite.run(TestSuite.java:225);      [java] 	at junit.framework.TestSuite.runTest(TestSuite.java:230);      [java] 	at junit.framework.TestSuite.run(TestSuite.java:225);      [java] 	at junit.framework.TestSuite.runTest(TestSuite.java:230);      [java] 	at junit.framework.TestSuite.run(TestSuite.java:225);      [java] 	at junit.framework.TestSuite.runTest(TestSuite.java:230);      [java] 	at junit.framework.TestSuite.run(TestSuite.java:225);      [java] 	at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:354);      [java] 	at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:206);      [java] 	at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:35);      [java] 	at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:31);      [java] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);      [java] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);      [java] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);      [java] 	at java.lang.reflect.Method.invoke(Method.java:597);      [java] 	at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethodWithException(EclipseAppContainer.java:574);      [java] 	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:195);      [java] 	at org.eclipse.equinox.internal.app.MainApplicationLauncher.run(MainApplicationLauncher.java:32);      [java] 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110);      [java] 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79);      [java] 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:370);      [java] 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179);      [java] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);      [java] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);      [java] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);      [java] 	at java.lang.reflect.Method.invoke(Method.java:597);      [java] 	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:549);      [java] 	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:504);      [java] 	at org.eclipse.equinox.launcher.Main.run(Main.java:1236);      [java] 	at org.eclipse.equinox.launcher.Main.main(Main.java:1212);      [java] 	at org.eclipse.core.launcher.Main.main(Main.java:30);      [java] Contains: Could not delete: C:\buildtest\I20081119-1600\eclipse-testing\test-eclipse\eclipse\api_tools_plugins_folder\data\tagtest\src\a\b\c\test11.java.",3
Refer to bug 401040.; ; CBI produced ECJ contains META-INF/maven; which isnt necessary. The folder needs to be removed.,3
20050920; ; - rename a type and select to renam also strings; - open preview; ; see screenshot: Once its Update then its update,3
Its something like Floding. Floding enables me to collapes or expand a method; but what i really miss is a seperator between methods. ; Seperator like ; //--------------------------------//; or ; //=================//; etc...; ; I usually add some texts to the java code. but its really not the correct place; because; 1. has nor sence for java compiler.; 2. other develops work on the same project wants another seperator or none at all; 3. it increases the class in size and line number; 4. changes on seperator like:; from ; //--------------------------------//; to ; //------------------------------------------------------//; will be saved and mentioned in the Version Control.; ; However; this feature is almost done in IntelliJ IDEA but even there not enough; 1. user cant decied what is the seperator.; 2. it seperats everything semilar i mean inner Classes have the same seperator like methods.,3
Open a java file in the editor; hover on a object type; for example; ByteArrayOutputStream; there are strings in English in the hover text;; especailly the string Press F2 for focus.; ; See attached screenshot for details.,3
"class A {; 	Object m(){; 		return /*]*/A.class/*[*/;; 	}; }; ; The position (start/end) of A.class is [41;45] but it should be [39;45]",3
The print margin is specified at column 80 but is placed at the 104th columnin; all java source code.  This is under GTK and I am using courier-regular-10 font; as the Text Font.,3
Found in console window...; java.lang.NullPointerException;         at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo; (JavaDebugHover.java:112);         at ; org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo; (BestMatchHover.java:102);         at ; org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverIn; fo(JavaEditorTextHoverProxy.java:69);         at org.eclipse.jface.text.TextViewerHoverManager$4.run; (TextViewerHoverManager.java:160),3
The code formatter continues to be an excellent feature of Eclipse; but there ; is one aspect that offends my sensibilities...; ; Binary expressions wrap and place the operator at the start of the next line. ; Id much prefer the operators at the end of the previous line; for example:; ; Eclipse 3.2 formatter now gives me this (3.1 did; too):;       int sum = 100 + 200 + 300;                 + 400 + 500 + 600;                 + 700 + 800;; ; But I would prefer:;       int sum = 100 + 200 + 300 +;                 400 + 500 + 600 +;                 700 + 800;; ; This is when set to wrap when necessary and column indent. I might choose ; different options; but the key idea is that the operator should (IMHO) be at ; the end of the line; not the start,3
In interest of green builds:; ; * review transient test failures over the last few weeks; * those tests should no longer cause red Xs; * tests at risk shold log errors (i.e. to the log); but not cause a failure,3
"JDT UI from CVS HEAD as of today (06/10/2008).; ; Just stumbled across EditorBreadcrumb#createContent; ; public Control createContent(Composite parent) {; 	if (fComposite != null); 		new IllegalArgumentException(Content must only be created once.); //$NON-NLS-1$; 		; There is a throw missing in order to achieve the goal.",3
For an array variable (eg String[]); you can appear to create a Detail ; Formatter.; You go through all the motions but the formatter is not actually created.,3
"I believe Im getting a false positive resource leak warning when resources are closed using apache dbutils closeQuietly methods.; Simplified Code:; public static void test(Connection con){ ; 	PreparedStatement ps = null;; 	try {; 		ps = con.prepareStatement(foo);; 		// Remove this loop for no warning ; 		for (int i = 0; i < 1; i++) {; 			try {; 				ps.executeUpdate();; 			} catch (SQLException e) {; 				throw new SQLException(Some message; e); // << warning; 			}; 			// << move the closing finally to here for no warning; 		}; 	} catch (SQLException e) {; 		throw new RuntimeException(e);; 	} finally {; 		DbUtils.closeQuietly(ps);  // << change this to ps.close for no warning; 	}; }; ; ; ; The warning is removed if:;  1; I add the finally block after the inner try-catch;  2; I change closeQuietly to ps.close() (with the required try-catch wrapper);  3; I remove the for-loop",3
The description of a problem.; 1. I define a  several newContainerEntry with identical segment [0]; for example ;  ;     ..;     ipath1.. = MyLib/org.apache.axis;;     ipath2.. = MyLib/org.apache.log4j;;     ..;    JavaCore.newContainerEntry (iPath1..);;    JavaCore.newContainerEntry (iPath2..);;    ..; 2. In dialogue 1 (1.jpg) I normally see both ipath1; ipath2; 2. In dialogue 2 (2.jpg) I see only the first ipath1,3
3.0.1 Eclipse had an feature that when right-clicking JRE_LIB in Package; explorer view; you could change JRE that you are using for this project. Now;; when clicking it; I just get a normal file menu instead of configure jre menu;; where I normally could change the jre.,3
Need artwork for JUnit Test Results file type icon,3
While using javaw.exe as the default vm; multiple execution arguments could not be used (i.e.; one after the other with a space between multiple arguments;as in while using the command prompt). The launch configuration tool was used to specify the arguments(Arguments tab--> Program Arguments). More specifically; when I used a single argument; for example; localhost; it worked. But when I used two; such as localhost and 5001; (one after the other wih a space between two or putting a comma between them) none of the arguments was processed. When changed to java.exe; everything worked fine; i.e.; I was able to use multiple arguments in the Program Arguments textarea normally as while using command prompt. I am using jdk1.5.0_05. I specified the location of this jdk in the java installed jres preferences option.; ; Also; I am not sure if this one is a bug or not; but when I specified java.exe to be used as the default vm for eclipse using windows shortcut by writing this in the target box C:\eclipse\eclipse.exe -vm C:\jdk1.5.0_05\bin\java.exe; eclipse itself used java.exe to run; but it used javaw.exe to run my programs. The problem stated in the above para was still occurring. I finally had to hide javaw.exe from eclipse by putting it in a folder foo. Only then did it use java.exe to run my programs as well; and also the problem stated in the above para disappeared.,3
I often code methods where the return value is an expression; typically as the; result of invoking other methods.; ; On occasions; I would like to see what the return value for a method is.  That; is; I want to step over the return statement and see what the return value is; before exitting the method itself.  I guess this implies treating the return; statement as two pieces: push a result onto the stack; then the actual return.; ; I could inspect the expression; but that can often cause unwanted side effects.; ; I picture this as a pseudo-variable that appears int he variables view; perhaps; Return Value (in italics) that I can select and inspect.  Alternately; the; pseudo-variable could always be present (for non-void methods); but its value; would be assigned after executing the return statement.; ; The workaround is to assign the expression value to a temporary variable and; return that.  I find that aesthetically unpleasing (and it requires a code; change that is not always possible).; ; I realize that in theory; I could just step up to the next level and inspect the; variable that is assigned.  In my particular case (today); I have a chain of; method calls; and the final result is passed out of my EJB facade level. The; value is never assigned to a variable; and the value is changed by the; application server before being returned to my applications presentation layer.; This makes it very hard for me to determine what (and why) certain changes take; place; since I can only see the value as it appears in the presentation layer.,3
Id like to suggest improving the Link Source dialog so that updating exclusion filters is understood easier. ; Instead of two long messages; Id prefer a descriptive label and two shorter radio button messages.; ; Sample: ; Updating exclusion filters in other source folders solves nesting conflicts.; O Update exclusion filters; O Ignore nesting conflicts,3
R3.3 and I20070731-0800.; ; Deleting a member should leave non-dirty editor non-dirty.; ; Test Case:; 1. open a CU; 2. delete a method; ==> editor is dirty; ; Since move and reorder doesnt make the file dirty; delete should behave the same.,3
When creating a new class and attempting to add a generic interface to it; it is; not obvious how to specify what the generic options for that interface are.  You; can manually type in after selecting the interface which generic types youd; want; but it shows it as an error.; ; For instance; if I wanted to do something like:; class Foo implements Bar<ClassX> { }; ; I could go to add class; then add interface in that wizard and select Bar;; however the interface addition wizard does not understand Bar<ClassX> and; reports it as an error.  So I just select Bar.; ; I then manually type into the list of interfaces the additional <ClassX> to the; end of the name.  This does not generate the correct code when I hit finish;; including that it does not automatically import ClassX.; ; So a couple things are problems:; -Interface wizard should understand generics and not flag Bar<X> as an error; -Class creation wizard should understand generic interfaces and it should be; obvious how to specify what the generics are (whether they be a specific class; [class X implements Y<Z>]or a generic of the class being created [class X<T>; implements Y<T>]),3
There is no keyboard shortcut to easily navigate amongst the occurrences marked by the Mark Occurences command (alt-shift-O).; ; It would be nice if this could be connected to either the Next/Previous (Ctrl+.; Ctrl+;) commands; or the Find Next/Previous (Ctrl+k; Ctrl+shift+k).; ; Or a completly new next/previous occurence command.,3
If I have the following code; doSomething() happens everytime; and it takes me a; while to figure why the heck expr is true when it should be false =); ; if (expr);; {;     doSomething();; },3
/*;        A B D G; alpha  x; beta     x; delta      x; gamma        x; */; ; When I format the code; the first line of the comment; which contains the column; headers; is suddenly left justified to start on the same column as the rest of; the comment.; ; I had specifically told the code formatter not to format comments at all.,3
Report from newsgroup from Francesc Ros s:; ; Im using GM4 in a W2K. When in a javadoc comment I type @see and I ; attempt to access to code assist; nothing occurs. In previous releases; ; the code assists suggest a class names list and I can select one ; (i.e. the result was @see MyClass). If then I type # and ctrl-space; ; code assist suggest a method names list and I can select one ; (i.e. the result is @see MyClass#MyMethod). ; ;   I think this feature is indispensable. Simplify the use of javadoc ; crossreference feature. If there is not this feature the users will ; not use the @see and the quality of documentation will decrease.,3
"Here is my sample class:; ; /*;  * Copyright (C) 1993-2003 SEAGULL;  * ;  * HostBackEndBindingBridge.java;  * Created on Jul 22; 2003; 4:39:13 PM;  * ;  */;  ; package com.seagullsw.appinterface.server.backend.host;; ; import com.seagullsw.appinterface.server.backend.BackEndBindingBridge;; import com.seagullsw.appinterface.server.backend.BackEndException;; import com.seagullsw.appinterface.server.backend.InternalBackEnd;; import com.seagullsw.appinterface.server.backend.host.bind.AbstractHostConnector;; import com.seagullsw.appinterface.server.bind.connector.Connector;; ; /**;  * Creates Host back-end instances based on the contents of JAXB objects.;  * ;  * @author <a href=mailto:ggregory@seagullsw.com>Gary Gregory</a>;  * @version $Id$;  */; public class HostBackEndBindingBridge implements BackEndBindingBridge {; ; 	/* (non-Javadoc); 	 * @see; com.seagullsw.appinterface.server.backend.BackEndBindingBridge#toBackEnd(com.seagullsw.appinterface.server.bind.connector.Connector); 	 */; 	public InternalBackEnd toBackEnd(Connector connector) throws BackEndException {;         if (!(connector instanceof AbstractHostConnector)) {;             throw new IllegalStateException(connector +  is not an instance of;  + AbstractHostConnector.class);;         };         return this.toBackEnd((AbstractHostConnector) connector);; 	}; }; ; Where AbstractHostConnector is a sub-interface of Connector.; ; I get a warning here:; return this.toBackEnd((AbstractHostConnector) connector);; ; The warning:; 	Unnecessary cast to type AbstractHostConnector for expression of type; Connector. It is already compatible with the argument type Connector; HostBackEndBindingBridge.java; Transidiom-DevE/Java/Source/com/seagullsw/appinterface/server/backend/host; line 32	July 23; 2003 4:10:34 PM; ; This is a fine warning BUT what I want is a Quick Fix the create the method:; ; public InternalBackEnd toBackEnd(AbstractHostConnector connector); ; I only have the quick fix to /remove/ the type-cast.; ; In the past (before 3.0.m2+); when I did not have the Unnecessary cast; compiler warning turned on; I could choose to create methods like this.; ; Eclipse Platform; Version: 3.0.0; Build id: 200307230800",3
N20051009-0010 + jdt.core v_616; ; See bug 89529 for the new raw type warning; which is also suppressed by; @SuppressWarnings(unchecked).; ; ; import java.util.ArrayList;; import java.util.Collection;; ; public class A {;     void foo(Collection c) {;         new ArrayList(c); // quick fix;                           // Add @SuppressWarnings unchecked to foo();                           // appears twice; expected: only once;     }; },3
Created attachment 199503; screenshot; ; -------------------------------------------; List<String> list=null;; list= new ArrayList(); //QF on ArrayList; -------------------------------------------; ; The quick fix does not make sense here; interfaces and abstract types should not be proposed for constructor invocations.,3
This happens in 3.0M2; ; If Im searching for references of a method; I usually right click;; Search->References->Workspace.; However; with large workspaces; this can take pretty long; so Ive gotten in the; habit of searching for references within a working set.  I usually define a; workingset for each project and all its contents.; ; The problem is; when I search for references of a method in the workingset; it; does not find references to that symbol from the thirdparty jars I have attached; to the projects build path (verified the jar is selected as part of the working; set).  However; if I search the workspace; it does find the references in that; thirdparty jar.  This is usually for a method defined in the thirdparty jar that; I use; and want to see how it is used by the thirdparty.,3
It only fills the requester horisontally when the requester is resized.; ;  yvind,3
Build 20030107 or HEAD; ; The Java UI plug-in now registers a font definition for Java editors. The Java; editor font preference is no longer on the Java editors preference page but on; the Workbenchs Font preference page.; ; Currently we propagate this font to the JDT UI preference store to allow clients; to access the font preference as before. This will go away with 2.2. JDT Debug; UI accesses the font preference for the Snippet editor. I suggest to apply the; attached patch to org.eclipse.jdt.debug.ui. It adds the symbolic font name to; the Snippet editor.,3
M20050824-1200; ; See JDT/Core bug 104293. For that specific instance of the problem; theres an; easy workaround in JdtASTMatcher that we should submit for 3.1.1.,3
When typing fast this will frequently result in absorbing space characters. ; E.g. if you type = (which is accessed by pressing Shift in many european ; keyboard layouts) it is likely to have Shift not completely released when Space ; follows.,3
Build: 20020125; ; Description:; If you click on Save As while editing a java file; the save as dialog opens ; with blank folder and file name fields.  I would expect the initial values of ; these fields to match the current values.; ; Steps:; 1.  Open a java file in the java editor.  ; (e.g. /org/eclipse/ui/IActionBars.java); 2.  Click on save as.; 3.  The folder and file name fields are blank.  I would expect folder to ; contain /org/eclipse/ui and file name to contain IActionBars.java,3
Build ID: 20090621-0832; ; Steps To Reproduce:; 1. Create a new maven project; 2. Put some Foo class in src/main/java; 3. Put some bar.xml in src/main/resources; 4. bar.xml can be reached from Foo by classpath:bar.xml (e.g. in a ClasspathResource from Spring); 5. Export this project as a runnable jar; 6. Lo and behold: bar.xml is *not* in the root directory of the jar but in a subdirectory called resources. Your class doesnt work any more; bar.xml cant be found.,3
Preferences > Java > Code Generation > Templates shows a list of comment types; for classes; constructors; methods etc.; ; Under 2.1RC1 this tree used to be shown with graphical icons for each of the tree nodes; in 2.1RC2 these icons are not shown in the tree.,3
"DiagnoseParser as of 06/13/2003; ; When following syntax error (in #newLibraryEntry()) is diagnosed; the end ; result is confusing; especially due to the highlighting.; ; public class X {; ; 	public static void main(String[] args) {; 	}; 	public static int newLibraryEntry() {; 			; 		if (sourceAttachmentPath != null) {; 			if (sourceAttachmentPath.isEmpty()) { && !; sourceAttachmentPath.isAbsolute()) {; 			foo();; 		}; 		return null;; 	}; 	}; 	; 	public void foo() {; 	}; ; 	public void bar() {; 	}; }; ; Error diagnosis is:; ; Severity	Description	Resource	In Folder	Location; 	Creation Time; 	Syntax error on token {; invalid AssignmentOperator	X.java	Crap/src; 	line 12	June 13; 2003 6:02:40 PM; 	Syntax error on token &&; invalid PushLPAREN	X.java	Crap/src; 	line 12	June 13; 2003 6:02:40 PM; 	Syntax error on token(s); misplaced construct(s)	X.java	Crap/src; 	line 9	June 13; 2003 6:02:40 PM",3
I200409212000: The combo box containing the qualified name of the accessor ; class with its associated properties file has a misleading label Accessor ; class. The label should take both properties file and accessor class into ; account.,3
Build ID:  M20080221-1800; ; Steps To Reproduce:; 1.Create a Java project; 2.Create a .java source file; 3.Enter a function like this:; ; class Test {;     ArrayList params;; ;     public int getSqlParamCount() {;         return params == null ? null:params.size();;     }; }; ; ; More information:; If we remove the conditional; then the compiler complains:; ; class Test {;     ArrayList params;; ;     public int getSqlParamCount() {;         return null;;     }; },3
"jkca (4/11/2001 12:02:47 PM); 	jre-sdk 043; ; I attempted to change the value of a char to be a newline.  I tried both; \n and \n and neither of them worked.  I suspect there are problems with; tabs and other escaped characters.   Also; there should be support for (char)86.; ; DS (4/11/2001 2:52:48 PM); 	We should handle the escape chars.  (char)86 support is on hold.; 	Need the valid set of escape chars.; ; DS (4/17/2001 1:58:55 PM); 	Test with \n.; ; DS (4/17/2001 3:30:46 PM); 	Implemented the escape chars.; 	Verify and then move to inactive.; ; DW (4/18/01 4:42:53 PM); 	Verified. We might also want to support unicode sequences.; ; DW (6/2/01 12:46:40 PM); 	Possible enhancements:; 		For characters; allow; 			(char)86; 			unicode; 		For numbers; allow; 			hex input; 		For Strings; 			allow specification of null?",3
Example:; ; public class A ; {;   private static class B ;   {;   }; }; ; Collapse class B (so that it only is one line of code). Then select this line of code and cut that selection (e.g. Ctrl-X). ; The source is not cut; but source of class B is expanded again.; But some actions work; e.g. Del deletes class B.; ; Workaround: ; Select class in Package view. Then select cut.; ; ; ; ; -- Configuration Details --; Product: Eclipse 1.2.1.20090812-1036 (org.eclipse.epp.package.java.product); Installed Features:;  org.eclipse.jdt 3.5.1.r351_v20090810-0600-7r88FEoFI0WTo6Az-1qFRHm37ChJ,3
i have java perspective running and browsing sitting behind; still; on every selection change in the package explorer; java browsing is ; notified; updates its views; collects markers and does other work,3
- Enable Hyperlink Navigation (Ctrl-Click on source elements to open ; declaration); - Change focus to the outline; or another program (editor loses focus); - Hover over source in editor,3
latest submitted for 1022; for a 10 line file it takes 4 seconds on my 1GHz machine; it takes like 1/4 or 1/2 second to open even much larger files that are on the ; classpath (well; thats the only diff between them that i can tell),3
given this class:; ; public class C {; ;   private final int _a;; ;   public C(int a) {;     try {;       _a = Math.abs(34);;     } catch (Exception e) {;       _a = -1;;     };   }; }; ; results in a compiler error in the catch block that:; The final field _a may already have been assigned; ; IMO that is not correct here but it would be; if there are more statements after the first assignment to _a in the try block.; however; im not so firm what the java spec says on this and what gritty stuff there is on byte code level preventing a fix.; ; i think the compiler needs to check alternate execution paths as it already does when determining if a method returns a value for sure or not.,3
cod assist popup menu selection colors are extremely close to the popup background color on ; linux+gtk (and possibly osx too; i cant recall); making it very difficult to determine which item is ; the current selection. ;  ; There seems to be no way to configure this setting as well; unless im just missing it.,3
"The user operation is waiting for background work to complete. 1 work items ; letf; and the progress view does not show any oder work. It has hapened to me ; 3 times. I am not able to reproduce this bug consistently; in the 3 cases ; ihave to kill an realaunc eclipse.; ; I take a look to the log and I saw that it has como extrmely large  105 ; Megabytes;  it looks like something gets cicled ; ; 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668); 	at org.eclipse.jface.window.Window.open(Window.java:648); 	at org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:257); 	at org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager$2.run; (JavaDebugOptionsManager.java:746); 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages; (Synchronizer.java:106); 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668); 	at org.eclipse.jface.window.Window.open(Window.java:648); 	at org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:257); 	at org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager$2.run; (JavaDebugOptionsManager.java:746); 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages; (Synchronizer.java:106); 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668); 	at org.eclipse.jface.window.Window.open(Window.java:648); 	at org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:257); 	at org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager$2.run; (JavaDebugOptionsManager.java:746); 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages; (Synchronizer.java:106); 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668); 	at org.eclipse.jface.window.Window.open(Window.java:648); 	at org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:257); 	at org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager$2.run; (JavaDebugOptionsManager.java:746); 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages; (Synchronizer.java:106); 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668); 	at org.eclipse.jface.window.Window.open(Window.java:648)",3
The relaunch last name does not clearly tell the user that we are simply; re-launching the last launch that was launched.  Users have been confused by; this and expect it to debug.  We need a better name so that users realize it is; not switching launch modes.; ; Perhaps this leads to another point which is that the menu name debug is; misleading because it contains both run & debug actions.,3
I20060801-0900; ; Running Source > Find Broken Externalized Strings on ; /org.eclipse.ltk.ui.refactoring/src/org/eclipse/ltk/internal/ui/refactoring/RefactoringUIMessages.properties; gives these false positives:; ; Unused keys in: RefactoringUIMessages.properties - \org.eclipse.ltk.ui.refactoring\src\org\eclipse\ltk\internal\ui\refactoring (3 matches); Undefined keys in: RedoRefactoringAction.java - org.eclipse.ltk.ui.refactoring; Undefined keys in: RefactoringHistoryWizard.java - org.eclipse.ltk.ui.refactoring.history; Undefined keys in: UndoRefactoringAction.java - org.eclipse.ltk.ui.refactoring,3
"Using 1.5; the following code should compile fine.; ; public class X {; ;   public static void main(String argv[]) {;      int[] tabInt = new int[] {};;      int[] tabInt2 = tabInt.clone();;      System.out.print(SUCCESS);;   }; ; }; ; We report:; ----------; 1. ERROR in C:\tests_sources\X.java (at line 5); 	int[] tabInt2 = tabInt.clone();; 	      ^^^^^^^; Type mismatch: cannot convert from Object to int[]; ----------; 1 problem (1 error); ; The return type of clone() is int[]; but inside its signature it is still; java.lang.Object.; It adds a cast after the clone call.",3
If a synchronized method is inlined; then each occurence must be inlined into ; a synchronized block.  Eg; access of a long is not atomic and must be ; synchronized.; ; -------------------------- Bug.java ---------------------; class Bug {;     static long x;;     synchronized static void next(){x++;};     { next(); }; },3
While investigating bug 94452; I found a few place where we are creating more ; JDWP traffic than neccessary.; ; * ObjectReferenceImpl.uniqueID() is potentially throwing an ; ObjectCollectedException; which is not part of the JDI spec and causes an ; extra JDWP communication to determine if the object is allocated. The spec ; claims the id is unique as along as the object is allocated; but that can ; still be determined if a client needs to; by calling #isCollected() ; explicitly. We use the unique id for each object in the variables view.; * ArrayReferenceImpl is not caching its length; which cannot change. It goes ; to the target each time it needs its length.,3
I20051130-1215; ; The similar elements matcher could also handle the usual english plurals;  -> s and y -> ies.; ; class Item { // rename to Thing ;     Item[] items; //not found; should rename to things;     Item[] item; //ok; }; ; The non plus ultra would be support for conversions like this:; ; class Handy { // rename to MobilePhone;     java.util.Collection<Handy> handies; //-> mobilePhones;     Handy[] handy; //-> mobilePhone; },3
My use case is that I want to filter types that implement a certain interface; I cant do this now because the only think I can look at is the name of the type (using the filter extension mechanism). However in looking at the code; the IType is actually available and could easily be passed to the filter extension.,3
missing action docs for the expressions view,3
"The JLS3 states that the floating-point literals can now have a binary exponent.; ; Here are the rules to create a floating-point literal:; ; FloatingPointLiteral; 	DecimalFloatingPointLiteral; 	HexadecimalFloatingPointLiteral; ; DecimalFloatingPointLiteral:; 	Digits . Digitsopt ExponentPartopt FloatTypeSuffixopt; 	. Digits ExponentPartopt FloatTypeSuffixopt; 	Digits ExponentPart FloatTypeSuffixopt; 	Digits ExponentPartopt FloatTypeSuffix; ; ExponentPart:; 	ExponentIndicator SignedInteger; ; ExponentIndicator: one of; 	e E; ; SignedInteger:; 	Signopt Digits; ; Sign: one of; 	+ -; ; FloatTypeSuffix: one of; 	f F d D; ; HexadecimalFloatingPointLiteral:; 	HexSignificand BinaryExponent FloatTypeSuffixopt; ; HexSignificand:; 	HexNumeral; 	HexNumeral .; 	0x HexDigitsopt . HexDigits; 	0X HexDigitsopt . HexDigits; ; BinaryExponent:; 	BinaryExponentIndicator SignedInteger; ; BinaryExponentIndicator: one of; 	p P; 	; HexNumeral:; 	0 x HexDigits; 	0 X HexDigits; 	; HexDigits:; 	HexDigit; 	HexDigit HexDigits; 	; HexDigit: one of; 	0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F; ; The unsupported format is HexadecimalFloatingPointLiteral.",3
Build ID: I20081030-1917; ; Steps To Reproduce:; My expectation that sort members would sort the members based on the definitions in Java/Appearance/Member sort order but instead it just sort the variables alphabetically (which is not desirable in my case but would be nice to have it as a separate option). ; ; ; More information:; I am not sure what triggers Java/Appearance/Member sort but exected it to be triggered by cleanup/save actions and to deal with code ordering cleanup (such as imports order) and not alphabetical sort order.,3
Sometimes; when I do a Change Signature refactoring; an import that WAS in the; source file; is removed.  I dont know that its relevant; but the one place; Ive seen it for sure; the lost import was ONLY referenced in a call to a; constructor.; ; Something like this:; ; ; public Foo() {;   this(new Bar());; }; public Foo(IBar bar) {;   this.bar = bar; ; }; ; If I use Change Signature to add an additional parameter to the second; constructor; the import for Bar disappeared.,3
It would be good if there was an option to disable any warning/error for an; unread parameter on a method which over-rides a method in its superclass; as it; is common to have an API requiring certain methods to be over-ridden/implemented; which specify a signature including parameters the person doing the over-riding; does not need.; ; If the class or interface that originally defined the signature was in the; workspace and none of its implementors or subclasses used the parameter the; warning should still show up on the original class.,3
R2.0; ; 1) Turn on the preference to fill argument names on method completion; 2) Start writing a method name that have different signatures; 3) Choose one; 4) The argument name appears and has a underlined in green; 5) Select the argument name and paste some other name on it; 6) It remains underlined and only seems to get rid of that if you change the ; original name used for the paste (although; changing the original does not ; change the new argument).; ; What is the meaning of the underline? Why would it stay around after a paste ; (looks like a bug)?.,3
"build 0508; ; public class WordJumpTest {; ; 	public WordJumpTest() {; 		super();; 	}; ; 	public void testmymethod; ; ; 	public String toString() {; 		return test;; 	}; }; ; goto test<Cursor>mymethod; and change the m to M; now quickly press ctrl+left a few times (2x); the cursor moves to WordJumpTest",3
I20061219-1300; ; SurroundWithActionGroup waits for AST when building editor context menu. We must not wait for the AST while building the main editor context menu.; ; main prio=6 tid=0x00036340 nid=0xda0 in Object.wait() [0x0007e000..0x0007fc40];         at java.lang.Object.wait(Native Method);         - waiting on <0x12d4dda0> (a java.lang.Object);         at java.lang.Object.wait(Object.java:474);         at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:490);         - locked <0x12d4dda0> (a java.lang.Object);         at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:70);         at org.eclipse.jdt.internal.ui.text.correction.SurroundWith.getSelectedStatements(SurroundWith.java:170);         at org.eclipse.jdt.internal.ui.text.correction.QuickTemplateProcessor.getAssists(QuickTemplateProcessor.java:120);         at org.eclipse.jdt.internal.ui.actions.SurroundWithTemplateMenuAction.getTemplateActions(SurroundWithTemplateMenuAction.java:3;         at org.eclipse.jdt.internal.ui.actions.SurroundWithTemplateMenuAction.fillMenu(SurroundWithTemplateMenuAction.java:162);         at org.eclipse.jdt.internal.ui.actions.SurroundWithActionGroup.fillContextMenu(SurroundWithActionGroup.java:60);         at org.eclipse.jdt.internal.ui.actions.CompositeActionGroup.fillContextMenu(CompositeActionGroup.java:78);         at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.editorContextMenuAboutToShow(CompilationUnitEditor.java:1336);         at org.eclipse.ui.texteditor.AbstractTextEditor$13.menuAboutToShow(AbstractTextEditor.java:2486);         at org.eclipse.jface.action.MenuManager.fireAboutToShow(MenuManager.java:289);         at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:394);         at org.eclipse.jface.action.MenuManager.access$1(MenuManager.java:390);         at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:416);         at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:117);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:928);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:952);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:933);         at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:3681);         at org.eclipse.swt.widgets.Control.windowProc(Control.java:3398);         at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1554);         at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:1728);         at org.eclipse.swt.widgets.Display.windowProc(Display.java:4134);         at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method);         at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:227);         at org.eclipse.swt.widgets.Display.runPopups(Display.java:3491);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3073);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1945);         at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1909);         at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:425);         at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149);         at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:585);         at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethod(EclipseAppContainer.java:522);         at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:147);         at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:104);         at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:74);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:170);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:585);         at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:473);         at org.eclipse.equinox.launcher.Main.basicRun(Main.java:417);         at org.eclipse.equinox.launcher.Main.run(Main.java:1121);         at org.eclipse.equinox.launcher.Main.main(Main.java:1096),3
Build 20021016; ; 1) Import a binary plugin project; 2) In the packages view; add the filter to hide binary plugin projects; 3) Checkout that same project from a repository; ; -> Project is no longer a binary plugin project; but the packages view still; does not show it.  Somehow the filter needs to update the viewer when a project; becomes non-binary.,3
"Creaing a java file overwrites any external file with the same name in that folder without asking the user.; ; 1. Copy a java source file( e.g. Test.java ) to a folder of a project without using Eclipse.; 2. Using the class wizard in Eclipse; create a class( e.g. Test ) with the same name in that folder.; 3. Notice that the new class has overwritten the existing java file.; ; NOTES:; ; KH (5/28/2001 6:04:36 AM); 	Moving to JUI.; ; EG (5/28/01 4:48:02 PM); 	there should be an exception that the resource must not exist. 	; 	it looks like we are swallowing this exception either in JUI or JCORE.; ; MA (5/30/01 6:17:25 PM); 	My guess is that JDOM creates the cu with force. Investigating; ; MA (5/31/01 4:21:13 PM); 	bug was on our side; 	fixed > 115; ; PA (6/1/01 7:01:30 PM); 	build 116.2; 	- made a file Test.java with the following content directly on the filesystem:; 		---- begin of Test.java; 		---- end of Test.java; 	- start class wizard and make a class Test in the same project; 	- Error message comes up and says:; 		Title: NewElementWizard.op_error.title; 		Reason: Core exception: Resource /Test/Test.java must not exitst.; 	- confirm with OK - file is still not overridden/changed; 	- press finish again now -> wizard terminates.; 	- the file Test.java has now this content:; 		---- begin of Test.java; 		---- end of Test.java; 		public class Test {}; ; EG (18.07.2001 15:27:42); 	notice the NL bug in the title of the Error dialog.",3
Build Identifier: 20100917-0705; ; // @formatter:off Eclipse formatter messes up comment indentation here so turn it off for this block; public static enum Environment {;     PROD;       // Production level environments;     STAGING    // Staging; }; // @formatter:on; ; would like to not have to turn off formatter for this kind of code.  with formatter on it does this (which makes the comments not lineup in the editor):; ; public static enum Environment {;     PROD; // Production level environments;     STAGING // Staging; }; ; ; Reproducible: Always,3
"Build 3.2M5; ; When typing following code in editor (without building); there is no error indication in left ruler; where one appears when building.; ; public class X {; 	{; 		(a; 	}; }; ; Note that if removing the open parenthesis; the error icon appears as expected.",3
I20060105; ; Searching to references to a binary member constructor doesnt find any. For example searching for references to java.util.zip.ZipFile$ZipFileInputStream(lonng; ZipFile) in a JDK1.4.1_05 library (with Search JRE libraries enabled) doesnt find the reference in ZipFile#getInputStream(String).,3
Adding overlay on the threads and monitor icons in the debug view to show deadlocks.,3
I20040413; ; - Select a package; that has a bunch of inner classes; in the Package ; Explorer. (I selected org.eclipse.swt.examples.controlexample - its in the ; org.eclipse.swt.examples project).; ; - Choose Open Type Hierarchy (or F4).; ; - After the Hierarchy View opens; you will notice that the meat of what you ; want to look at is somewhat obscured. (In my case; there are really only two ; hierarchies in this package that are interesting: ControlExample; and Tab).; It would be nice if I could choose to hide the inner class hierarchies with an ; easy-to-access tool button on the Hierarchy Views toolbar.; ; (Also would be nice if the inner class hierarchies could come up collapsed in ; the tree; instead of expanded).; ; In SWT; we tend to have a lot of listeners; and we almost never want to see ; them as a class in their own right; because they are only interesting in the ; context of the class that they are defined in. (So it makes more sense to just ; go see them in the compilation unit of the defining class).; ; I suspect that it is more important to allow hiding of anonymous inner classes ; than named ones. The anonymous ones just arent very interesting by themselves.,3
"Given code:; ; package dj.test;; ; import junit.framework.TestCase;; ; /**;  * @author avi;  */; public class CopyOfDjTests extends TestCase {; 	public class Song {}; ; 	public class Dj {}; ; 	public void test00increasePlayCount() throws Exception {; 		Dj dj = new Dj();; 		Song song = new Song();; 		assertEquals(0; dj.playCount(song));; 	}; }; ; (With JUnit libraries imported).  The create method quick fix tries to; generate method playCount with return type Object.  Originally; I blamed; autoboxing; but the same happens when 1.4 compliance is enabled.; ; The issue appears to be that assertEquals is overloaded in TestCase",3
Build ID: I20090313-0100; ; Steps To Reproduce:; eclipse.buildId=I20090313-0100; java.version=1.6.0_13; java.vendor=Sun Microsystems Inc.; BootLoader constants: OS=win32; ARCH=x86; WS=win32; NL=cs_CZ; Framework arguments:  -showlocation; Command-line arguments:  -os win32 -ws win32 -arch x86 -showlocation; ; ; Error; Mon Mar 30 15:09:55 CEST 2009; An internal error occurred during: Compute launch button tooltip.; ; java.lang.NullPointerException; at org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.analyseCode(ConstructorDeclaration.java:70); at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode(TypeDeclaration.java:684); at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(TypeDeclaration.java:218); at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode(TypeDeclaration.java:666); at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(TypeDeclaration.java:253); at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.analyseCode(CompilationUnitDeclaration.java:111); at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:868); at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:518); at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:908); at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:657); at org.eclipse.jdt.internal.junit.launcher.JUnit4TestFinder.internalIsTest(JUnit4TestFinder.java:232); at org.eclipse.jdt.internal.junit.launcher.JUnit4TestFinder.isTest(JUnit4TestFinder.java:200); at org.eclipse.jdt.internal.junit.util.TestSearchEngine.isTestOrTestSuite(TestSearchEngine.java:58); at org.eclipse.jdt.internal.junit.JUnitPropertyTester.isJUnitTest(JUnitPropertyTester.java:112); at org.eclipse.jdt.internal.junit.JUnitPropertyTester.canLaunchAsJUnitTest(JUnitPropertyTester.java:87); at org.eclipse.jdt.internal.junit.JUnitPropertyTester.test(JUnitPropertyTester.java:70); at org.eclipse.core.internal.expressions.Property.test(Property.java:58); at org.eclipse.core.internal.expressions.TestExpression.evaluate(TestExpression.java:99); at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53); at org.eclipse.core.internal.expressions.AdaptExpression.evaluate(AdaptExpression.java:91); at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53); at org.eclipse.core.internal.expressions.IterateExpression.evaluate(IterateExpression.java:150); at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53); at org.eclipse.core.internal.expressions.WithExpression.evaluate(WithExpression.java:72); at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53); at org.eclipse.core.internal.expressions.EnablementExpression.evaluate(EnablementExpression.java:53); at org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension.evalEnablementExpression(LaunchShortcutExtension.java:287); at org.eclipse.debug.internal.ui.contextlaunching.LaunchingResourceManager.getShortcutsForSelection(LaunchingResourceManager.java:439); at org.eclipse.debug.internal.ui.contextlaunching.LaunchingResourceManager.computeLabels(LaunchingResourceManager.java:224); at org.eclipse.debug.internal.ui.contextlaunching.LaunchingResourceManager$2.run(LaunchingResourceManager.java:138); at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55); ; ; ; More information: eclipse-3.5M6; component was set according to similar problems reported earlier (all are fixed),3
"200402122000; ; At the indicated position; ICompilationUnit#codeComplete(int offset;; ICompletionRequestor requestor) doesnt find a completion. Also no completion is; found when I replace the anonymous class by a local class. However; when I; remove the static modifier from main; the method is found.; ; I noticed that the outline doesnt show the local class as soon as I start; typing in the body of run(); but this might not have a connection to this PR.; ; public class XXX {; 	public static void main () {; 		Runnable r = new Runnable() {; 			public void run() {; 				doT // <-- No completions available.; 			}; 			private void doTheThing() { }; 		};; 	}; }",3
I have reproduced the following on both Linux and Win2k installation of Eclipse 3.1; ; When entering the following code (or similar) Eclipst tries to access the; context content help if one enters a dot after an enum variable (eg; after; MyEnumVar) and never comes back - one chan hear it accessing the hard disk; continuously but no amount of waiting will do.  The only resort is to kill; Eclipse and restard.; ; Although I am aware this is not intended and only the result of mis-typing; it; should not cause such a dramatic failure (especially as the ; key - a natural; thing to enter in a list of enums - is just next to the . key - a not so; natural thing to type; admittedly) and might cause a significant amount of; typing to go to waste.; ; I have a feeling this is due to nested recursive calls when trying to resolve types.; ; Code example:; ; public enum MyEnum {;   MyEnumVar(myvar);; // enter dot here -^  ;   AnotherEnumVar(anothervar);; ;   private MyEnum(String s) {;     this.value = new String(s);;   };   private final String value;; ;   public String value() { return s; }; }; ; the code otherwise compiles and works.,3
Im running 3.2M5.; ; In the scrapbook the Ctrl-U shortcut does not work.; ; I have to select Execute from the context menu or click the Evaluate selected text-button in the toolbar.; ; In 3.2M4 it works fine.,3
"Created attachment 113880; proposed fix; ; Build ID: M20080911-1700; ; One interface:;   public interface I1 {; 	Object m();;   }; and two classes:;   public class C1 {; 	public abstract Object m();;   };   public class C2 extends C1 implements I1 { }; ; The compiler reports one error in C1 (OK) and the following in C2:;   The type C2 must implement the inherited abstract method C1.m(); ; Reading the code in MethodVerifier#checkInheritedMethods; it looks very much like this is not exactly intended:; C1.m() should _not_ be reported against C2; because this; is already reported against C1. Instead; I1.m() should be; used in the message.; ; The use of a constant array index 0 is inherited all the way from; MethodVerifier.java version 1.1; at what time reporting happened; _after_ the loop. Version 1.30 extended the loop to include reporting; but did not update the indices.; ; Attaching a micro patch.",3
I am running Sun JDK 1.3.1_06.; ; I have a JAR to which I have attached source.  While viewing a class within ; that JAR; I search for the References to public method from that class.  The ; Search View returns with a list of the references to that method (which are ; also in the same JAR); but when I double-click on any of them I get an error ; pop-up box that says Could Not Open Editor.; ; Nothing gets written to the log file when this happens.; ; If you need anything else; let me know.,3
While trying out the great new Execution Environment support in 3.4 I discovered a particular runtime that I have which could handle 1.5 language and API features however it does not currently support JVMTI for debugging.  So when I went to debug using my newly defined EE I would get an exception from the launched Virtual Machine.; ; If I change the EE property ee.language.level to 1.4 then debugging works but then the compiler will be set also to 1.4 and I wont be able to use 1.5 features that are available in my particular runtime.; ; So either if there was an EE property for which debug agent to use or to use which ever one was hardcoded in the properties file.; ; Im open to suggestions or discussions.,3
"1. Open the type hierarchy for some type (X); 	2. Show inherited methods; 	3. select an inherited method and a method from the opened type (X); 	==> only one editor is opened (the one for X); 	When I only selecet the inherited method then its class is opened.; ; 	Either diable multiple selection or open both editors.; ; ; NOTES:; MA (06.08.2001 17:22:05); 	Now both selections open (behaviour like open in package viewer); 	fix in 200; ; EG (7/12/01 11:01:00 AM); 	open both editors",3
"Using 1216; we dont report a deprecation warning in this case:; 1) Compile this code:; [; public class X {; 	/** ; 	 * @deprecated; 	 */    ; 	public static class Y {; 	}; }; ]; ; 2) delete the source X.java; 3) compile this class putting the previous .class file on the classpath:; class A extends X.Y {; }; ; We dont report any deprecation warning; but we do if you move the javadoc; comment on the top level class.",3
When importing JRE definition settings from a preference settings file; entries in the XML file with the same install location as already present in the preferences store are ignored.; ; The condition in JREPreferenceModifyListener.visit() is as follows:;   if (!names.contains(vm.getName()) && ;       !locations.contains(vm.getInstallLocation())) {;     vms.addVM(vm);;   }; ; I would like to request that an entry is added independent of an already existing entry for the same JRE location; i.e. the second condition above is dropped. We can even argue that an entry being imported with the same name as an existing one is replacing the existing one instead of being ignored.; ; Reason/use case: As the logical name of the JRE is stored in .classpath; and .classpath is usually stored in the source code repository; we must ensure that all developers work with the same mappings of logical names and JRE installation locations. As a result of this; there is usually more than one JRE entry per Java installation path. When we now distribute an import file containing a set of (standard) JRE mappings and the user already has some self-defined entries; then some new mappings are arbitrarily ignored.; ; (BTW: I erroneously assumed some other bug earlier (reported in bug 110588) until I had time to look into the source code...),3
Using I-0427 build; just opening the Java Editor; and selecting something in the ; outline causes following exception. I marked as critical; since once it happens; ; the edit area doesnt repaint correctly and editor must be closed to recover. ; ; Note: I had experimented with -Dorg.eclipse.jdt.internal.ui.projection=true; but saw lots of problems; removed it; then still saw this problem. Im not sure ; if occurs in fresh install (but since I know some dont use outline view much ; any more; thought it might have slipped through unnoticed).; ; ; ; ; !MESSAGE Failed to execute runnable (org.eclipse.jface.text.; Assert$AssertionFailedException: Assertion failed: ); !STACK 0; org.eclipse.swt.SWTException: Failed to execute runnable (org.eclipse.jface.; text.Assert$AssertionFailedException: Assertion failed: );         at java.lang.Throwable.<init>(Throwable.java);         at java.lang.Throwable.<init>(Throwable.java);         at org.eclipse.swt.SWTException.<init>(SWTException.java:73);         at org.eclipse.swt.SWT.error(SWT.java:2659);         at org.eclipse.swt.SWT.error(SWT.java);         at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.; java);         at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1437);         at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1408);         at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.; java:244);         at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140);         at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:; 90);         at org.eclipse.core.internal.runtime.PlatformActivator$1.; run(PlatformActivator.java:280);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.; java:240);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.; java:117);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.; java:84);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.; java:57);         at sun.reflect.DelegatingMethodAccessorImpl.; invoke(DelegatingMethodAccessorImpl.java:59);         at java.lang.reflect.Method.invoke(Method.java:389);         at org.eclipse.core.launcher.Main.basicRun(Main.java:267);         at org.eclipse.core.launcher.Main.run(Main.java:699);         at org.eclipse.core.launcher.Main.main(Main.java:683); Failed to execute runnable (org.eclipse.jface.text.; Assert$AssertionFailedException: Assertion failed: ); !ENTRY org.eclipse.ui 4 4 Apr 29; 2004 03:54:15.897; !MESSAGE *** SWT nested exception; *** SWT nested exception; Reason:; !ENTRY org.eclipse.ui 4 0 Apr 29; 2004 03:54:15.897; !MESSAGE Assertion failed:; !STACK 0; org.eclipse.jface.text.Assert$AssertionFailedException: Assertion failed:;         at java.lang.Throwable.<init>(Throwable.java);         at java.lang.Throwable.<init>(Throwable.java);         at org.eclipse.jface.text.Assert$AssertionFailedException.<init>(Assert.; java:56);         at org.eclipse.jface.text.Assert.isTrue(Assert.java:177);         at org.eclipse.jface.text.Assert.isTrue(Assert.java);         at org.eclipse.jface.text.projection.ProjectionMapping.; toImageRegion(ProjectionMapping.java);         at org.eclipse.jface.text.projection.ProjectionMapping.; toImageRegion(ProjectionMapping.java);         at org.eclipse.jface.text.TextViewer.modelRange2WidgetRange(TextViewer.; java);         at org.eclipse.jface.text.source.AnnotationRulerColumn.; doPaint1(AnnotationRulerColumn.java:504);         at org.eclipse.jface.text.source.AnnotationRulerColumn.; doubleBufferPaint(AnnotationRulerColumn.java:312);         at org.eclipse.jface.text.source.AnnotationRulerColumn.; access$3(AnnotationRulerColumn.java:288);         at org.eclipse.jface.text.source.AnnotationRulerColumn$1.; paintControl(AnnotationRulerColumn.java:207);         at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:; 82);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java);         at org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java);         at org.eclipse.swt.widgets.Control.windowProc(Control.java);         at org.eclipse.swt.widgets.Display.windowProc(Display.java);         at org.eclipse.swt.internal.win32.OS.RedrawWindow(Native Method);         at org.eclipse.swt.widgets.Control.update(Control.java:2847);         at org.eclipse.swt.widgets.Display.update(Display.java:3065);         at org.eclipse.jface.window.Window.runEventLoop(Window.java);         at org.eclipse.jface.window.Window.open(Window.java:650);         at org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:; 287);         at org.eclipse.jface.util.SafeRunnable.handleException(SafeRunnable.; java:50);         at org.eclipse.jface.viewers.StructuredViewer$3.; handleException(StructuredViewer.java:434);         at org.eclipse.core.internal.runtime.InternalPlatform.; handleException(InternalPlatform.java:333);         at org.eclipse.core.internal.runtime.InternalPlatform.; run(InternalPlatform.java);         at org.eclipse.core.runtime.Platform.run(Platform.java);         at org.eclipse.jface.viewers.StructuredViewer.; firePostSelectionChanged(StructuredViewer.java:429);         at org.eclipse.jface.viewers.StructuredViewer.; handlePostSelect(StructuredViewer.java:680);         at org.eclipse.jface.viewers.StructuredViewer$5.; widgetSelected(StructuredViewer.java:698);         at org.eclipse.jface.util.OpenStrategy.; firePostSelectionEvent(OpenStrategy.java:198);         at org.eclipse.jface.util.OpenStrategy.access$4(OpenStrategy.java:193);         at org.eclipse.jface.util.OpenStrategy$3.run(OpenStrategy.java:334);         at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35);         at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.; java);         at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1437);         at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1408);         at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.; java:244);         at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140);         at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:; 90);         at org.eclipse.core.internal.runtime.PlatformActivator$1.; run(PlatformActivator.java:280);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.; java:240);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.; java:117);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.; java:84);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.; java:57);         at sun.reflect.DelegatingMethodAccessorImpl.; invoke(DelegatingMethodAccessorImpl.java:59);         at java.lang.reflect.Method.invoke(Method.java:389);         at org.eclipse.core.launcher.Main.basicRun(Main.java:267);         at org.eclipse.core.launcher.Main.run(Main.java:699);         at org.eclipse.core.launcher.Main.main(Main.java:683); Assertion failed:; ; ; ; Note: I had experimented with -Dorg.eclipse.jdt.internal.ui.projection=true; but saw lots of problems; removed it; then still saw this problem.,3
"20040128 (uses jdt.core from I20040128 and HEAD); ; - select IOException from foo signature.; - local rename; press RR; ; -> Illegal Argument Exception; ; package x;; ; import java.io.IOException;; import java.io.Reader;; ; public class B {; 	; 	private Reader reader;; 	; 	public void dispose() {; 		if (reader != null) {; 			try {; 				reader.; 					close() ; // my formatting; 			} catch (IOException e) {; 			}; 		}; 	}; 	; 	/**; 	 * @param name1; 	 * @throws IOException; 	 */; 	public void foo(int name1) throws IOException {; 		; 	}; 	; 		; }; ; java.lang.IllegalArgumentException: Argument not valid; 	at java.lang.Throwable.<init>(Throwable.java); 	at java.lang.Throwable.<init>(Throwable.java:73); 	at org.eclipse.swt.SWT.error(SWT.java:2594); 	at org.eclipse.swt.SWT.error(SWT.java:2538); 	at; org.eclipse.jface.text.DocumentAdapter.replaceTextRange(DocumentAdapter.java:196); 	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:6017); 	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6953); 	at org.eclipse.swt.custom.StyledText.doContent(StyledText.java:2554); 	at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:5322); 	at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:5345); 	at org.eclipse.swt.custom.StyledText$8.handleEvent(StyledText.java:5070); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java); 	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3037); 	at org.eclipse.swt.widgets.Control.windowProc(Control.java); 	at org.eclipse.swt.widgets.Display.windowProc(Display.java); 	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method); 	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1530); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1506); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:265); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139); 	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47); 	at; org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:248); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79); 	at; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)",3
The debug platform now provides support for launch shortcut key-bindings; ; similar to the open view support in the workbench. From launchShortcuts ext ; pt schema:; ; Since 3.1; the debug platform registers a command handler for each launch ; shortcut and its applicable modes to allow clients to define key-bindings for ; a launch shortcut. The command id for a handler is generated as the launch ; shortcut id attribute; followed by a dot and the applicable launch mode. For ; example; the command id for the above launch shortcut example would be ; com.example.ExampleLaunchShortcutId.debug for launching in debug mode. A ; command and key binding could be defined as follows; to bind ALT-SHIFT-D; E ; to the launch shortcut.; ;    <extension point=org.eclipse.ui.commands>;       <command;             name=Debug Example Launch;             description=Debug Example Launch;             categoryId=org.eclipse.debug.ui.category.run;             id=com.example.ExampleLaunchShortcutId.debug>;       </command>;       <keyBinding;             keySequence=M3+M2+D E;             contextId=org.eclipse.ui.globalScope;             commandId=com.example.ExampleLaunchShortcutId.debug;             ; keyConfigurationId=org.eclipse.ui.defaultAcceleratorConfiguration>;       </keyBinding>;    </extension>,3
Just checked out the new Source > Generate equals and hashcode feature. I wonder why in the method; the classes of the two Objects are not compared.; ; I can see a check for super.equals and a cast afterwards. I had expected something like; ; if (!getClass().equals(obj.getClass()); return false;; ; Ben,3
I changed a method name using Refactor / Rename.; ; This change did not propagate to a @link tag (in a different source file) that; refered to the old method name.,3
With M9 i get now and then a classcast exception when a breakpoints hits; When i see this class cast exception eclipse hangs.; ; java.lang.ClassCastException: ; org.eclipse.jdt.internal.debug.core.model.JDINullValue;         at ; org.eclipse.jdt.internal.debug.core.logicalstructures.MapStructureType$1.run; (MapStructureType.java:33);         at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation; (JDIThread.java:659); ; ; when it hangs i get this thread dump:; ; Console Polling Thread prio=7 tid=0x01684e50 nid=0x160 waiting on condition [0; x03d4f000..0x03d4fc68];         at java.lang.Thread.sleep(Native Method);         at org.eclipse.debug.internal.ui.views.console.ConsoleDocumentPartitione; r.pollAndSleep(ConsoleDocumentPartitioner.java:565);         at org.eclipse.debug.internal.ui.views.console.ConsoleDocumentPartitione; r$1.run(ConsoleDocumentPartitioner.java:549);         at java.lang.Thread.run(Thread.java:566); ; org.eclipse.jdt.debug: JDI Event Dispatcher prio=7 tid=0x0164b308 nid=0xe54 in;  Object.wait() [0x03a4f000..0x03a4fce8];         at java.lang.Object.wait(Native Method);         - waiting on <0x5059bd00> (a org.eclipse.jdi.internal.connect.PacketRece; iveManager);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.jdi.internal.connect.PacketReceiveManager.waitForPacketAv; ailable(PacketReceiveManager.java:168);         at org.eclipse.jdi.internal.connect.PacketReceiveManager.getCommand(Pack; etReceiveManager.java:93);         - locked <0x5059bd00> (a org.eclipse.jdi.internal.connect.PacketReceiveM; anager);         at org.eclipse.jdi.internal.MirrorImpl.getCommandVM(MirrorImpl.java:276); ;         at org.eclipse.jdi.internal.event.EventQueueImpl.remove(EventQueueImpl.j; ava:63);         at org.eclipse.jdi.internal.event.EventQueueImpl.remove(EventQueueImpl.j; ava:48);         at org.eclipse.jdt.internal.debug.core.EventDispatcher.run(EventDispatch; er.java:213);         at java.lang.Thread.run(Thread.java:566); ; Packet Send Manager prio=7 tid=0x0168c190 nid=0x898 in Object.wait() [0x03c4f0; 00..0x03c4f9e8];         at java.lang.Object.wait(Native Method);         - waiting on <0x5059be80> (a org.eclipse.jdi.internal.connect.PacketSend; Manager);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.jdi.internal.connect.PacketSendManager.sendAvailablePacke; ts(PacketSendManager.java:94);         - locked <0x5059be80> (a org.eclipse.jdi.internal.connect.PacketSendMana; ger);         at org.eclipse.jdi.internal.connect.PacketSendManager.run(PacketSendMana; ger.java:54);         at java.lang.Thread.run(Thread.java:566); ; Packet Receive Manager prio=7 tid=0x0168c008 nid=0x2f8 runnable [0x03b4f000..0; x03b4fd68];         at java.net.SocketInputStream.socketRead0(Native Method);         at java.net.SocketInputStream.read(SocketInputStream.java:129);         at java.net.SocketInputStream.read(SocketInputStream.java:182);         at java.io.DataInputStream.readInt(DataInputStream.java:450);         at org.eclipse.jdi.internal.jdwp.JdwpPacket.read(JdwpPacket.java:124);         at org.eclipse.jdi.internal.connect.PacketReceiveManager.readAvailablePa; cket(PacketReceiveManager.java:224);         at org.eclipse.jdi.internal.connect.PacketReceiveManager.run(PacketRecei; veManager.java:70);         at java.lang.Thread.run(Thread.java:566); ; Input Stream Monitor prio=7 tid=0x0164b490 nid=0xc1c in Object.wait() [0x0394f; 000..0x0394fae8];         at java.lang.Object.wait(Native Method);         - waiting on <0x5059bfc8> (a java.lang.Object);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStr; eamMonitor.java:124);         - locked <0x5059bfc8> (a java.lang.Object);         at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamM; onitor.java:99);         at org.eclipse.debug.internal.core.InputStreamMonitor$1.run(InputStreamM; onitor.java:75);         at java.lang.Thread.run(Thread.java:566); ; Output Stream Monitor prio=7 tid=0x0164a670 nid=0x8a8 runnable [0x0352f000..0x; 0352fb68];         at java.io.FileInputStream.readBytes(Native Method);         at java.io.FileInputStream.read(FileInputStream.java:177);         at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStream; Monitor.java:132);         at org.eclipse.debug.internal.core.OutputStreamMonitor.access$1(OutputSt; reamMonitor.java:124);         at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStrea; mMonitor.java:177);         at java.lang.Thread.run(Thread.java:566); ; Output Stream Monitor prio=7 tid=0x0164a7f8 nid=0x100 runnable [0x0342f000..0x; 0342fbe8];         at java.io.FileInputStream.readBytes(Native Method);         at java.io.FileInputStream.read(FileInputStream.java:194);         at java.io.BufferedInputStream.read1(BufferedInputStream.java:228);         at java.io.BufferedInputStream.read(BufferedInputStream.java:285);         - locked <0x505a0158> (a java.io.BufferedInputStream);         at java.io.FilterInputStream.read(FilterInputStream.java:90);         at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStream; Monitor.java:132);         at org.eclipse.debug.internal.core.OutputStreamMonitor.access$1(OutputSt; reamMonitor.java:124);         at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStrea; mMonitor.java:177);         at java.lang.Thread.run(Thread.java:566); ; Worker-14 prio=5 tid=0x01619de0 nid=0x400 in Object.wait() [0x0332f000..0x0332; fbe8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:209);         - locked <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:23; 6);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:59); ; Worker-13 prio=5 tid=0x016f79a0 nid=0xd40 in Object.wait() [0x0312f000..0x0312; fc68];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:209);         - locked <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:23; 6);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:59); ; Worker-12 prio=5 tid=0x01266518 nid=0xbe4 in Object.wait() [0x0302f000..0x0302; fce8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:209);         - locked <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:23; 6);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:59); ; Worker-11 prio=5 tid=0x013afb70 nid=0x688 runnable [0x02f2f000..0x02f2fd68];         at java.lang.ProcessImpl.waitFor(Native Method);         at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorJob.run(Run; timeProcess.java:362);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66); ; Worker-10 prio=5 tid=0x01608ff8 nid=0x224 in Object.wait() [0x025ef000..0x025e; f9e8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:209);         - locked <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:23; 6);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:59); ; org.eclipse.jdt.internal.ui.text.JavaReconciler daemon prio=2 tid=0x026988d8 n; id=0xd8c in Object.wait() [0x0382f000..0x0382fae8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4e7ffea8> (a org.eclipse.jface.text.reconciler.DirtyRegi; onQueue);         at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread; .run(AbstractReconciler.java:172);         - locked <0x4e7ffea8> (a org.eclipse.jface.text.reconciler.DirtyRegionQu; eue); ; Java indexing daemon prio=4 tid=0x011cdfe0 nid=0x848 in Object.wait() [0x0238f; 000..0x0238fd68];         at java.lang.Object.wait(Native Method);         - waiting on <0x4de3a880> (a org.eclipse.jdt.internal.core.search.indexi; ng.IndexManager);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobMan; ager.java:344);         - locked <0x4de3a880> (a org.eclipse.jdt.internal.core.search.indexing.I; ndexManager);         at java.lang.Thread.run(Thread.java:566); ; Thread-1 prio=7 tid=0x011ca9a0 nid=0xbd4 in Object.wait() [0x021bf000..0x021bf; 9e8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4de5ae18> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116);         - locked <0x4de5ae18> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132);         at org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceC; leanerThread.run(ActionContributionItem.java:196); ; Thread-0 prio=7 tid=0x01503e28 nid=0x46c in Object.wait() [0x020bf000..0x020bf; a68];         at java.lang.Object.wait(Native Method);         - waiting on <0x4de5aea0> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116);         - locked <0x4de5aea0> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132);         at org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceC; leanerThread.run(ActionContributionItem.java:196); ; Start Level Event Dispatcher daemon prio=5 tid=0x00987960 nid=0xa44 in Object.; wait() [0x0195f000..0x0195fb68];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d4fe110> (a org.eclipse.osgi.framework.eventmgr.EventTh; read);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThr; ead.java:162);         - locked <0x4d4fe110> (a org.eclipse.osgi.framework.eventmgr.EventThread; );         at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:; 100); ; Framework Event Dispatcher daemon prio=5 tid=0x00987748 nid=0xf24 in Object.wa; it() [0x0185f000..0x0185fbe8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d4fe178> (a org.eclipse.osgi.framework.eventmgr.EventTh; read);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThr; ead.java:162);         - locked <0x4d4fe178> (a org.eclipse.osgi.framework.eventmgr.EventThread; );         at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:; 100); ; Low Memory Detector daemon prio=5 tid=0x008ff060 nid=0x430 runnable [0x0000000; 0..0x00000000]; ; CompilerThread0 daemon prio=10 tid=0x008fdd28 nid=0x55c waiting on condition [; 0x00000000..0x00f5fa58]; ; Signal Dispatcher daemon prio=10 tid=0x008fd0d8 nid=0xefc waiting on condition;  [0x00000000..0x00000000]; ; Finalizer daemon prio=9 tid=0x008f4188 nid=0x8e4 in Object.wait() [0x00d5f000.; .0x00d5fa68];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d4fe360> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116);         - locked <0x4d4fe360> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132);         at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159); ; Reference Handler daemon prio=10 tid=0x008f2ce8 nid=0x1f0 in Object.wait() [0x; 00c5f000..0x00c5fae8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d4fe3e0> (a java.lang.ref.Reference$Lock);         at java.lang.Object.wait(Object.java:468);         at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:118);         - locked <0x4d4fe3e0> (a java.lang.ref.Reference$Lock); ; main prio=7 tid=0x000366d0 nid=0xeb0 in Object.wait() [0x0007e000..0x0007fc3c]; ;         at java.lang.Object.wait(Native Method);         - waiting on <0x4bfa0850> (a org.eclipse.jdt.internal.debug.core.logical; structures.MapStructureType);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.jdt.internal.debug.core.logicalstructures.LogicalObjectSt; ructureInterfaceType.getLogicalStructure(LogicalObjectStructureInterfaceType.jav; a:132);         - locked <0x4bfa0850> (a org.eclipse.jdt.internal.debug.core.logicalstru; ctures.MapStructureType);         - locked <0x4bfa0850> (a org.eclipse.jdt.internal.debug.core.logicalstru; ctures.MapStructureType);         at org.eclipse.debug.internal.core.LogicalStructureType.getLogicalStruct; ure(LogicalStructureType.java:91);         at org.eclipse.debug.internal.ui.views.variables.VariablesViewContentPro; vider.getLogicalValue(VariablesViewContentProvider.java:222);         at org.eclipse.debug.internal.ui.views.variables.VariablesViewContentPro; vider.getValueChildren(VariablesViewContentProvider.java:124);         at org.eclipse.debug.internal.ui.views.variables.VariablesViewContentPro; vider.getModelSpecificChildren(VariablesViewContentProvider.java:109);         at org.eclipse.debug.internal.ui.views.variables.VariablesViewContentPro; vider.getChildren(VariablesViewContentProvider.java:89);         at org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren(AbstractT; reeViewer.java:703);         at org.eclipse.jface.viewers.AbstractTreeViewer.isExpandable(AbstractTre; eViewer.java:1144);         at org.eclipse.jface.viewers.AbstractTreeViewer.updatePlus(AbstractTreeV; iewer.java:1597);         at org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren(AbstractT; reeViewer.java:1545);         at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct(Ab; stractTreeViewer.java:1038);         at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(Abstract; TreeViewer.java:1013);         at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(Abstract; TreeViewer.java:976);         at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(Abstract; TreeViewer.java:964);         at org.eclipse.jface.viewers.StructuredViewer$7.run(StructuredViewer.jav; a:925);         at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(Struct; uredViewer.java:863);         at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.j; ava:923);         at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.j; ava:882);         at org.eclipse.debug.internal.ui.views.variables.VariablesViewer.refresh; (VariablesViewer.java:69);         at org.eclipse.debug.internal.ui.views.variables.ToggleLogicalStructureA; ction$1.run(ToggleLogicalStructureAction.java:57);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69); ;         at org.eclipse.debug.internal.ui.views.variables.ToggleLogicalStructureA; ction.valueChanged(ToggleLogicalStructureAction.java:55);         at org.eclipse.debug.internal.ui.views.variables.ToggleLogicalStructureA; ction.run(ToggleLogicalStructureAction.java:47);         at org.eclipse.debug.ui.AbstractDebugView$3.run(AbstractDebugView.java:5; 91);         at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35);         at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.ja; va:106);         - locked <0x506d8eb0> (a org.eclipse.swt.widgets.RunnableLock);         at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363);         at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334);         at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.jav; a:253);         at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141);         at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:97; );         at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformAct; ivator.java:307);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.ja; va:256);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.ja; va:127);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.; java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces; sorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:494);         at org.eclipse.core.launcher.Main.basicRun(Main.java:185);         at org.eclipse.core.launcher.Main.run(Main.java:638);         at org.eclipse.core.launcher.Main.main(Main.java:622); ; VM Thread prio=10 tid=0x008f0468 nid=0x954 runnable; ; VM Periodic Task Thread prio=10 tid=0x00900160 nid=0x9a4 waiting on condition;         at ; org.eclipse.jdt.internal.debug.core.logicalstructures.LogicalObjectStructureInte; rfaceType$1.run(LogicalObjectStructureInterfaceType.java:119);         at org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run; (JDIThread.java:2510);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66),3
Heres a fragment of the log file of one of our tests where in maven is downloading all the jars that jetty6 needs.; ; Downloading: http://repo1.maven.org/maven2/org/eclipse/jdt/core/3.1.0/core-3.1.0.jar; 3472K downloaded; [WARNING] *** CHECKSUM FAILED - Error retrieving checksum file for org/eclipse/jdt/core/3.1.0/core-3.1.0.jar - IGNORING,3
F1; class java.util.Properies; jdt 1.3; ; when it does not have source attached some fields are displayed incorrectly; for example: keyValueSeparators,3
"I20050324; ; On the following test case:; @Ann(at| // code complete here; public class A {; }; @interface Ann {; 	String attr();; }; ; I got the following IllegalArgumentException:; java.lang.IllegalArgumentException;         at org.eclipse.jdt.core.Signature.getParameterCount(Signature.java:950);         at org.eclipse.jdt.core.Signature.getParameterTypes(Signature.java:1083);         at; org.eclipse.jdt.internal.ui.text.java.ProposalLabelProvider.appendUnboundedParameterList(ProposalLabelProvider.java:73);         at; org.eclipse.jdt.internal.ui.text.java.ProposalLabelProvider.createMethodProposalLabel(ProposalLabelProvider.java:168);         at; org.eclipse.jdt.internal.ui.text.java.ProposalLabelProvider.createLabel(ProposalLabelProvider.java:323);         at; org.eclipse.jdt.internal.ui.text.java.ResultCollector.createAnnotationAttributeReferenceProposal(ResultCollector.java:392);         at; org.eclipse.jdt.internal.ui.text.java.ResultCollector.acceptAnnotationAttributeReference(ResultCollector.java:387);         at; org.eclipse.jdt.internal.ui.text.java.ResultCollector.accept(ResultCollector.java:506);         at; org.eclipse.jdt.internal.codeassist.CompletionEngine.findAnnotationAttributes(CompletionEngine.java:1264);         at; org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(CompletionEngine.java:874);         at; org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(CompletionEngine.java:1167);         at org.eclipse.jdt.internal.core.Openable.codeComplete(Openable.java:119);         at; org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(CompilationUnit.java:300);         at; org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(CompilationUnit.java:293);         at; org.eclipse.jdt.internal.ui.text.java.JavaCompletionProcessor.internalComputeCompletionProposals(JavaCompletionProcessor.java:358);         at; org.eclipse.jdt.internal.ui.text.java.JavaCompletionProcessor.computeCompletionProposals(JavaCompletionProcessor.java:332);         at; org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:1470);         at; org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:250);         at; org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$7(CompletionProposalPopup.java:247);         at; org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:206);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69);         at; org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:201);         at; org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1319);         at; org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:183);         at; org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:82);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69);         at; org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:80);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:1003);         at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:181);         at; org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:108);         at org.eclipse.core.commands.Command.execute(Command.java:331);         at; org.eclipse.core.commands.ParameterizedCommand.execute(ParameterizedCommand.java:390);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:452);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:741);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:784);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:543);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:486);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:110);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82);         at org.eclipse.swt.widgets.Display.filterEvent(Display.java:777);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:866);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:851);         at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:879);         at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:875);         at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1182);         at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3121);         at org.eclipse.swt.widgets.Control.windowProc(Control.java:3024);         at org.eclipse.swt.widgets.Display.windowProc(Display.java:3466);         at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method);         at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1624);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2525);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1538);         at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1502);         at; org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:306);         at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143);         at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103);         at; org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228);         at; org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:338);         at; org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:151);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:324);         at org.eclipse.core.launcher.Main.invokeFramework(Main.java:268);         at org.eclipse.core.launcher.Main.basicRun(Main.java:260);         at org.eclipse.core.launcher.Main.run(Main.java:887);         at org.eclipse.core.launcher.Main.main(Main.java:871)",3
The Eclipse NLS tooling should better support the the new Eclipse string externalization pattern added in ; 3.1; along with ways to help developers with unused keys and unused property file entries. [JDT UI],4
3.0 RC2; ; 1) Create a project with two source folders (say foo and bla).; 2) in both source folders; create a package org.test.; 3) In the first source folder; create class org.test.Bla; 4) In the second source folder create class org.test.Bla; ; 5) Observe: the new class wizard accepts the creation of the second Bla class; without issueing a warning.,4
Please provide a refactoring to inline a method call.; ; Provide an option to inline *all* calls of a specific method and remove the ; method.,4
Build 20011206.; ; 1. Within the packages view of the Java Perspective; expand the JRE_LIB jar.; 2. Go to the com.sun.java.swing.plaf.motif.icons folder and expand it.; 3. Select a *.gif file and attempt to display its properties.; ; You get the following message ==> No property pages for .,4
3.1 RC4; ; Scenario is:; - create a new Java project; without any src/bin;; - create a new class X there;; - create a source folder named src into the project; the result (see attachment; 1) is that X pops out; the default package being removed from the view;; - right-click on the project and select Build Path/Use as Source Folder; the; result (see attachment 2) is that X goes back to the default package; note also; that src gets excluded from the newly (re)created root source folder.; ; I woudl suggest that some action be taken to avoid the step shown by the first; attachment. The best behavior may not be the one illustrated by attachment 2; (after all; if were creating multiple source folders; this is probably not to; keep some sources at the root). We may prefer to move existing sources to the; newly created source folder; with a user confirmation; with or without; alternative choices presented to her.; ; The most probable scenario is that the user started some development or got some; new code that has no source folder and decides she needs one. Depending on; whether she needs to part existing types into multiple folders or not; the move; all option is more or less relevant. Anyway; getting rid of package information; is probably not OK.; ; Note that the same behavior is observable when using a non default package (in; that case; the package shows up as a regular directory; containing an X.java file).,4
On the JRE tab of an Ant launch config; you can specify an alternate java ; executable. The default is listed as javaw. javaw doesnt exist in non-Win32 ; versions of Suns JDK.,4
currently; you have to select a method,4
Hi;; when a byte or a byte array is displayed in the variables view; a popup menu or tooltip  would be handy to display the content as decimal; hexadecimal; octal or character. I know this is configurable in the debug preferences but for a quick inspection of a bytes value this would be very handy.; ; Michael,4
I20030205; ; 1. Select SystemSummaryEditr; 2. Add some String for externalization; 3. Save; 4. Source -> Externalize Strings; 5. Press Next; 6. Browse for the package; 7. Select org.eclipse.ui.internal; 8. Press OK;    Observe: the Finish button remains disabled and the status line says;    Incorrect package,4
"Not sure if this is the right place for this PR but...; 	; 	In a self host environment:; 	I was writing a small java project that uses native code. But somehow; when running inside eclipse;; the DLL was not being found. Running outside eclipse worked if I put the DLL in my bin directory.; ; 	It turned out that my user.dir property was wrong (or at least not as I expected it to be).; It had the value: ; 										D:\self_hosting\0.104a\eclipse; 	And this is my development environment. Not my target (where the project is).; ; 	The workaround was to pass in some VM arguments to my .java file:; 										-Duser.dir=c:\eclipse\plugins\NativeOutput; 	so that my user.dir is my target and not my development environment.; ; 	It seems that the user.dir should be automatically set to the location of the program and not; a random (unexpected) value.; ; NOTES:; EG (5/23/2001 10:14:25 AM); 	on 1.3 we can launch a program in a particular folder.; 	we could use reflection to try this call.; 	defer; ; EG (24.07.2001 22:15:46); 	we could also provide an execution arg where the user can define the current working directory.; 	(the class path would have to be adjusted accordingly); ; 	The 1.3 call would have to be invoked via reflection so that we dont add a dependency on 1.3",4
It would be nice if there were an extension point for Organize Imports so that; plugins could contribute items and actions to the list of possible imports for a; given type.  ; ; My situation is that I have a classpath container that is populated from a set; of jars that are in a repository.  When I see an unknown type; I can look in the; repository and see if that simpleTypeName is known in the repository.  If so; I; can let the user select which type they want (there may be more than one match);; add the appropriate jar to the classpath container; and add the import for the; type to the source file.  ; ; This is very handy in situations where you know the type name but not the jar;; or where you paste code in from another location.,4
It would be nice if the Open Type dialog gave you the count of types in the ; list box that match the expression entered. It would help give a sense of the ; size of ones type library as well as be fun to watch the number go down as one ; refines an expression.; ; Gary,5
Currently the selection provided by the Call Hierarchy view simply contains a collection of the selected methods. This means that the actual call hierarchy information displayed in the view is not available to consumers.; ; I would like to have the structural information available to me because I could put it to good use. I can think of 2 ways to achieve that:; 1. Provide an ITreeSelection instead of an IStructuredSelection.; 2. Expose something similar to MethodWrapper in the selection and let it adapt to IMethod.; ; The first approach seems easier to integrate into the IDE; but the second approach could expose important information like the call direction (caller or callee mode).; ; On a related note; I think exposing the functionality provided by the subclasses of MethodWrapper (CalleeMethodWrapper; CallerMethodWrapper) would be a very good idea. To be specific; it would be nice to have an API that gives me callers and callees of a method.,5
typing dot after f.e. java.security.MessageDigest opens the list that includes ; accessors:;  access$000(MessageDigest arg0) String;  access$100(MessageDigest arg0) Provider;  access$102(MessageDigest arg0; Provider arg1) Provider;  access$200(MessageDigest arg0) int;  access$202(MessageDigest arg0; int arg1) int,5
"Build F1 + latest CVS code as of 20020528; Linux-GTK; ; 1. Bring up the launch config dialog in a new workspace; 2. Select the Remote Java Application config type; 3. Click New. The following exception is written to the log.; ; !ENTRY org.eclipse.core.resources 1 4 May 28; 2002 08:50:18.618; !MESSAGE Unhandled exception caught in event loop.; !ENTRY org.eclipse.ui 4 0 May 28; 2002 08:50:18.623; !MESSAGE -1; !STACK 0; java.lang.ArrayIndexOutOfBoundsException: -1; 	at ; org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab.handleConnectorComboModified(JavaConnectTab.java:201); 	at ; org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab$3.modifyText(JavaConnectTab.java:163); 	at ; org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:179); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:810); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795); 	at org.eclipse.swt.widgets.Combo.processModify(Combo.java:700); 	at org.eclipse.swt.widgets.Widget.processEvent(Widget.java:584); 	at org.eclipse.swt.widgets.Display.windowProc(Display.java:1731); 	at org.eclipse.swt.internal.gtk.OS.gtk_editable_delete_text(Native ; Method); 	at org.eclipse.swt.widgets.Combo.setText(Combo.java:1059); 	at ; org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab.updateConnectionFromConfig(JavaConnectTab.java:301); 	at ; org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab.initializeFrom(JavaConnectTab.java:274); 	at ; org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.initializeFrom(AbstractLaunchConfigurationTabGroup.java:78); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.setLaunchConfiguration(LaunchConfigurationDialog.java:1336); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.selectionChanged(LaunchConfigurationDialog.java:1265); 	at ; org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:147); 	at ; org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1154); 	at ; org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:903); 	at org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:342); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.handleNewAction(LaunchConfigurationDialog.java:1806); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog$ButtonActionNew.run(LaunchConfigurationDialog.java:2854); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog$1.widgetSelected(LaunchConfigurationDialog.java:2823); 	at ; org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:85); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:815); 	at ; org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1379); 	at ; org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1223); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:551); 	at org.eclipse.jface.window.Window.open(Window.java:538); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.doLastLaunchedConfig(LaunchConfigurationDialog.java:530); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.open(LaunchConfigurationDialog.java:491); 	at ; org.eclipse.debug.internal.ui.actions.OpenLaunchConfigurationsAction.run(OpenLaunchConfigurationsAction.java:133); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:590); 	at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407); 	at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361); 	at ; org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352); 	at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:815); 	at ; org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1379); 	at ; org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1223); 	at ; org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1085); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1068); 	at ; org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:432); 	at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24)",1
F2; ; - workspace with JDK 1.3.1; - now install JDK 1.4.1 and make it the default JDK using Preference->Java->;   Install JRES; ; observe: workspace doesnt rebuild.,1
20021216; open java build path page; libraries tab; expand rt.jar node; select javadoc; edit; put this in the field: http://java.sun.com/j2se/1.3/docs/api/; validate; it says that everything is fine; OK; see: nothing happens - javadoc is still (None); ; eature as if not not being there,1
"DW (8/10/01 11:00:27 AM); 	When a breakpoint is hit while doing a step; the step event may be received; 	after the breakpoint. The breakpoint has already ended (aborted) the step.; 	It looks like our model does more work than necessary to process the step; 	event.",1
"While trying to debug a class using native methods on a Windows system; we have ; found that breakpoints are simply ignored no matter how many are added or where ; they are in the code. This happens whether the native methods are actually used ; or not - simply declaring them seems to cause the problem.; ; I have a very simple HelloWorld testcase that demonstrates the problem. To run ; this; compile the c file to a dll and add the line -Djava.library.path=<path> ; to the VM arguments. When you debug the class; the debugger wont stop on the ; breakpoint and will just run the class to completion.; ; ; HelloWorld.java; ; public class HelloWorld {; 	private native void print();; ; 	public static void main(String[] args) {; 		new HelloWorld().print();; 	}; 	; 	static {; 		System.loadLibrary(HelloWorld);; 	}; }; ; ; HelloWorld.h; ; /* DO NOT EDIT THIS FILE - it is machine generated */; #include <jni.h>; /* Header for class HelloWorld */; ; #ifndef _Included_HelloWorld; #define _Included_HelloWorld; #ifdef __cplusplus; extern C {; #endif; /*;  * Class:     HelloWorld;  * Method:    print;  * Signature: ()V;  */; JNIEXPORT void JNICALL Java_HelloWorld_print;   (JNIEnv *; jobject);; ; #ifdef __cplusplus; }; #endif; #endif; ; ; HelloWorld.c; ; #include <jni.h>; #include <stdio.h>; #include HelloWorld.h; ; JNIEXPORT void JNICALL; Java_HelloWorld_print(JNIEnv *env; jobject obj); {; 	printf(Hello World);; 	return;; }",1
TestCase (source follows):; Set a suspendVM modification watchpoint on myString; Set a breakpoint on line 30; ; After hitting the watchpoint; resume the VM.; ; You hit the breakpoint at line 30; but you get the top stack frame as <not ; responding> and it seems to be the stack frame from hitting the watchpoint.,1
"The Junit Workbench Launcher does not work due to a NullPointerException trying ; to start the Launcher.; ; I am using org.eclipse.pde.junit dated 20020213.; ; STEPS; 1) Select any Junit test that requires the workbench; 2) Select Run->JUnit Workbench; ; Internal Error ; ; java.lang.NullPointerException; 	at org.eclipse.debug.internal.core.Launcher.launch(Launcher.java:104); 	at org.eclipse.debug.internal.ui.actions.LaunchSelectionAction$1.run; (LaunchSelectionAction.java:67); 	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56); 	at org.eclipse.debug.internal.ui.actions.LaunchSelectionAction.run; (LaunchSelectionAction.java:63); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:466); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection; (ActionContributionItem.java:407); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent; (ActionContributionItem.java:361); 	at org.eclipse.jface.action.ActionContributionItem.access$0; (ActionContributionItem.java:352); 	at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent; (ActionContributionItem.java:47); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1420); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:692); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:675); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:777); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:151); 	at org.eclipse.core.launcher.Main.run(Main.java:502); 	at org.eclipse.core.launcher.Main.main(Main.java:362)",1
If the selection cant be resolved an exception occurs.; Test Case:; - open Java editor; - select something that does not resolve (e.g. new); ; Note: F3 works i.e. does nothing (no beep; no status info),1
"I tried to search for all references to Action.setImageDescriptor() in the ; workspace.  The search appeared to complete; but then it showed an error ; message.  After pressing OK; I got at least partial search results in the ; search view.; ; I tried the search again with the same results.; ; The following error was logged:; ; java.lang.reflect.InvocationTargetException: java.lang.NullPointerException; 	at org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getMethods; (SourceTypeBinding.java(Compiled Code)); 	at ; org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getExactConstructor; (SourceTypeBinding.java:353); 	at org.eclipse.jdt.internal.compiler.lookup.BlockScope.getConstructor; (BlockScope.java:923); 	at org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.resolve; (ExplicitConstructorCall.java:243); 	at ; org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.checkName; (ConstructorDeclaration.java:126); 	at ; org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve; (AbstractMethodDeclaration.java:258); 	at org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.resolve; (ConstructorDeclaration.java:322); 	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve; (TypeDeclaration.java:726); 	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve; (TypeDeclaration.java:754); 	at ; org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve; (CompilationUnitDeclaration.java:188); 	at ; org.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatchesInCo; mpilationUnit(MatchingOpenable.java:282); 	at ; org.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatches; (MatchingOpenable.java:144); 	at ; org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches; (MatchLocator.java:1092); 	at ; org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches; (MatchLocator.java:426); 	at org.eclipse.jdt.core.search.SearchEngine.search; (SearchEngine.java:344); 	at org.eclipse.jdt.core.search.SearchEngine.search; (SearchEngine.java:290); 	at org.eclipse.jdt.internal.ui.search.JavaSearchOperation.execute; (JavaSearchOperation.java:79); 	at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run; (WorkspaceModifyOperation.java:64); 	at org.eclipse.core.internal.resources.Workspace.run; (Workspace.java:1232); 	at org.eclipse.ui.actions.WorkspaceModifyOperation.run; (WorkspaceModifyOperation.java:78); 	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run; (ModalContext.java:98); ; (Build 20020125)",1
20020123 with the latest plugins isnt showing new breakpoints in the; breakpoints view. I have to close the view and reopen it for my breakpoints to; appear. Im using only simple line breakpoints.,1
"20020521; 1. have a workspace with some projects; including a closed one.; 2. open javadoc export wizard; ; walkback printed to log:; ; Java Model Exception: Java Model Status [Test does not exist.]; 	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException; (JavaElement.java:501); 	at org.eclipse.jdt.internal.core.JavaProject.openWhenClosed; (JavaProject.java:1625); 	at org.eclipse.jdt.internal.core.JavaElement.openHierarchy; (JavaElement.java:522); 	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo; (JavaElement.java(Compiled Code)); 	at org.eclipse.jdt.internal.core.JavaElement.getChildren; (JavaElement.java:266); 	at org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoots; (JavaProject.java:1096); 	at org.eclipse.jdt.internal.core.JavaProject.getPackageFragments; (JavaProject.java:1145); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocProjectContentProvider.getEleme; nts(JavadocProjectContentProvider.java:54); 	at org.eclipse.jface.viewers.StructuredViewer.getRawChildren; (StructuredViewer.java:397); 	at org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren; (AbstractTreeViewer.java:570); 	at org.eclipse.jface.viewers.StructuredViewer.getFilteredChildren; (StructuredViewer.java:346); 	at org.eclipse.jface.viewers.StructuredViewer.getSortedChildren; (StructuredViewer.java:447); 	at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren; (AbstractTreeViewer.java:241); 	at org.eclipse.jface.viewers.AbstractTreeViewer$2.run; (AbstractTreeViewer.java:646); 	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection; (StructuredViewer.java:688); 	at org.eclipse.jface.viewers.CheckboxTreeViewer.preservingSelection; (CheckboxTreeViewer.java:324); 	at org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged; (AbstractTreeViewer.java:638); 	at org.eclipse.jface.viewers.ContentViewer.setInput; (ContentViewer.java:234); 	at org.eclipse.jface.viewers.StructuredViewer.setInput; (StructuredViewer.java:875); 	at ; org.eclipse.jdt.internal.ui.jarpackager.CheckboxTreeAndListGroup.initialize; (CheckboxTreeAndListGroup.java:433); 	at ; org.eclipse.jdt.internal.ui.jarpackager.CheckboxTreeAndListGroup.createContents; (CheckboxTreeAndListGroup.java:220); 	at ; org.eclipse.jdt.internal.ui.jarpackager.CheckboxTreeAndListGroup.<init>; (CheckboxTreeAndListGroup.java:90); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocTreeWizardPage.createInputGroup; (JavadocTreeWizardPage.java:159); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocTreeWizardPage.createControl; (JavadocTreeWizardPage.java:138); 	at org.eclipse.jface.wizard.Wizard.createPageControls(Wizard.java:164); 	at org.eclipse.jface.wizard.WizardDialog.createPageControls; (WizardDialog.java:505); 	at org.eclipse.jface.wizard.WizardDialog.setWizard; (WizardDialog.java:841); 	at org.eclipse.jface.wizard.WizardDialog.showPage(WizardDialog.java:875); 	at org.eclipse.jface.wizard.WizardDialog.nextPressed; (WizardDialog.java:653); 	at org.eclipse.jface.wizard.WizardDialog.buttonPressed; (WizardDialog.java:308); 	at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:398); 	at org.eclipse.swt.widgets.TypedListener.handleEvent; (TypedListener.java:85); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:551); 	at org.eclipse.jface.window.Window.open(Window.java:538); 	at org.eclipse.ui.actions.ExportResourcesAction.run; (ExportResourcesAction.java:80); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:590); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection; (ActionContributionItem.java:407); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent; (ActionContributionItem.java:361); 	at org.eclipse.jface.action.ActionContributionItem.access$0; (ActionContributionItem.java:352); 	at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent; (ActionContributionItem.java:47); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1085); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1068); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:739); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:200); 	at org.eclipse.core.launcher.Main.run(Main.java:643); 	at org.eclipse.core.launcher.Main.main(Main.java:476)",1
1) select a CU or type; 2) compare with local history; ; ->there is no support to perform a structure compare.,2
Is there some way to get the Java formatting in the details area when a java ; value is being displayed? The debug model presentation specifies a source ; viewer configuration to do code assist; but it does not seem to have a way to ; do the color coding/formatting.,2
"Eclipse 3.0M7; ; Using the same example as in Bug 52344; setting the editor to use space for tab; and using the Default-settings for the formatter. ; ; Reformatting this code: ; ; public class Test1 {;     /**;      *     <ul>;     <li>1. K = INT( X / 100 );;     <li>2. M = 15 + INT(( 3*K+3 ) / 4 ) - INT(( 8*K+13 ) / 25 );;     <li>3. S = 2 - INT(( 3*K+3 ) / 4 );;     <li>4. A = MOD( X; 19 );;     <li>5. D = MOD( 19*A+M; 30 );;     <li>6. R = INT( D / 29 ) + ( INT( D / 28 ) - INT( D / 29 )) * INT( A / 11 );;     <li>7. OG = 21 + D - R; - M rzdatum des Ostervollmonds (= 14. Tag des ersten; Monats im Mondkalender; genannt Nisanu);     <li>8. SZ = 7 - MOD( X + INT( X / 4 ) + S; 7 ); - Datum des 1. Sonntags im M rz;     <li>9. OE = 7 - MOD( OG - SZ; 7 );;     </ul>;      */;     public void foo() {;     }; }; ; and immediately pressing undo yields this: ; ; public class Test1 {;     /**;      *     <ul>;     <li>1. K = INT( X / 100 );;     <li>2. M = 15 + INT(( 3*K+3 ) / 4 ) - INT(( 8*K+13 ) / 25 );;     <li>3. S = 2 - INT(( 3*K+3 ) / 4 );;     <li>4. A = MOD( X; 19 );;     <li>5. D = MOD( 19*A+M; 30 );;     <li>6. R = INT( D / 29 ) + ( INT( D / 28 ) - INT( D / 29 )) * INT( A / 11 );;     <li>7. OG = 21 + D - R; - M rzdatum des Ostervollmonds (= 14. Tag des ersten; Monats im Mondkalender; genannt Nisanu);     <li>8. SZ = 7 - MOD( X + INT( X / 4 ) + S; 7 ); - Datum des 1. Sonntags im M rz;     <li>9. OE = 7 - MOD( OG - SZ; 7 );;     </ul>;      */;     public void foo() {;     }; }/; 	public void foo() {; 	}; }; ; Yes; settings the editor and the formatter to using different things for a tab; is probably useless; but I dont think it should break code when doing stupid; things :-)",2
Reproduced on 2 different machines; one running RHEL 3.0 and one running SLES 9 ; Beta 6.; ; IES Build 200405060200; ; To reproduce:; ; Make sure you are in a german locale and have the 3.0 NL fragments installed so ; that menus; etc. are in german.  Create a new java project and switch to the ; java perspective.  Then; create a new class.  When you click finish to create ; the class; it will fail and a dialog will pop up complaining about an invalid ; thread access.  No special german characters are required to produce the bug.,2
"During the course of new Java project wizard; you are called upon to specify ; source root and build output destination. However there is no support to browse ; to locations for those. Users who are migrating existing projects from other ; IDEs may have their project folder structures already set; and will want the ; browse-to capability. ; ; To Reproduce:; ; 1.	Open WSWB; 2.	Create a new Java Project; 3.	After naming the project hit next; 4.	The next window allows you to specify the source and if you select use ; source folders contained in the project notice you have no browse support to ; select an existing project folder.; ; Expected Behaviour:; ; The user should be able to browse to an existing project folder.",2
OSX 10.2.6; Eclipse I20030916; ; Doing a surround with try catch:; ; !ENTRY org.eclipse.jdt.ui 4 10004 Sep 16; 2003 15:13:55.722; !MESSAGE Unrecoverable error occurred while performing the refactoring.; !STACK 0; ChangeAbortException: org.eclipse.jdt.internal.corext.refactoring.base.ChangeAbortException;         at ; org.eclipse.jdt.internal.ui.refactoring.changes.AbortChangeExceptionHandler.handle(AbortChangeExcept; ionHandler.java:28);         at org.eclipse.jdt.internal.corext.refactoring.base.Change.handleException(Change.java:108);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.AbstractTextChange.perform(AbstractTextChange.jav; a:201);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.TextFileChange.perform(TextFileChange.java:208);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:173; );         at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34);         at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366);         at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1571);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1588);         at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2963);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation; .java:183);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:151);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRu; nnableContext.java:113);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableC; ontext.java:80);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:126; );         at ; org.eclipse.jdt.ui.actions.SurroundWithTryCatchAction.run(SurroundWithTryCatchAction.java:127);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:196);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:842);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:529);         at org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:482);         at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:454);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82);         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1027);         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2180);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2037);         at org.eclipse.ui.internal.Workbench.run(Workbench.java:2020);         at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858);         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:324);         at org.eclipse.core.launcher.Main.basicRun(Main.java:295);         at org.eclipse.core.launcher.Main.run(Main.java:751);         at org.eclipse.core.launcher.Main.main(Main.java:587); Exception wrapped by ChangeAbortException: org.eclipse.jface.text.Assert$AssertionFailedException: ; Assertion failed: ;         at org.eclipse.jface.text.Assert.isTrue(Assert.java:175);         at org.eclipse.jface.text.Assert.isTrue(Assert.java:160);         at ; org.eclipse.jdt.internal.ui.text.link.LinkedPositionManager.getPositions(LinkedPositionManager.java:427);         at ; org.eclipse.jdt.internal.ui.text.link.LinkedPositionManager.documentAboutToBeChanged(LinkedPosition; Manager.java:477);         at ; org.eclipse.jface.text.AbstractDocument.fireDocumentAboutToBeChanged(AbstractDocument.java:549);         at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:956);         at ; org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedDocument.replace(PartiallySynchronizedDocum; ent.java:61);         at org.eclipse.jdt.internal.corext.textmanipulation.TextEdit.performReplace(TextEdit.java:401);         at org.eclipse.jdt.internal.corext.textmanipulation.SimpleTextEdit.perform(SimpleTextEdit.java:80);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:183);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.executeDo(EditProcessor.java:163);         at ; org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.performEdits(EditProcessor.java:121);         at ; org.eclipse.jdt.internal.corext.textmanipulation.TextBufferEditor.performEdits(TextBufferEditor.java:55);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.AbstractTextChange.perform(AbstractTextChange.jav; a:199);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.TextFileChange.perform(TextFileChange.java:208);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:173; );         at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34);         at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366);         at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1571);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1588);         at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2963);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation; .java:183);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:151);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRu; nnableContext.java:113);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableC; ontext.java:80);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:126; );         at ; org.eclipse.jdt.ui.actions.SurroundWithTryCatchAction.run(SurroundWithTryCatchAction.java:127);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:196);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:842);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:529);         at org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:482);         at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:454);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82);         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1027);         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2180);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2037);         at org.eclipse.ui.internal.Workbench.run(Workbench.java:2020);         at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858);         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:324);         at org.eclipse.core.launcher.Main.basicRun(Main.java:295);         at org.eclipse.core.launcher.Main.run(Main.java:751);         at org.eclipse.core.launcher.Main.main(Main.java:587),2
"package p;; class A {; 	void m(){; 		Object u= /*[*/new Object(){}/*]*/;; 	}; }; is extracted to a temp with no type",2
v20030115 + HEAD of (jdt.launching; jdt.launching.macosx):; ; Cannot launch from within Eclipse; cannot open JRE pref pag:; ; ; !ENTRY org.eclipse.ui 4 0 Jan 20; 2003 11:46:07.774; !MESSAGE null argument:; !STACK 0; org.eclipse.core.internal.runtime.AssertionFailedException: null argument:;         at org.eclipse.core.internal.runtime.Assert.isNotNull(Assert.java:78);         at org.eclipse.core.internal.runtime.Assert.isNotNull(Assert.java:66);         at org.eclipse.core.runtime.Path.initialize(Path.java:470);         at org.eclipse.core.runtime.Path.<init>(Path.java:98);         at ; org.eclipse.jdt.internal.launching.LaunchingPlugin$VMChanges.getConatinerId(Launchi; ngPlugin.java:132);         at ; org.eclipse.jdt.internal.launching.LaunchingPlugin$VMChanges.vmChanged(Launching; Plugin.java:157);         at ; org.eclipse.jdt.internal.launching.LaunchingPlugin.vmChanged(LaunchingPlugin.java:6; 86);         at org.eclipse.jdt.launching.JavaRuntime.fireVMChanged(JavaRuntime.java:1680);         at ; org.eclipse.jdt.launching.AbstractVMInstall.setInstallLocation(AbstractVMInstall.java:94);         at ; org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType.doCreateVMInstall(Mac; OSXVMInstallType.java:55);         at ; org.eclipse.jdt.launching.AbstractVMInstallType.createVMInstall(AbstractVMInstallType.j; ava:92);         at ; org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType.detectInstallLocation(M; acOSXVMInstallType.java:108);         at ; org.eclipse.jdt.launching.JavaRuntime.detectEclipseRuntime(JavaRuntime.java:1341);         at org.eclipse.jdt.launching.JavaRuntime.detectDefaultVM(JavaRuntime.java:1375);         at ; org.eclipse.jdt.launching.JavaRuntime.detectAndSaveVMDefinitions(JavaRuntime.java:; 1442);         at ; org.eclipse.jdt.launching.JavaRuntime.initializeVMConfiguration(JavaRuntime.java:1260; );         at org.eclipse.jdt.launching.JavaRuntime.initializeVMTypes(JavaRuntime.java:240);         at org.eclipse.jdt.launching.JavaRuntime.getVMInstallTypes(JavaRuntime.java:404);         at ; org.eclipse.jdt.internal.debug.ui.launcher.VMPreferencePage.createContents(VMPrefere; ncePage.java:162);         at ; org.eclipse.jface.preference.PreferencePage.createControl(PreferencePage.java:209);         at ; org.eclipse.jface.preference.PreferenceDialog.showPage(PreferenceDialog.java:963);         at org.eclipse.jface.preference.PreferenceDialog$7.run(PreferenceDialog.java:456);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65);         at ; org.eclipse.jface.preference.PreferenceDialog$6.widgetSelected(PreferenceDialog.java:; 449);         at ; org.eclipse.jface.util.OpenStrategy.firePostSelectionEvent(OpenStrategy.java:192);         at org.eclipse.jface.util.OpenStrategy.access$4(OpenStrategy.java:187);         at org.eclipse.jface.util.OpenStrategy$3.run(OpenStrategy.java:327);         at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31);         at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:94);         at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1137);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1027);         at org.eclipse.jface.window.Window.runEventLoop(Window.java:561);         at org.eclipse.jface.window.Window.open(Window.java:541);         at ; org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:47);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:804);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributio; nItem.java:422);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionIte; m.java:374);         at ; org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:36; 8);         at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContri; butionItem.java:69);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77);         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:634);         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1252);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1009);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1467);         at org.eclipse.ui.internal.Workbench.run(Workbench.java:1450);         at ; org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845);         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462);         at java.lang.reflect.Method.invoke(Native Method);         at org.eclipse.core.launcher.Main.basicRun(Main.java:247);         at org.eclipse.core.launcher.Main.run(Main.java:703);         at org.eclipse.core.launcher.Main.main(Main.java:539);         at java.lang.reflect.Method.invoke(Native Method);         at apple.launcher.LaunchRunner.run(LaunchRunner.java:88);         at apple.launcher.LaunchRunner.callMain(LaunchRunner.java:50);         at ; apple.launcher.JavaApplicationLauncher.launch(JavaApplicationLauncher.java:52),2
"Syntax highlighting deactivated after saving editor. Note: This only happened ; in the visible editor; all others were unaffected. Highlighting still shows in ; Editor preference page. Unable to reproduce (sorry). Here is log.; ; !MESSAGE Error logged from Debug Core: ; !STACK 1; org.eclipse.core.internal.resources.ResourceException: The resource tree is ; locked for modifications.; 	at org.eclipse.core.internal.resources.Workspace.beginOperation; (Workspace.java:116); 	at org.eclipse.core.internal.resources.Workspace.run; (Workspace.java:1377); 	at org.eclipse.debug.internal.core.BreakpointManager.addBreakpoints; (BreakpointManager.java:412); 	at org.eclipse.debug.internal.core.BreakpointManager.loadBreakpoints; (BreakpointManager.java:150); 	at ; org.eclipse.debug.internal.core.BreakpointManager.initializeBreakpoints; (BreakpointManager.java:277); 	at org.eclipse.debug.internal.core.BreakpointManager.getBreakpoints0; (BreakpointManager.java:248); 	at org.eclipse.debug.internal.core.BreakpointManager.getBreakpoints; (BreakpointManager.java:257); 	at org.eclipse.jdt.internal.debug.ui.JavaModelListener.elementChanged; (JavaModelListener.java:48); 	at org.eclipse.jdt.internal.core.JavaModelManager$3.run; (JavaModelManager.java:710); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:839); 	at org.eclipse.core.runtime.Platform.run(Platform.java:413); 	at org.eclipse.jdt.internal.core.JavaModelManager.fire; (JavaModelManager.java:705); 	at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged; (DeltaProcessor.java:1448); 	at org.eclipse.core.internal.events.NotificationManager$1.run; (NotificationManager.java:128); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:839); 	at org.eclipse.core.runtime.Platform.run(Platform.java:413); 	at org.eclipse.core.internal.events.NotificationManager.notify; (NotificationManager.java:143); 	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges; (NotificationManager.java:67); 	at org.eclipse.core.internal.resources.Workspace.broadcastChanges; (Workspace.java:133); 	at org.eclipse.core.internal.resources.Workspace.endOperation; (Workspace.java:753); 	at org.eclipse.core.internal.resources.Workspace.run; (Workspace.java:1383); 	at org.eclipse.ui.actions.WorkspaceModifyOperation.run; (WorkspaceModifyOperation.java:78); 	at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation; (AbstractTextEditor.java:2578); 	at ; org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperatio; n(CompilationUnitEditor.java:689); 	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave; (CompilationUnitEditor.java:739); 	at org.eclipse.ui.internal.EditorManager$11.run(EditorManager.java:1011); 	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:880); 	at org.eclipse.jface.operation.ModalContext.runInCurrentThread; (ModalContext.java:299); 	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249); 	at org.eclipse.jface.window.ApplicationWindow$1.run; (ApplicationWindow.java:394); 	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:66); 	at org.eclipse.jface.window.ApplicationWindow.run; (ApplicationWindow.java:391); 	at org.eclipse.ui.internal.WorkbenchWindow.run; (WorkbenchWindow.java:1119); 	at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation; (EditorManager.java:886); 	at org.eclipse.ui.internal.EditorManager.saveEditor; (EditorManager.java:1016); 	at org.eclipse.ui.internal.WorkbenchPage.saveEditor; (WorkbenchPage.java:2047); 	at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:32); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:749); 	at ; org.eclipse.ui.internal.registry.AcceleratorScope$AcceleratorAction.run; (AcceleratorScope.java:289); 	at org.eclipse.ui.internal.registry.AcceleratorScope.processKey; (AcceleratorScope.java:249); 	at org.eclipse.ui.internal.KeyBindingMenu$1.keyPressed; (KeyBindingMenu.java:54); 	at org.eclipse.ui.internal.KeyTable.handleEvent(KeyTable.java:75); 	at org.eclipse.ui.internal.KeyTable$3.handleEvent(KeyTable.java:116); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1623); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1369); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1360); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1343); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:775); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke; (NativeMethodAccessorImpl.java:42); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke; (DelegatingMethodAccessorImpl.java:28); 	at java.lang.reflect.Method.invoke(Method.java:327); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:247); 	at org.eclipse.core.launcher.Main.run(Main.java:703); 	at org.eclipse.core.launcher.Main.main(Main.java:539); !ENTRY org.eclipse.core.resources 1 4 Oct 14; 2002 17:05:21.535; !MESSAGE The resource tree is locked for modifications.; ; >20021009 with plugin-export 20021009-20021014.3; JRT.",2
RC1; J9; ; If a breakpoint is restricted for two different instance; the breakpoint is; effectif only for the last edited; and no error message reports the problem.; ; 1. create the following compilation unit : ; ; public class TestLineBreakpoint {;   public static void main(String[] args) {;     new Thread(new Runnable() {;       public void run() {;         new TestLineBreakpoint().foo();;       };     }).start();;     new TestLineBreakpoint().foo();;   };   public void foo() {;     int i= 0;;     while (1 == 1) {;       i++;  // <-- breakpoint here;     };   }; }; ; 2. Launch the program in debug mode.; 3. When the thread are suspended; restrict the breakpoint for the two this; variable.; 4. Resume the threads.; Only one off the two thread stop to the breakpoint.; ; We should warn the user of this behavior.,2
OSX 10.2.6; Eclipse I20030916; ; Doing a surround with try catch:; ; !ENTRY org.eclipse.jdt.ui 4 10004 Sep 16; 2003 15:13:55.722; !MESSAGE Unrecoverable error occurred while performing the refactoring.; !STACK 0; ChangeAbortException: org.eclipse.jdt.internal.corext.refactoring.base.ChangeAbortException;         at ; org.eclipse.jdt.internal.ui.refactoring.changes.AbortChangeExceptionHandler.handle(AbortChangeExcept; ionHandler.java:28);         at org.eclipse.jdt.internal.corext.refactoring.base.Change.handleException(Change.java:108);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.AbstractTextChange.perform(AbstractTextChange.jav; a:201);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.TextFileChange.perform(TextFileChange.java:208);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:173; );         at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34);         at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366);         at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1571);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1588);         at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2963);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation; .java:183);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:151);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRu; nnableContext.java:113);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableC; ontext.java:80);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:126; );         at ; org.eclipse.jdt.ui.actions.SurroundWithTryCatchAction.run(SurroundWithTryCatchAction.java:127);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:196);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:842);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:529);         at org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:482);         at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:454);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82);         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1027);         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2180);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2037);         at org.eclipse.ui.internal.Workbench.run(Workbench.java:2020);         at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858);         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:324);         at org.eclipse.core.launcher.Main.basicRun(Main.java:295);         at org.eclipse.core.launcher.Main.run(Main.java:751);         at org.eclipse.core.launcher.Main.main(Main.java:587); Exception wrapped by ChangeAbortException: org.eclipse.jface.text.Assert$AssertionFailedException: ; Assertion failed: ;         at org.eclipse.jface.text.Assert.isTrue(Assert.java:175);         at org.eclipse.jface.text.Assert.isTrue(Assert.java:160);         at ; org.eclipse.jdt.internal.ui.text.link.LinkedPositionManager.getPositions(LinkedPositionManager.java:427);         at ; org.eclipse.jdt.internal.ui.text.link.LinkedPositionManager.documentAboutToBeChanged(LinkedPosition; Manager.java:477);         at ; org.eclipse.jface.text.AbstractDocument.fireDocumentAboutToBeChanged(AbstractDocument.java:549);         at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:956);         at ; org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedDocument.replace(PartiallySynchronizedDocum; ent.java:61);         at org.eclipse.jdt.internal.corext.textmanipulation.TextEdit.performReplace(TextEdit.java:401);         at org.eclipse.jdt.internal.corext.textmanipulation.SimpleTextEdit.perform(SimpleTextEdit.java:80);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:183);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.executeDo(EditProcessor.java:163);         at ; org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.performEdits(EditProcessor.java:121);         at ; org.eclipse.jdt.internal.corext.textmanipulation.TextBufferEditor.performEdits(TextBufferEditor.java:55);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.AbstractTextChange.perform(AbstractTextChange.jav; a:199);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.TextFileChange.perform(TextFileChange.java:208);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:173; );         at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34);         at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366);         at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1571);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1588);         at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2963);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation; .java:183);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:151);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRu; nnableContext.java:113);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableC; ontext.java:80);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:126; );         at ; org.eclipse.jdt.ui.actions.SurroundWithTryCatchAction.run(SurroundWithTryCatchAction.java:127);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:196);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:842);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:529);         at org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:482);         at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:454);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82);         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1027);         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2180);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2037);         at org.eclipse.ui.internal.Workbench.run(Workbench.java:2020);         at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858);         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:324);         at org.eclipse.core.launcher.Main.basicRun(Main.java:295);         at org.eclipse.core.launcher.Main.run(Main.java:751);         at org.eclipse.core.launcher.Main.main(Main.java:587),2
1) Copy and paste junit.ui.; 2) Observe: the resulting package is named ui. It should be something like;    copy.of.junit.ui or junit.ui.copy.of.;    Also compile errors are introduced as the CUs still expect the package name;    to be junit.ui.; 3) Paste again.;    Theres a new folder (not package) called Copy of ui.;    It should remain a package and have package-like names.,2
Create a launch configuration; Test1.; Exit Eclipse.; Restart Eclipse; The JRE entry is removed from the JRE installed list; REalize the launch configuration dialog.; Select Test1.; It is enabled for debug (with no JRE entry); but hitting the button gives you ; the error that the JRE could not be found.; ; As well; any history items do not report the error of the missing ; JRE...clicking on them has no noticeable effect.,2
When a new launch config is created and a project is selected then the; entire project is searched for a main and the first one (?) is picked; and shown to the user. This random picking of a main is costly ; for large projects and we should not do this. We should only pick; the selection when a Compilation; type; classfile is selected.,2
I2002-12-17; ; Using the Ctrl Key to activate the source hover interfere with MacOS X way of; bringing up the context menu (which is therefore not available in the JDT editor),2
"I20050219-1500; ; Found the following while importing Organize Import preferences from the; Organize Import preference page.; ; java.lang.ClassCastException; 	at; org.eclipse.jdt.internal.ui.preferences.ImportOrganizeConfigurationBlock$ImportOrganizeLabelProvider.getText(ImportOrganizeConfigurationBlock.java:115); 	at; org.eclipse.jface.viewers.StructuredViewer.buildLabel(StructuredViewer.java:1730); 	at org.eclipse.jface.viewers.TableViewer.doUpdateItem(TableViewer.java:421); 	at; org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:352); 	at; org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1015); 	at org.eclipse.core.runtime.Platform.run(Platform.java:757); 	at; org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:1655); 	at org.eclipse.jface.viewers.TableViewer.internalRefreshAll(TableViewer.java:804); 	at org.eclipse.jface.viewers.TableViewer.internalRefresh(TableViewer.java:710); 	at org.eclipse.jface.viewers.TableViewer.internalRefresh(TableViewer.java:699); 	at org.eclipse.jface.viewers.StructuredViewer$7.run(StructuredViewer.java:1172); 	at; org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1109); 	at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1170); 	at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1129); 	at; org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField.setElements(ListDialogField.java:549); 	at; org.eclipse.jdt.internal.ui.preferences.ImportOrganizeConfigurationBlock.doButtonPressed(ImportOrganizeConfigurationBlock.java:281); 	at; org.eclipse.jdt.internal.ui.preferences.ImportOrganizeConfigurationBlock.access$0(ImportOrganizeConfigurationBlock.java:250); 	at; org.eclipse.jdt.internal.ui.preferences.ImportOrganizeConfigurationBlock$ImportOrganizeAdapter.customButtonPressed(ImportOrganizeConfigurationBlock.java:135); 	at; org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField.buttonPressed(ListDialogField.java:202); 	at; org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField.doButtonSelected(ListDialogField.java:450); 	at; org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField.access$0(ListDialogField.java:446); 	at; org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField$2.widgetSelected(ListDialogField.java:413); 	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2908); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2541); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:718); 	at org.eclipse.jface.window.Window.open(Window.java:696); 	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:66); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:1003); 	at; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:557); 	at; org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:507); 	at; org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:421); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2908); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2541); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1612); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1578); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:293); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144); 	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102); 	at; org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:333); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:150); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39); 	at; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25); 	at java.lang.reflect.Method.invoke(Method.java:324); 	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:268); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:260); 	at org.eclipse.core.launcher.Main.run(Main.java:887); 	at org.eclipse.core.launcher.Main.main(Main.java:871)",2
"Using attached InnerAnon source; place a breakpoint at line 13.; Select this in the variables view; In the detail pane; display hasMoreElements(); ; Get error dialog claiming an NPE (correct) but we are reporting the ; InvocationException in the log (I dont believe we should be logging this?); ; <log-entry date=Wed Apr 10 11:19:09 CDT 2002>;   <status;      plugin-id=org.eclipse.jdt.debug.ui;      severity=ERROR;      message=Internal Error;      code=150>;     <exception;        message=null;        trace=; com.sun.jdi.InvocationException; 	at org.eclipse.jdi.internal.ObjectReferenceImpl.invokeMethod; (ObjectReferenceImpl.java:327); 	at org.eclipse.jdt.internal.debug.core.model.JDIThread.invokeMethod; (JDIThread.java:619); 	at org.eclipse.jdt.internal.debug.core.model.JDIObjectValue.sendMessage; (JDIObjectValue.java:73); 	at ; org.eclipse.jdt.internal.debug.eval.model.EvaluationObject.sendMessage; (EvaluationObject.java:58); 	at ; org.eclipse.jdt.internal.debug.eval.ast.instructions.SendMessage.execute; (SendMessage.java:48); 	at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute; (Interpreter.java:32); 	at ; org.eclipse.jdt.internal.debug.eval.ast.instructions.InstructionSequence.evaluat; e(InstructionSequence.java:43); 	at ; org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$2.run; (ASTEvaluationEngine.java:210); 	at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation; (JDIThread.java:542); 	at ; org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$EvaluationThr; ead.doEvaluation(ASTEvaluationEngine.java:215); 	at ; org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$1.run; (ASTEvaluationEngine.java:175); 	at java.lang.Thread.run(Thread.java:512); >;     </exception>;   </status>; </log-entry>",2
I got a NPE on this code; IStatus validation= JavaConventions.validateClasspath(fJavaProject; ; newClasspath; fOutputLocation);; if (!validation.matches(IStatus.ERROR)) {; ; On debugging I saw that JavaModelStatus.fChildren is null.; Cant see how that happens; but it was.,2
"Do the following to reproduce the problem:; 1.  Define a Java project.; 2.  Import the attached file into the project.  (Ive also gotten the error by; copying and pasting the file.); ; I get the following error:; java.lang.StackOverflowError; 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.computePriority(CompilationR; esult.java:97); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:220); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230)  etc...; ; I am using a 2.0 build of Eclipse.  This looks alot like bug #21230.",2
- create this class X.;   <----------------------------->;   public class X {;      public class Y extends X {};      public class Z extends Y {};   };   <----------------------------->; - do a build.; ; there is an error : Cannot use this in a static context; ; same test case with;   javac 1.3 : OK;   javac 1.2.2 :;      X.java:2: No constructor matching X() found in class X.;              public class Y extends X {;                           ^;      X.java:5: Cant reference this before the superclass constructor has been ; called.;              public class Z extends Y {;                           ^;      2 errors,2
3.0RC3; ; With default settings:; - enable Mark Occurences; - perform a local search on a local variable with many occurences; - step through the search results; -> hits change between Occurences and Search Result background colors,2
"After creating a Javadoc documentation using the Generate Javadoc... wizard; ; with the option Open generated index file in browser activated; the index ; page doesnt show up and an exception is logged (see below).; ; When the option Preferences > Help > Always use external browsers is ; activated; the index page shows up correctly in the browser.; ; Thus; it may be that the exception occurs because the Javadoc wizard is open ; and because it is a modal dialog; it prevents the internal browser window from ; being opened.; ; Heres the exception:; !ENTRY org.eclipse.core.runtime 4 2 Apr 02; 2004 21:32:08.78; !MESSAGE Problems occurred when invoking code from plug-; in: org.eclipse.core.runtime.; !STACK 0; org.eclipse.swt.SWTException: Invalid thread access; 	at org.eclipse.swt.SWT.error(SWT.java:2625); 	at org.eclipse.swt.SWT.error(SWT.java:2555); 	at org.eclipse.swt.widgets.Widget.error(Widget.java:354); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:245); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:236); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:189); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:127); 	at org.eclipse.help.ui.internal.util.ErrorUtil.displayErrorDialog; (ErrorUtil.java:48); 	at org.eclipse.help.ui.internal.util.ErrorUtil.displayError; (ErrorUtil.java:23); 	at org.eclipse.help.internal.base.HelpDisplay.displayHelpURL; (HelpDisplay.java:169); 	at org.eclipse.help.internal.base.HelpDisplay.displayHelpResource; (HelpDisplay.java:88); 	at org.eclipse.help.ui.internal.DefaultHelpUI.displayHelpResource; (DefaultHelpUI.java:56); 	at org.eclipse.ui.help.WorkbenchHelp.displayHelpResource; (WorkbenchHelp.java:264); 	at org.eclipse.jdt.internal.ui.actions.OpenBrowserUtil$1.run; (OpenBrowserUtil.java:31); 	at org.eclipse.swt.custom.BusyIndicator.showWhile; (BusyIndicator.java:51); 	at org.eclipse.jdt.internal.ui.actions.OpenBrowserUtil.open; (OpenBrowserUtil.java:29); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard.spawnInBrowser; (JavadocWizard.java:502); 	at org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard.access$3; (JavadocWizard.java:497); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard$JavadocDebugEventListen; er.handleDebugEvents(JavadocWizard.java:525); 	at org.eclipse.debug.core.DebugPlugin$EventNotifier.run; (DebugPlugin.java:910); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:607); 	at org.eclipse.core.runtime.Platform.run(Platform.java:524); 	at org.eclipse.debug.core.DebugPlugin$EventNotifier.dispatch; (DebugPlugin.java:942); 	at org.eclipse.debug.core.DebugPlugin.fireDebugEventSet; (DebugPlugin.java:311); 	at org.eclipse.debug.core.model.RuntimeProcess.fireEvent; (RuntimeProcess.java:262); 	at org.eclipse.debug.core.model.RuntimeProcess.fireTerminateEvent; (RuntimeProcess.java:270); 	at org.eclipse.debug.core.model.RuntimeProcess.terminated; (RuntimeProcess.java:228); 	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorJob.run; (RuntimeProcess.java:356); 	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62); !ENTRY org.eclipse.debug.core 4 120 Apr 02; 2004 21:32:08.78; !MESSAGE An exception occurred while dispatching debug events.; !STACK 0; org.eclipse.swt.SWTException: Invalid thread access; 	at org.eclipse.swt.SWT.error(SWT.java:2625); 	at org.eclipse.swt.SWT.error(SWT.java:2555); 	at org.eclipse.swt.widgets.Widget.error(Widget.java:354); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:245); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:236); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:189); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:127); 	at org.eclipse.help.ui.internal.util.ErrorUtil.displayErrorDialog; (ErrorUtil.java:48); 	at org.eclipse.help.ui.internal.util.ErrorUtil.displayError; (ErrorUtil.java:23); 	at org.eclipse.help.internal.base.HelpDisplay.displayHelpURL; (HelpDisplay.java:169); 	at org.eclipse.help.internal.base.HelpDisplay.displayHelpResource; (HelpDisplay.java:88); 	at org.eclipse.help.ui.internal.DefaultHelpUI.displayHelpResource; (DefaultHelpUI.java:56); 	at org.eclipse.ui.help.WorkbenchHelp.displayHelpResource; (WorkbenchHelp.java:264); 	at org.eclipse.jdt.internal.ui.actions.OpenBrowserUtil$1.run; (OpenBrowserUtil.java:31); 	at org.eclipse.swt.custom.BusyIndicator.showWhile; (BusyIndicator.java:51); 	at org.eclipse.jdt.internal.ui.actions.OpenBrowserUtil.open; (OpenBrowserUtil.java:29); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard.spawnInBrowser; (JavadocWizard.java:502); 	at org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard.access$3; (JavadocWizard.java:497); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard$JavadocDebugEventListen; er.handleDebugEvents(JavadocWizard.java:525); 	at org.eclipse.debug.core.DebugPlugin$EventNotifier.run; (DebugPlugin.java:910); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:607); 	at org.eclipse.core.runtime.Platform.run(Platform.java:524); 	at org.eclipse.debug.core.DebugPlugin$EventNotifier.dispatch; (DebugPlugin.java:942); 	at org.eclipse.debug.core.DebugPlugin.fireDebugEventSet; (DebugPlugin.java:311); 	at org.eclipse.debug.core.model.RuntimeProcess.fireEvent; (RuntimeProcess.java:262); 	at org.eclipse.debug.core.model.RuntimeProcess.fireTerminateEvent; (RuntimeProcess.java:270); 	at org.eclipse.debug.core.model.RuntimeProcess.terminated; (RuntimeProcess.java:228); 	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorJob.run; (RuntimeProcess.java:356); 	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)",2
Build 2.0 IBM JRE 1.3.0 Win2k; ; I was doing some debugging; and after awhile I noticed a stack trace on the ; console (nothing in the log file).  I unfortunately dont have steps to ; reproduce it.  Hopefully the stack trace has enough info to go on.  Things I was ; doing that may have caused breakage:; ; - modifying code from within the debugger while program was running.  I would ; then kill the thread on failure to HCR; - had a conditional breakpoint in a fairly tight loop.  The loop had roughly ; 50;000 iterations; which is nowhere near the size reported in the exception.  ; The conditional breakpoint seemed to functioning fine.; ; Here is the stack trace:; ; java.lang.ArrayIndexOutOfBoundsException: 376653368;         at java.util.ArrayList.ensureCapacity(ArrayList.java(Compiled Code));         at java.util.ArrayList.add(ArrayList.java(Compiled Code));         at org.eclipse.jdt.internal.debug.core.model.JDIModificationVariable.<in; it>(JDIModificationVariable.java(Compiled Code));         at org.eclipse.jdt.internal.debug.core.model.JDIValue.getVariables0(JDIV; alue.java(Compiled Code));         at org.eclipse.jdt.internal.debug.core.model.JDIValue.getVariables0(JDIV; alue.java(Compiled Code));         at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.findVariable(; JDIStackFrame.java(Compiled Code));         at org.eclipse.jdt.internal.debug.core.model.JDIThread.findVariable(JDIT; hread.java:1401);         at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.findVariable; (JDIDebugTarget.java:1363);         at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo(JavaDeb; ugHover.java:91);         at org.eclipse.jdt.internal.ui.text.java.hover.JavaTextHover.getHoverInf; o(JavaTextHover.java:304);         at org.eclipse.jface.text.TextViewerHoverManager$2.run(TextViewerHoverMa; nager.java:98),2
"Suddenly in the middle of typing something the cursor stops and all the ; characters cosequently typed appear while pushing others to the right of the ; cursor.  To get correct output one must type words backwards.; ; I have this problem every 2-3 hours of work.  It happens on 3M8; 3.0; 3.0.1 ; and 3.1 -- Ive tried all of these.  It does not depend on the project or on ; the plugins -- For instiance it just happened with a clean 3.0.1 with no ; custom plugins at all.; ; The only way out is to close eclipse and restart. The following is the last ; error in the log.  Would be happy to make the entire log available.; ; !ENTRY org.eclipse.ui 4 0 Nov 11; 2004 16:43:37.362; !MESSAGE java.lang.NullPointerException; !STACK 0; java.lang.NullPointerException; 	at ; org.eclipse.jface.text.source.projection.ProjectionViewer.handleVisibleDocument; Changed(ProjectionViewer.java(Compiled Code)); 	at ; org.eclipse.jface.text.TextViewer$VisibleDocumentListener.documentChanged; (TextViewer.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged; (AbstractDocument.java(Inlined Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged; (AbstractDocument.java(Compiled Code)); 	at ; org.eclipse.jface.text.projection.ProjectionDocument.fireDocumentChanged; (ProjectionDocument.java:768); 	at org.eclipse.jface.text.AbstractDocument.replace; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.projection.ProjectionDocument.replace; (ProjectionDocument.java:551); 	at org.eclipse.jface.text.DefaultDocumentAdapter.replaceTextRange; (DefaultDocumentAdapter.java:238); 	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.doBackspace(StyledText.java:2488); 	at org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java:5482); 	at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java; (Inlined Compiled Code)); 	at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java(Compiled Code)); 	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled ; Code)); 	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method); 	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench; (Workbench.java:254); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141); 	at org.eclipse.ui.internal.ide.IDEApplication.run; (IDEApplication.java:96); 	at org.eclipse.core.internal.runtime.PlatformActivator$1.run; (PlatformActivator.java:335); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run; (EclipseStarter.java:273); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run; (EclipseStarter.java:129); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke; (NativeMethodAccessorImpl.java:79); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke; (DelegatingMethodAccessorImpl.java:41); 	at java.lang.reflect.Method.invoke(Method.java:386); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:185); 	at org.eclipse.core.launcher.Main.run(Main.java:704); 	at org.eclipse.core.launcher.Main.main(Main.java:688); ; !ENTRY org.eclipse.ui 4 4 Nov 11; 2004 16:43:37.622; !MESSAGE Unhandled event loop exception; ; !ENTRY org.eclipse.ui 4 0 Nov 11; 2004 16:43:37.632; !MESSAGE java.lang.NullPointerException; !STACK 0; java.lang.NullPointerException; 	at ; org.eclipse.jface.text.source.projection.ProjectionViewer.handleVisibleDocument; Changed(ProjectionViewer.java(Compiled Code)); 	at ; org.eclipse.jface.text.TextViewer$VisibleDocumentListener.documentChanged; (TextViewer.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged; (AbstractDocument.java(Inlined Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged; (AbstractDocument.java(Compiled Code)); 	at ; org.eclipse.jface.text.projection.ProjectionDocument.fireDocumentChanged; (ProjectionDocument.java:768); 	at org.eclipse.jface.text.AbstractDocument.replace; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.projection.ProjectionDocument.replace; (ProjectionDocument.java:551); 	at org.eclipse.jface.text.DefaultDocumentAdapter.replaceTextRange; (DefaultDocumentAdapter.java:238); 	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.doBackspace(StyledText.java:2488); 	at org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java:5482); 	at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java; (Inlined Compiled Code)); 	at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java(Compiled Code)); 	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled ; Code)); 	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method); 	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench; (Workbench.java:254); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141); 	at org.eclipse.ui.internal.ide.IDEApplication.run; (IDEApplication.java:96); 	at org.eclipse.core.internal.runtime.PlatformActivator$1.run; (PlatformActivator.java:335); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run; (EclipseStarter.java:273); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run; (EclipseStarter.java:129); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke; (NativeMethodAccessorImpl.java:79); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke; (DelegatingMethodAccessorImpl.java:41); 	at java.lang.reflect.Method.invoke(Method.java:386); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:185); 	at org.eclipse.core.launcher.Main.run(Main.java:704); 	at org.eclipse.core.launcher.Main.main(Main.java:688)",2
"20021016; Enable eating code assist.; Given this code; 	public void setNewName(String newName) {; 		Assert.isNotNull(newName);; 	}; Do code assist after Assert.; 1. No eating range marked. I think isNotNull should be marked; 2. While the dialog is still up; press twice cursor right and once cursor ; left. The eating range consist of one letter. very strange",2
3.2 M3 test pass; ; - use the Clean up action and make sure the add missing $NON-NLS$ checkbox is; checked; - have a CU open with an NLS warning; - choose Source>Clean up; - check the selection on the first wizard pane: it is correct: only the active; CU is checked; - press Return or click Finish to execute the clean up; ; > expected: the NLS tag is added; < actual: no changes occur; ; Note: the same works if I manually go to the configuration page first and then; click Finish,2
"20020214; jdk 1.3.1; ; When I use the Java browsing view to try to create getters/setters from the ; context menu on a class field; there is not entry.  I have to switch back to ; the regular Java view; ; I tried to use Self-encapsulate field; but received an internal error (listed ; below). This may have been because one of the classes I had open had a syntax ; error (no closing bracket).; ; ; ; Log: Wed Feb 20 19:19:09 PST 2002; 1 org.eclipse.help 0 Help System started.; Log: Wed Feb 20 20:42:47 PST 2002; 4 org.eclipse.jdt.ui 1 Internal Error; java.lang.reflect.InvocationTargetException: java.lang.ClassCastException: ; org.eclipse.jdt.internal.compiler.lookup.ProblemBinding; 	at ; org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveNameForMessageSend; (DefaultBindingResolver.java:121); 	at org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveName; (DefaultBindingResolver.java:100); 	at org.eclipse.jdt.core.dom.Name.resolveBinding(Name.java:75); 	at ; org.eclipse.jdt.internal.corext.refactoring.sef.AccessAnalyzer.visit; (AccessAnalyzer.java:74); 	at org.eclipse.jdt.core.dom.SimpleName.accept0(SimpleName.java:85); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.MethodInvocation.accept0; (MethodInvocation.java:91); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0; (ExpressionStatement.java:76); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:76); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:98); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:99); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:76); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0; (MethodDeclaration.java:183); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0; (ClassInstanceCreation.java:118); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0; (VariableDeclarationFragment.java:96); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.FieldDeclaration.accept0; (FieldDeclaration.java:119); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.TypeDeclaration.accept0; (TypeDeclaration.java:163); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.CompilationUnit.accept0; (CompilationUnit.java:143); 	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:981); 	at ; org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring.; checkInput(SelfEncapsulateFieldRefactoring.java:206); 	at ; org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run; (CheckConditionsOperation.java:58); 	at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run; (CreateChangeOperation.java:93); 	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run; (ModalContext.java:98)",2
The dialog needs an accelerator for the text field.,2
A custom perspective which contains a Debug view; and it has the buttons for ; Resume; Step Into etc.  However; the function keys do not work in that ; perspective.  I.e.  F8 for Resume; F5 for Step into; F6 for Step Over and F7 ; for Run to return.,2
"DS (6/1/01 3:35:32 PM); 	On 116; ; 	Test Case; 		Have a program running and paused at a breakpoint; 		Go to the display view; 		With nothing selected; hit the Inpsect or Display actions; ; An evaluation occurs on the empty String.; ; NOTES:; 	GDA (6/5/01 11:40:48 AM); 		Defer; ; DS (10/10/2001 4:29:14 PM); 	This is still the current behaviour...but have proposal/prototype to select the entire current line; 	of an empty selection.; 	@see 1GJ6GR9: ITPDUI:ALL - Display window enhancement",2
"Build 2.0; ; In the following example put the cursor before m and expand to enclosing ; element. Observe: the whole method is selected. Now change method name m to mm ; and do the same again. Observe: simple name mm is selected. There should not be ; a difference in this case.; ; package p;; class A{; 	void m(int t){; 	}; }",3
Have a line that has an indent greater than it is required.; Place cursor at the correct indent position.; Press Tab.; => Cursor ends up at the beginning of the document.,3
I20040924; ; Code in JDT Core often use Util.splitOn(...) to be able to compare a qualified ; name to a compound name.; ; We should introduce a helper that allows to compare a qualified name with a ; compound name without creating new objects.,3
While iterating over the installed versions of Java in the detectInstallLocation method in ; MacOSXVMInstallType; the following ; condition evaluates to false if the findVMInstall returns a valid VMInstall for the given version:; if (home.exists() && findVMInstall(version) == null && !CURRENT_JVM.equals(version)) {; ; The only place the defaultLocation returned by detectInstallLocation is set is within this if block; so if ; the default install location is able to be found; the method will return null.,3
"I tried to do a Rename Variable refactoring on a public field; when this error occurs everytime.; ; -- Error Log --; Date: Fri Apr 06 08:49:57 CEST 2007; Message: Internal Error; Severity: Error; Plugin ID: org.eclipse.ltk.ui.refactoring; Stack Trace:; java.lang.reflect.InvocationTargetException; 	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:350); 	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:304); 	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:571); 	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:414); 	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.computeSuccessorPage(UserInputWizardPage.java:75); 	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.getNextPage(UserInputWizardPage.java:115); 	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.nextOrPreviewPressed(RefactoringWizardDialog2.java:475); 	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.access$0(RefactoringWizardDialog2.java:472); 	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2$1.widgetSelected(RefactoringWizardDialog2.java:660); 	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1496); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1505); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1279); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3312); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2941); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:820); 	at org.eclipse.jface.window.Window.open(Window.java:796); 	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run(RefactoringWizardOpenOperation.java:132); 	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67); 	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:145); 	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:40); 	at org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.activate(UserInterfaceStarter.java:56); 	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameUserInterfaceStarter.activate(RenameUserInterfaceStarter.java:155); 	at org.eclipse.jdt.ui.refactoring.RenameSupport.openDialog(RenameSupport.java:114); 	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startRenameRefactoring(RefactoringExecutionStarter.java:382); 	at org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:172); 	at org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:131); 	at org.eclipse.jdt.ui.actions.RenameAction.run(RenameAction.java:117); 	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:271); 	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:243); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499); 	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185); 	at org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109); 	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:461); 	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:424); 	at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:160); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:466); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:799); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:846); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:564); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:506); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:122); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66); 	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1109); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1495); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1505); 	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1557); 	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1552); 	at org.eclipse.swt.widgets.Control.kEventUnicodeKeyPressed(Control.java:1820); 	at org.eclipse.swt.widgets.Composite.kEventUnicodeKeyPressed(Composite.java:583); 	at org.eclipse.swt.widgets.Control.kEventTextInputUnicodeForKeyEvent(Control.java:1812); 	at org.eclipse.swt.widgets.Widget.textInputProc(Widget.java:2000); 	at org.eclipse.swt.widgets.Display.textInputProc(Display.java:3838); 	at org.eclipse.swt.internal.carbon.OS.SendEventToEventTarget(Native Method); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2910); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1930); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1894); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:422); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149); 	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95); 	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78); 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92); 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25); 	at java.lang.reflect.Method.invoke(Method.java:585); 	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:336); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:280); 	at org.eclipse.core.launcher.Main.run(Main.java:977); 	at org.eclipse.core.launcher.Main.main(Main.java:952); Caused by: java.lang.NullPointerException; 	at org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchReportReference(FieldLocator.java:221); 	at org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchReportReference(PatternLocator.java:398); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2034); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2440); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2187); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(MatchLocator.java:1548); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1033); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1074); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1180); 	at org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94); 	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:212); 	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:490); 	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:538); 	at org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.internalSearch(RefactoringSearchEngine.java:145); 	at org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.search(RefactoringSearchEngine.java:131); 	at org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.getNewReferences(RenameFieldProcessor.java:837); 	at org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.analyzeRenameChanges(RenameFieldProcessor.java:799); 	at org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.createChanges(RenameFieldProcessor.java:626); 	at org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.doCheckFinalConditions(RenameFieldProcessor.java:441); 	at org.eclipse.jdt.internal.corext.refactoring.rename.JavaRenameProcessor.checkFinalConditions(JavaRenameProcessor.java:46); 	at org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions(ProcessorBasedRefactoring.java:175); 	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:83); 	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:118); 	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1737); 	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87); 	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)",3
Build 20011204; ; If an IResourceDelta is received by the DeltaProcessor before the java model is ; open; it fails with a NullPointerException.,3
While looking for a fix for bug 289683; I discovered that JavaDebugUtils.resolveType(IJavaType) was not working properly for some nested types. The AST visitor was visiting TypeDeclarationStatements; rather than all TypeDeclarations; so it was potentially missing some types.,3
Build I20050527-1300 (RC1); ; Shortly after pasting a block of code which modifies the imports; the editor; scrolls up to the import section. Note: This only seems to happen if the imports; are folded.,3
I20070206-0010.; ; The New Class Path Variable dialog should not show entries that cant be added.,3
See bug 198437.  ; ; There a lot of instances where we create new  empty strings.  Some classes create their own constants for this.  It would be beneficial if the JDT plugins had a global constant.,3
M7; ; Similar to the key bindings preference transfer; it would be good to have a; transfer of all repository connections if this is possible.; ; we in JDT will remove our All JDT transfer and instead choose some selected;; useful settings.; ; Suggestion List; - keys; - repositories; - ant runtime settings; - Java code and comment templates; - installed JREs,3
If I want to copy a file from one source folder to another and that file ; happens to be read-only then I get a pop-up complaining that the file is read-; only and the file doesnt get copied accross!,3
Build ID:  I20080617-2000; ; Steps To Reproduce:; 1. Install the leJOS plug-in (Go to Help -> Software Updates -> Available Software -> Add Site -> http://lejos.sourceforge.net/tools/eclipse/plugin/nxj/); 2. Go to: http://lejos.sourceforge.net/nxj-downloads.php and download and install the software (preferably somewhere handy like C:\ or My Documents).; 3. Create a new project (like mcl).; 4. Right click on the project; go to: leJOS NXJ -> Convert to leJOS NXJ Project.; 5. Go to: Project -> Properties -> Java Build Path; 6. Click on: Add an External JAR.; 7. Navigate to the folder where you installed the leJOS software (step 2) and add \leJOS Projects\pccomms\lib\pccomm.jar; 8. Click on Add a Library -> JRE System Library -> Workspace Default.; 9. Click OK and return to the project.; 10. Create a new package in the src folder (like  computer ).; 11. Go to: http://www.cs.uwaterloo.ca/~adcaine/MCL/ ; 12. Download all of the .java files (except Robot.java).; 13. Drag and drop the files into the src folder; but NOT into the new package (files should go into the default package).; 14.14. Select all the files in the default package and drag and drop them into the new package.; 15. At this point at least one of the files will most likely be sporting the first error.  It will complain that: The type Class is not generic; it cannot be parameterized with arguments <T>; 16. To see the second error (or if the first is not yet showing); open any file; create and then delete a space; and save the file.  It will now exhibit the first error and or complain that it has no idea what object X is; object X being a class who exhibits the first error.; ; More information:; I am not sure if the error is being caused by Eclipse or by the leJOS plug-in (I have contacted them; but they are mystified).  All I do know is that Eclipse complains that class X is not generic; a thing which I have never heard of before; especially as I am not trying to use any generics.,3
A library classpath entry also contains a location of its JavaDoc.; ; Features based on this:; - show the JavaDoc of a Java Element in a web browser.;   (jdt.ui); - use the JavaDoc as secondary source; if no source attchment is available.;   (jdt.core; SourceBuffer); - Use the JavaDoc location as links for the creation of JavaDoc from sources.; ; - JavaDoc generation: Use the location attached to the sourcefolder as ; destination. ; ; Issues:; Location as IPath / URL?; The idea to represent it as URL is very tempting; but is not very consistent ; with the rest of eclipse.; Clathpath variables are defines a IPath; so JRE witching would not be possible ; if URL would be taken.; ; What about putting an URL in a Path? Probably fails due to port numbers in URLs.; ; -> IPath is not optimal; but theres no alternative.,3
Imagine a Floder class; with instance field name.; The constructor will report unused namee but also reports that the assignement; as no effect. ; ; Folder(String namee); { this.name = name; }; ; We nee all these extremely usefull warnings to be in the compiler options.; I would easily put this one as an ERROR; to be sure it shows up in my filtered; task list.,3
I20050308; ; To be consistent with the runtime behavior where you can have strict and loose; access control to classes in required plugin; PDE needs to control the severity; of access rules. Some access rules would always be flagged as errors; some would; be flagged as warnings.,3
I20060816-1200; ; IClassFile#getType() is a handle-only query and should therefore not throw a JavaModelException. The implementation in ClassFile already doesnt throw the JME.,3
Eclipse currently lacks the capacity to change the next line to execute while debugging.  It seems this is possible for Java because JBuilder claims to do it.  Its present in other products; for example MSVC++; where its very useful.,3
build I20050509-2010; ; In a typical self-hosting workspace with OSGi; Runtime; Resources; SWT; JFace;; Workbench; IDE and random other odds and ends in source;; choose Window > About > Configuration Details.; ; It takes a while to open (see bug 94489).  Press Copy to Clipboard; paste the; contents to Notepad; and save as a file.  The resulting file is >2M.; ; Many of the entries are prefs having to do with the PDE classpath container and; access rules.  This seems very verbose; with much duplication.; ; Is it necessary to use prefs here?  Would workspace properties be more; appropriate?  If prefs must be used; is there some way they could be made more; compact?,3
20030107; once in 2 hours or so i get a message ; file has changed on the file system. you you want to overwrite?; ; regardless of what i select the whole ide freezes forever ; (or for so long that i never waited more than 5 minutes); ; i need to kill it; then after restart; full build is requuired; but it never completes - ide; freezes again (on updating... after build); ; i must kill eclipse again; 3rd time round another full build is required; which completes; ; after more than 20 minutes of wasted time and a lot of frustration; you can work again; ; this happens 2-4 times a day and is greatly frustrating; ; (didnt know where to enter this report),3
"Build ID: M20080221-1800; ; Steps To Reproduce:; I dont have a simple repro yet but this is a real world problem weve come across using the Beehive annotations in eclipse with version 3.3.2 of JDT (3.3.2.r33x_r20080129-7o7jE7_EDhYDiyVEnjb1pFd7ZGD7); ; I have a Apache Beehive project with a NetUI page flow that declares an array type action output for an action...; ; @Jpf.Action(forwards = {;     @Jpf.Forward(;         name = success; ;         path = results.jsp; ;         actionOutputs = {;             @Jpf.ActionOutput(;                 name = mybeanmethodResult;;                 type = mypkg.Mybean[].class;             );         };     ); }); public Forward mybeanmethod(MyFormBean form) {; ...; }; ; The type attribute on the @Jpf.ActionOutput annotation that is an Array; cause the ClassCastException.; ; type = mypkg.Mybean[].class; ; More information:; This appears to be a regression in JDT compiler code. I think it may have been introduced by the fixes for Bugzilla bug 187430.; ; I noticed the code change introduced in BinaryTypeBinding in revision 1.108 (and 1.105.2.2 for 3.3).; ; From the file revision history; it looks like the fix was back ported into 3.3.2. It adds the cast that seems to be the issue in this particular scenario. Specifically; we have a type attribute on an annotation that is an Array.; ; type = mypkg.Mybean[].class; ; The LookupEnvironment.getTypeFromSignature() method checks for the [ char to calculate a possible array (and dimension) if it exists and if found returns an ArrayBinding which cannot be cast to ReferenceBinding.; ; Heres the Exception and stack we see...; ; Internal compiler error; java.lang.ClassCastException: ; org.eclipse.jdt.internal.compiler.lookup.ArrayBinding; 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.convertMemberValue(BinaryTypeBinding.java:58); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createAnnotation(BinaryTypeBinding.java:86); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.convertMemberValue(BinaryTypeBinding.java:61); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.convertMemberValue(BinaryTypeBinding.java:74); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createAnnotation(BinaryTypeBinding.java:86); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.convertMemberValue(BinaryTypeBinding.java:61); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.convertMemberValue(BinaryTypeBinding.java:74); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createAnnotation(BinaryTypeBinding.java:86); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createAnnotations(BinaryTypeBinding.java:96); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createMethod(BinaryTypeBinding.java:508); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createMethods(BinaryTypeBinding.java:559); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.cachePartsFrom(BinaryTypeBinding.java:328); 	at ; org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:609); 	at ; org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:588); 	at org.eclipse.jdt.internal.compiler.Compiler.accept(Compiler.java:276); 	at ; org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:128); 	at ; org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(PackageBinding.java:178); 	at ; org.eclipse.jdt.internal.compiler.lookup.Scope.getPackage(Scope.java:2104); 	at ; org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.getTypeBinding(QualifiedTypeReference.java:69); 	at ; org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(TypeReference.java:134); 	at ; org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.resolveTypesFor(SourceTypeBinding.java:1358); 	at ; org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.methods(SourceTypeBinding.java:1099); 	at ; org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.faultInTypesForFieldsAndMethods(SourceTypeBinding.java:583); 	at ; org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes(CompilationUnitScope.java:431); 	at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:616); 	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:392); 	at ; org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:362); 	at ; org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.compile(IncrementalImageBuilder.java:302); 	at ; org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:299); 	at ; org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:130); 	at ; org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:280); 	at ; org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:192)",3
Code related; org.eclipse.jdt.internal.core.builder.State 1.53 and related classes.; Following discussions about bug 76266 and bug 122763; we (Philippe and I) believe that storing access restrictions templates into the project build state is not needed; hence should be avoided. ; This would call for their removal for the sake of optimization.; Moreover; Philippe pointed out that storing them is due to trigger a full build when the user changes his locale; which is not intended.; Note: need to check that the build state comparison is aligned as well.,3
"I20081119-1600; ; java-test:;      [echo] Running org.eclipse.pde.api.tools.tests.ApiToolsPluginTestSuite. Result file: C:\buildtest\I20081119-1600\eclipse-testing/results/win32.win32.x86_6.0/org.eclipse.pde.api.tools.tests.ApiToolsPluginTestSuite.xml.;      [java] org.eclipse.core.runtime.CoreException: Problems encountered while deleting files.;      [java] 	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:124);      [java] 	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFile(ResourceTree.java:303);      [java] 	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFile(ResourceTree.java:780);      [java] 	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1751);      [java] 	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:711);      [java] 	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:682);      [java] 	at org.eclipse.pde.api.tools.builder.tests.ApiTestingEnvironment.deleteWorkspaceFile(ApiTestingEnvironment.java:432);      [java] 	at org.eclipse.pde.api.tools.builder.tests.ApiTestingEnvironment.revertWorkspace(ApiTestingEnvironment.java:401);      [java] 	at org.eclipse.pde.api.tools.builder.tests.ApiTestingEnvironment.resetWorkspace(ApiTestingEnvironment.java:370);      [java] 	at org.eclipse.jdt.core.tests.builder.BuilderTests.tearDown(BuilderTests.java:470);      [java] 	at org.eclipse.pde.api.tools.builder.tests.ApiBuilderTest.tearDown(ApiBuilderTest.java:983);      [java] 	at org.eclipse.pde.api.tools.builder.tests.tags.TagTest.tearDown(TagTest.java:81);      [java] 	at junit.framework.TestCase.runBare(TestCase.java:136);      [java] 	at junit.framework.TestResult$1.protect(TestResult.java:106);      [java] 	at junit.framework.TestResult.runProtected(TestResult.java:124);      [java] 	at junit.framework.TestResult.run(TestResult.java:109);      [java] 	at junit.framework.TestCase.run(TestCase.java:120);      [java] 	at junit.framework.TestSuite.runTest(TestSuite.java:230);      [java] 	at junit.framework.TestSuite.run(TestSuite.java:225);      [java] 	at junit.framework.TestSuite.runTest(TestSuite.java:230);      [java] 	at junit.framework.TestSuite.run(TestSuite.java:225);      [java] 	at junit.framework.TestSuite.runTest(TestSuite.java:230);      [java] 	at junit.framework.TestSuite.run(TestSuite.java:225);      [java] 	at junit.framework.TestSuite.runTest(TestSuite.java:230);      [java] 	at junit.framework.TestSuite.run(TestSuite.java:225);      [java] 	at junit.framework.TestSuite.runTest(TestSuite.java:230);      [java] 	at junit.framework.TestSuite.run(TestSuite.java:225);      [java] 	at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:354);      [java] 	at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:206);      [java] 	at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:35);      [java] 	at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:31);      [java] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);      [java] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);      [java] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);      [java] 	at java.lang.reflect.Method.invoke(Method.java:597);      [java] 	at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethodWithException(EclipseAppContainer.java:574);      [java] 	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:195);      [java] 	at org.eclipse.equinox.internal.app.MainApplicationLauncher.run(MainApplicationLauncher.java:32);      [java] 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110);      [java] 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79);      [java] 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:370);      [java] 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179);      [java] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);      [java] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);      [java] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);      [java] 	at java.lang.reflect.Method.invoke(Method.java:597);      [java] 	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:549);      [java] 	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:504);      [java] 	at org.eclipse.equinox.launcher.Main.run(Main.java:1236);      [java] 	at org.eclipse.equinox.launcher.Main.main(Main.java:1212);      [java] 	at org.eclipse.core.launcher.Main.main(Main.java:30);      [java] Contains: Could not delete: C:\buildtest\I20081119-1600\eclipse-testing\test-eclipse\eclipse\api_tools_plugins_folder\data\tagtest\src\a\b\c\test11.java.",3
Refer to bug 401040.; ; CBI produced ECJ contains META-INF/maven; which isnt necessary. The folder needs to be removed.,3
20050920; ; - rename a type and select to renam also strings; - open preview; ; see screenshot: Once its Update then its update,3
Its something like Floding. Floding enables me to collapes or expand a method; but what i really miss is a seperator between methods. ; Seperator like ; //--------------------------------//; or ; //=================//; etc...; ; I usually add some texts to the java code. but its really not the correct place; because; 1. has nor sence for java compiler.; 2. other develops work on the same project wants another seperator or none at all; 3. it increases the class in size and line number; 4. changes on seperator like:; from ; //--------------------------------//; to ; //------------------------------------------------------//; will be saved and mentioned in the Version Control.; ; However; this feature is almost done in IntelliJ IDEA but even there not enough; 1. user cant decied what is the seperator.; 2. it seperats everything semilar i mean inner Classes have the same seperator like methods.,3
Open a java file in the editor; hover on a object type; for example; ByteArrayOutputStream; there are strings in English in the hover text;; especailly the string Press F2 for focus.; ; See attached screenshot for details.,3
"class A {; 	Object m(){; 		return /*]*/A.class/*[*/;; 	}; }; ; The position (start/end) of A.class is [41;45] but it should be [39;45]",3
The print margin is specified at column 80 but is placed at the 104th columnin; all java source code.  This is under GTK and I am using courier-regular-10 font; as the Text Font.,3
Found in console window...; java.lang.NullPointerException;         at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo; (JavaDebugHover.java:112);         at ; org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo; (BestMatchHover.java:102);         at ; org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverIn; fo(JavaEditorTextHoverProxy.java:69);         at org.eclipse.jface.text.TextViewerHoverManager$4.run; (TextViewerHoverManager.java:160),3
The code formatter continues to be an excellent feature of Eclipse; but there ; is one aspect that offends my sensibilities...; ; Binary expressions wrap and place the operator at the start of the next line. ; Id much prefer the operators at the end of the previous line; for example:; ; Eclipse 3.2 formatter now gives me this (3.1 did; too):;       int sum = 100 + 200 + 300;                 + 400 + 500 + 600;                 + 700 + 800;; ; But I would prefer:;       int sum = 100 + 200 + 300 +;                 400 + 500 + 600 +;                 700 + 800;; ; This is when set to wrap when necessary and column indent. I might choose ; different options; but the key idea is that the operator should (IMHO) be at ; the end of the line; not the start,3
In interest of green builds:; ; * review transient test failures over the last few weeks; * those tests should no longer cause red Xs; * tests at risk shold log errors (i.e. to the log); but not cause a failure,3
"JDT UI from CVS HEAD as of today (06/10/2008).; ; Just stumbled across EditorBreadcrumb#createContent; ; public Control createContent(Composite parent) {; 	if (fComposite != null); 		new IllegalArgumentException(Content must only be created once.); //$NON-NLS-1$; 		; There is a throw missing in order to achieve the goal.",3
For an array variable (eg String[]); you can appear to create a Detail ; Formatter.; You go through all the motions but the formatter is not actually created.,3
"I believe Im getting a false positive resource leak warning when resources are closed using apache dbutils closeQuietly methods.; Simplified Code:; public static void test(Connection con){ ; 	PreparedStatement ps = null;; 	try {; 		ps = con.prepareStatement(foo);; 		// Remove this loop for no warning ; 		for (int i = 0; i < 1; i++) {; 			try {; 				ps.executeUpdate();; 			} catch (SQLException e) {; 				throw new SQLException(Some message; e); // << warning; 			}; 			// << move the closing finally to here for no warning; 		}; 	} catch (SQLException e) {; 		throw new RuntimeException(e);; 	} finally {; 		DbUtils.closeQuietly(ps);  // << change this to ps.close for no warning; 	}; }; ; ; ; The warning is removed if:;  1; I add the finally block after the inner try-catch;  2; I change closeQuietly to ps.close() (with the required try-catch wrapper);  3; I remove the for-loop",3
The description of a problem.; 1. I define a  several newContainerEntry with identical segment [0]; for example ;  ;     ..;     ipath1.. = MyLib/org.apache.axis;;     ipath2.. = MyLib/org.apache.log4j;;     ..;    JavaCore.newContainerEntry (iPath1..);;    JavaCore.newContainerEntry (iPath2..);;    ..; 2. In dialogue 1 (1.jpg) I normally see both ipath1; ipath2; 2. In dialogue 2 (2.jpg) I see only the first ipath1,3
3.0.1 Eclipse had an feature that when right-clicking JRE_LIB in Package; explorer view; you could change JRE that you are using for this project. Now;; when clicking it; I just get a normal file menu instead of configure jre menu;; where I normally could change the jre.,3
Need artwork for JUnit Test Results file type icon,3
While using javaw.exe as the default vm; multiple execution arguments could not be used (i.e.; one after the other with a space between multiple arguments;as in while using the command prompt). The launch configuration tool was used to specify the arguments(Arguments tab--> Program Arguments). More specifically; when I used a single argument; for example; localhost; it worked. But when I used two; such as localhost and 5001; (one after the other wih a space between two or putting a comma between them) none of the arguments was processed. When changed to java.exe; everything worked fine; i.e.; I was able to use multiple arguments in the Program Arguments textarea normally as while using command prompt. I am using jdk1.5.0_05. I specified the location of this jdk in the java installed jres preferences option.; ; Also; I am not sure if this one is a bug or not; but when I specified java.exe to be used as the default vm for eclipse using windows shortcut by writing this in the target box C:\eclipse\eclipse.exe -vm C:\jdk1.5.0_05\bin\java.exe; eclipse itself used java.exe to run; but it used javaw.exe to run my programs. The problem stated in the above para was still occurring. I finally had to hide javaw.exe from eclipse by putting it in a folder foo. Only then did it use java.exe to run my programs as well; and also the problem stated in the above para disappeared.,3
I often code methods where the return value is an expression; typically as the; result of invoking other methods.; ; On occasions; I would like to see what the return value for a method is.  That; is; I want to step over the return statement and see what the return value is; before exitting the method itself.  I guess this implies treating the return; statement as two pieces: push a result onto the stack; then the actual return.; ; I could inspect the expression; but that can often cause unwanted side effects.; ; I picture this as a pseudo-variable that appears int he variables view; perhaps; Return Value (in italics) that I can select and inspect.  Alternately; the; pseudo-variable could always be present (for non-void methods); but its value; would be assigned after executing the return statement.; ; The workaround is to assign the expression value to a temporary variable and; return that.  I find that aesthetically unpleasing (and it requires a code; change that is not always possible).; ; I realize that in theory; I could just step up to the next level and inspect the; variable that is assigned.  In my particular case (today); I have a chain of; method calls; and the final result is passed out of my EJB facade level. The; value is never assigned to a variable; and the value is changed by the; application server before being returned to my applications presentation layer.; This makes it very hard for me to determine what (and why) certain changes take; place; since I can only see the value as it appears in the presentation layer.,3
Id like to suggest improving the Link Source dialog so that updating exclusion filters is understood easier. ; Instead of two long messages; Id prefer a descriptive label and two shorter radio button messages.; ; Sample: ; Updating exclusion filters in other source folders solves nesting conflicts.; O Update exclusion filters; O Ignore nesting conflicts,3
R3.3 and I20070731-0800.; ; Deleting a member should leave non-dirty editor non-dirty.; ; Test Case:; 1. open a CU; 2. delete a method; ==> editor is dirty; ; Since move and reorder doesnt make the file dirty; delete should behave the same.,3
When creating a new class and attempting to add a generic interface to it; it is; not obvious how to specify what the generic options for that interface are.  You; can manually type in after selecting the interface which generic types youd; want; but it shows it as an error.; ; For instance; if I wanted to do something like:; class Foo implements Bar<ClassX> { }; ; I could go to add class; then add interface in that wizard and select Bar;; however the interface addition wizard does not understand Bar<ClassX> and; reports it as an error.  So I just select Bar.; ; I then manually type into the list of interfaces the additional <ClassX> to the; end of the name.  This does not generate the correct code when I hit finish;; including that it does not automatically import ClassX.; ; So a couple things are problems:; -Interface wizard should understand generics and not flag Bar<X> as an error; -Class creation wizard should understand generic interfaces and it should be; obvious how to specify what the generics are (whether they be a specific class; [class X implements Y<Z>]or a generic of the class being created [class X<T>; implements Y<T>]),3
There is no keyboard shortcut to easily navigate amongst the occurrences marked by the Mark Occurences command (alt-shift-O).; ; It would be nice if this could be connected to either the Next/Previous (Ctrl+.; Ctrl+;) commands; or the Find Next/Previous (Ctrl+k; Ctrl+shift+k).; ; Or a completly new next/previous occurence command.,3
If I have the following code; doSomething() happens everytime; and it takes me a; while to figure why the heck expr is true when it should be false =); ; if (expr);; {;     doSomething();; },3
/*;        A B D G; alpha  x; beta     x; delta      x; gamma        x; */; ; When I format the code; the first line of the comment; which contains the column; headers; is suddenly left justified to start on the same column as the rest of; the comment.; ; I had specifically told the code formatter not to format comments at all.,3
Report from newsgroup from Francesc Ros s:; ; Im using GM4 in a W2K. When in a javadoc comment I type @see and I ; attempt to access to code assist; nothing occurs. In previous releases; ; the code assists suggest a class names list and I can select one ; (i.e. the result was @see MyClass). If then I type # and ctrl-space; ; code assist suggest a method names list and I can select one ; (i.e. the result is @see MyClass#MyMethod). ; ;   I think this feature is indispensable. Simplify the use of javadoc ; crossreference feature. If there is not this feature the users will ; not use the @see and the quality of documentation will decrease.,3
"Here is my sample class:; ; /*;  * Copyright (C) 1993-2003 SEAGULL;  * ;  * HostBackEndBindingBridge.java;  * Created on Jul 22; 2003; 4:39:13 PM;  * ;  */;  ; package com.seagullsw.appinterface.server.backend.host;; ; import com.seagullsw.appinterface.server.backend.BackEndBindingBridge;; import com.seagullsw.appinterface.server.backend.BackEndException;; import com.seagullsw.appinterface.server.backend.InternalBackEnd;; import com.seagullsw.appinterface.server.backend.host.bind.AbstractHostConnector;; import com.seagullsw.appinterface.server.bind.connector.Connector;; ; /**;  * Creates Host back-end instances based on the contents of JAXB objects.;  * ;  * @author <a href=mailto:ggregory@seagullsw.com>Gary Gregory</a>;  * @version $Id$;  */; public class HostBackEndBindingBridge implements BackEndBindingBridge {; ; 	/* (non-Javadoc); 	 * @see; com.seagullsw.appinterface.server.backend.BackEndBindingBridge#toBackEnd(com.seagullsw.appinterface.server.bind.connector.Connector); 	 */; 	public InternalBackEnd toBackEnd(Connector connector) throws BackEndException {;         if (!(connector instanceof AbstractHostConnector)) {;             throw new IllegalStateException(connector +  is not an instance of;  + AbstractHostConnector.class);;         };         return this.toBackEnd((AbstractHostConnector) connector);; 	}; }; ; Where AbstractHostConnector is a sub-interface of Connector.; ; I get a warning here:; return this.toBackEnd((AbstractHostConnector) connector);; ; The warning:; 	Unnecessary cast to type AbstractHostConnector for expression of type; Connector. It is already compatible with the argument type Connector; HostBackEndBindingBridge.java; Transidiom-DevE/Java/Source/com/seagullsw/appinterface/server/backend/host; line 32	July 23; 2003 4:10:34 PM; ; This is a fine warning BUT what I want is a Quick Fix the create the method:; ; public InternalBackEnd toBackEnd(AbstractHostConnector connector); ; I only have the quick fix to /remove/ the type-cast.; ; In the past (before 3.0.m2+); when I did not have the Unnecessary cast; compiler warning turned on; I could choose to create methods like this.; ; Eclipse Platform; Version: 3.0.0; Build id: 200307230800",3
N20051009-0010 + jdt.core v_616; ; See bug 89529 for the new raw type warning; which is also suppressed by; @SuppressWarnings(unchecked).; ; ; import java.util.ArrayList;; import java.util.Collection;; ; public class A {;     void foo(Collection c) {;         new ArrayList(c); // quick fix;                           // Add @SuppressWarnings unchecked to foo();                           // appears twice; expected: only once;     }; },3
Created attachment 199503; screenshot; ; -------------------------------------------; List<String> list=null;; list= new ArrayList(); //QF on ArrayList; -------------------------------------------; ; The quick fix does not make sense here; interfaces and abstract types should not be proposed for constructor invocations.,3
This happens in 3.0M2; ; If Im searching for references of a method; I usually right click;; Search->References->Workspace.; However; with large workspaces; this can take pretty long; so Ive gotten in the; habit of searching for references within a working set.  I usually define a; workingset for each project and all its contents.; ; The problem is; when I search for references of a method in the workingset; it; does not find references to that symbol from the thirdparty jars I have attached; to the projects build path (verified the jar is selected as part of the working; set).  However; if I search the workspace; it does find the references in that; thirdparty jar.  This is usually for a method defined in the thirdparty jar that; I use; and want to see how it is used by the thirdparty.,3
It only fills the requester horisontally when the requester is resized.; ;  yvind,3
Build 20030107 or HEAD; ; The Java UI plug-in now registers a font definition for Java editors. The Java; editor font preference is no longer on the Java editors preference page but on; the Workbenchs Font preference page.; ; Currently we propagate this font to the JDT UI preference store to allow clients; to access the font preference as before. This will go away with 2.2. JDT Debug; UI accesses the font preference for the Snippet editor. I suggest to apply the; attached patch to org.eclipse.jdt.debug.ui. It adds the symbolic font name to; the Snippet editor.,3
M20050824-1200; ; See JDT/Core bug 104293. For that specific instance of the problem; theres an; easy workaround in JdtASTMatcher that we should submit for 3.1.1.,3
When typing fast this will frequently result in absorbing space characters. ; E.g. if you type = (which is accessed by pressing Shift in many european ; keyboard layouts) it is likely to have Shift not completely released when Space ; follows.,3
Build: 20020125; ; Description:; If you click on Save As while editing a java file; the save as dialog opens ; with blank folder and file name fields.  I would expect the initial values of ; these fields to match the current values.; ; Steps:; 1.  Open a java file in the java editor.  ; (e.g. /org/eclipse/ui/IActionBars.java); 2.  Click on save as.; 3.  The folder and file name fields are blank.  I would expect folder to ; contain /org/eclipse/ui and file name to contain IActionBars.java,3
Build ID: 20090621-0832; ; Steps To Reproduce:; 1. Create a new maven project; 2. Put some Foo class in src/main/java; 3. Put some bar.xml in src/main/resources; 4. bar.xml can be reached from Foo by classpath:bar.xml (e.g. in a ClasspathResource from Spring); 5. Export this project as a runnable jar; 6. Lo and behold: bar.xml is *not* in the root directory of the jar but in a subdirectory called resources. Your class doesnt work any more; bar.xml cant be found.,3
Preferences > Java > Code Generation > Templates shows a list of comment types; for classes; constructors; methods etc.; ; Under 2.1RC1 this tree used to be shown with graphical icons for each of the tree nodes; in 2.1RC2 these icons are not shown in the tree.,3
"DiagnoseParser as of 06/13/2003; ; When following syntax error (in #newLibraryEntry()) is diagnosed; the end ; result is confusing; especially due to the highlighting.; ; public class X {; ; 	public static void main(String[] args) {; 	}; 	public static int newLibraryEntry() {; 			; 		if (sourceAttachmentPath != null) {; 			if (sourceAttachmentPath.isEmpty()) { && !; sourceAttachmentPath.isAbsolute()) {; 			foo();; 		}; 		return null;; 	}; 	}; 	; 	public void foo() {; 	}; ; 	public void bar() {; 	}; }; ; Error diagnosis is:; ; Severity	Description	Resource	In Folder	Location; 	Creation Time; 	Syntax error on token {; invalid AssignmentOperator	X.java	Crap/src; 	line 12	June 13; 2003 6:02:40 PM; 	Syntax error on token &&; invalid PushLPAREN	X.java	Crap/src; 	line 12	June 13; 2003 6:02:40 PM; 	Syntax error on token(s); misplaced construct(s)	X.java	Crap/src; 	line 9	June 13; 2003 6:02:40 PM",3
I200409212000: The combo box containing the qualified name of the accessor ; class with its associated properties file has a misleading label Accessor ; class. The label should take both properties file and accessor class into ; account.,3
Build ID:  M20080221-1800; ; Steps To Reproduce:; 1.Create a Java project; 2.Create a .java source file; 3.Enter a function like this:; ; class Test {;     ArrayList params;; ;     public int getSqlParamCount() {;         return params == null ? null:params.size();;     }; }; ; ; More information:; If we remove the conditional; then the compiler complains:; ; class Test {;     ArrayList params;; ;     public int getSqlParamCount() {;         return null;;     }; },3
"jkca (4/11/2001 12:02:47 PM); 	jre-sdk 043; ; I attempted to change the value of a char to be a newline.  I tried both; \n and \n and neither of them worked.  I suspect there are problems with; tabs and other escaped characters.   Also; there should be support for (char)86.; ; DS (4/11/2001 2:52:48 PM); 	We should handle the escape chars.  (char)86 support is on hold.; 	Need the valid set of escape chars.; ; DS (4/17/2001 1:58:55 PM); 	Test with \n.; ; DS (4/17/2001 3:30:46 PM); 	Implemented the escape chars.; 	Verify and then move to inactive.; ; DW (4/18/01 4:42:53 PM); 	Verified. We might also want to support unicode sequences.; ; DW (6/2/01 12:46:40 PM); 	Possible enhancements:; 		For characters; allow; 			(char)86; 			unicode; 		For numbers; allow; 			hex input; 		For Strings; 			allow specification of null?",3
Example:; ; public class A ; {;   private static class B ;   {;   }; }; ; Collapse class B (so that it only is one line of code). Then select this line of code and cut that selection (e.g. Ctrl-X). ; The source is not cut; but source of class B is expanded again.; But some actions work; e.g. Del deletes class B.; ; Workaround: ; Select class in Package view. Then select cut.; ; ; ; ; -- Configuration Details --; Product: Eclipse 1.2.1.20090812-1036 (org.eclipse.epp.package.java.product); Installed Features:;  org.eclipse.jdt 3.5.1.r351_v20090810-0600-7r88FEoFI0WTo6Az-1qFRHm37ChJ,3
i have java perspective running and browsing sitting behind; still; on every selection change in the package explorer; java browsing is ; notified; updates its views; collects markers and does other work,3
- Enable Hyperlink Navigation (Ctrl-Click on source elements to open ; declaration); - Change focus to the outline; or another program (editor loses focus); - Hover over source in editor,3
latest submitted for 1022; for a 10 line file it takes 4 seconds on my 1GHz machine; it takes like 1/4 or 1/2 second to open even much larger files that are on the ; classpath (well; thats the only diff between them that i can tell),3
given this class:; ; public class C {; ;   private final int _a;; ;   public C(int a) {;     try {;       _a = Math.abs(34);;     } catch (Exception e) {;       _a = -1;;     };   }; }; ; results in a compiler error in the catch block that:; The final field _a may already have been assigned; ; IMO that is not correct here but it would be; if there are more statements after the first assignment to _a in the try block.; however; im not so firm what the java spec says on this and what gritty stuff there is on byte code level preventing a fix.; ; i think the compiler needs to check alternate execution paths as it already does when determining if a method returns a value for sure or not.,3
cod assist popup menu selection colors are extremely close to the popup background color on ; linux+gtk (and possibly osx too; i cant recall); making it very difficult to determine which item is ; the current selection. ;  ; There seems to be no way to configure this setting as well; unless im just missing it.,3
"The user operation is waiting for background work to complete. 1 work items ; letf; and the progress view does not show any oder work. It has hapened to me ; 3 times. I am not able to reproduce this bug consistently; in the 3 cases ; ihave to kill an realaunc eclipse.; ; I take a look to the log and I saw that it has como extrmely large  105 ; Megabytes;  it looks like something gets cicled ; ; 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668); 	at org.eclipse.jface.window.Window.open(Window.java:648); 	at org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:257); 	at org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager$2.run; (JavaDebugOptionsManager.java:746); 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages; (Synchronizer.java:106); 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668); 	at org.eclipse.jface.window.Window.open(Window.java:648); 	at org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:257); 	at org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager$2.run; (JavaDebugOptionsManager.java:746); 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages; (Synchronizer.java:106); 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668); 	at org.eclipse.jface.window.Window.open(Window.java:648); 	at org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:257); 	at org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager$2.run; (JavaDebugOptionsManager.java:746); 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages; (Synchronizer.java:106); 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668); 	at org.eclipse.jface.window.Window.open(Window.java:648); 	at org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:257); 	at org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager$2.run; (JavaDebugOptionsManager.java:746); 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages; (Synchronizer.java:106); 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668); 	at org.eclipse.jface.window.Window.open(Window.java:648)",3
The relaunch last name does not clearly tell the user that we are simply; re-launching the last launch that was launched.  Users have been confused by; this and expect it to debug.  We need a better name so that users realize it is; not switching launch modes.; ; Perhaps this leads to another point which is that the menu name debug is; misleading because it contains both run & debug actions.,3
I20060801-0900; ; Running Source > Find Broken Externalized Strings on ; /org.eclipse.ltk.ui.refactoring/src/org/eclipse/ltk/internal/ui/refactoring/RefactoringUIMessages.properties; gives these false positives:; ; Unused keys in: RefactoringUIMessages.properties - \org.eclipse.ltk.ui.refactoring\src\org\eclipse\ltk\internal\ui\refactoring (3 matches); Undefined keys in: RedoRefactoringAction.java - org.eclipse.ltk.ui.refactoring; Undefined keys in: RefactoringHistoryWizard.java - org.eclipse.ltk.ui.refactoring.history; Undefined keys in: UndoRefactoringAction.java - org.eclipse.ltk.ui.refactoring,3
"Using 1.5; the following code should compile fine.; ; public class X {; ;   public static void main(String argv[]) {;      int[] tabInt = new int[] {};;      int[] tabInt2 = tabInt.clone();;      System.out.print(SUCCESS);;   }; ; }; ; We report:; ----------; 1. ERROR in C:\tests_sources\X.java (at line 5); 	int[] tabInt2 = tabInt.clone();; 	      ^^^^^^^; Type mismatch: cannot convert from Object to int[]; ----------; 1 problem (1 error); ; The return type of clone() is int[]; but inside its signature it is still; java.lang.Object.; It adds a cast after the clone call.",3
If a synchronized method is inlined; then each occurence must be inlined into ; a synchronized block.  Eg; access of a long is not atomic and must be ; synchronized.; ; -------------------------- Bug.java ---------------------; class Bug {;     static long x;;     synchronized static void next(){x++;};     { next(); }; },3
While investigating bug 94452; I found a few place where we are creating more ; JDWP traffic than neccessary.; ; * ObjectReferenceImpl.uniqueID() is potentially throwing an ; ObjectCollectedException; which is not part of the JDI spec and causes an ; extra JDWP communication to determine if the object is allocated. The spec ; claims the id is unique as along as the object is allocated; but that can ; still be determined if a client needs to; by calling #isCollected() ; explicitly. We use the unique id for each object in the variables view.; * ArrayReferenceImpl is not caching its length; which cannot change. It goes ; to the target each time it needs its length.,3
I20051130-1215; ; The similar elements matcher could also handle the usual english plurals;  -> s and y -> ies.; ; class Item { // rename to Thing ;     Item[] items; //not found; should rename to things;     Item[] item; //ok; }; ; The non plus ultra would be support for conversions like this:; ; class Handy { // rename to MobilePhone;     java.util.Collection<Handy> handies; //-> mobilePhones;     Handy[] handy; //-> mobilePhone; },3
My use case is that I want to filter types that implement a certain interface; I cant do this now because the only think I can look at is the name of the type (using the filter extension mechanism). However in looking at the code; the IType is actually available and could easily be passed to the filter extension.,3
missing action docs for the expressions view,3
"The JLS3 states that the floating-point literals can now have a binary exponent.; ; Here are the rules to create a floating-point literal:; ; FloatingPointLiteral; 	DecimalFloatingPointLiteral; 	HexadecimalFloatingPointLiteral; ; DecimalFloatingPointLiteral:; 	Digits . Digitsopt ExponentPartopt FloatTypeSuffixopt; 	. Digits ExponentPartopt FloatTypeSuffixopt; 	Digits ExponentPart FloatTypeSuffixopt; 	Digits ExponentPartopt FloatTypeSuffix; ; ExponentPart:; 	ExponentIndicator SignedInteger; ; ExponentIndicator: one of; 	e E; ; SignedInteger:; 	Signopt Digits; ; Sign: one of; 	+ -; ; FloatTypeSuffix: one of; 	f F d D; ; HexadecimalFloatingPointLiteral:; 	HexSignificand BinaryExponent FloatTypeSuffixopt; ; HexSignificand:; 	HexNumeral; 	HexNumeral .; 	0x HexDigitsopt . HexDigits; 	0X HexDigitsopt . HexDigits; ; BinaryExponent:; 	BinaryExponentIndicator SignedInteger; ; BinaryExponentIndicator: one of; 	p P; 	; HexNumeral:; 	0 x HexDigits; 	0 X HexDigits; 	; HexDigits:; 	HexDigit; 	HexDigit HexDigits; 	; HexDigit: one of; 	0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F; ; The unsupported format is HexadecimalFloatingPointLiteral.",3
Build ID: I20081030-1917; ; Steps To Reproduce:; My expectation that sort members would sort the members based on the definitions in Java/Appearance/Member sort order but instead it just sort the variables alphabetically (which is not desirable in my case but would be nice to have it as a separate option). ; ; ; More information:; I am not sure what triggers Java/Appearance/Member sort but exected it to be triggered by cleanup/save actions and to deal with code ordering cleanup (such as imports order) and not alphabetical sort order.,3
Sometimes; when I do a Change Signature refactoring; an import that WAS in the; source file; is removed.  I dont know that its relevant; but the one place; Ive seen it for sure; the lost import was ONLY referenced in a call to a; constructor.; ; Something like this:; ; ; public Foo() {;   this(new Bar());; }; public Foo(IBar bar) {;   this.bar = bar; ; }; ; If I use Change Signature to add an additional parameter to the second; constructor; the import for Bar disappeared.,3
It would be good if there was an option to disable any warning/error for an; unread parameter on a method which over-rides a method in its superclass; as it; is common to have an API requiring certain methods to be over-ridden/implemented; which specify a signature including parameters the person doing the over-riding; does not need.; ; If the class or interface that originally defined the signature was in the; workspace and none of its implementors or subclasses used the parameter the; warning should still show up on the original class.,3
R2.0; ; 1) Turn on the preference to fill argument names on method completion; 2) Start writing a method name that have different signatures; 3) Choose one; 4) The argument name appears and has a underlined in green; 5) Select the argument name and paste some other name on it; 6) It remains underlined and only seems to get rid of that if you change the ; original name used for the paste (although; changing the original does not ; change the new argument).; ; What is the meaning of the underline? Why would it stay around after a paste ; (looks like a bug)?.,3
"build 0508; ; public class WordJumpTest {; ; 	public WordJumpTest() {; 		super();; 	}; ; 	public void testmymethod; ; ; 	public String toString() {; 		return test;; 	}; }; ; goto test<Cursor>mymethod; and change the m to M; now quickly press ctrl+left a few times (2x); the cursor moves to WordJumpTest",3
I20061219-1300; ; SurroundWithActionGroup waits for AST when building editor context menu. We must not wait for the AST while building the main editor context menu.; ; main prio=6 tid=0x00036340 nid=0xda0 in Object.wait() [0x0007e000..0x0007fc40];         at java.lang.Object.wait(Native Method);         - waiting on <0x12d4dda0> (a java.lang.Object);         at java.lang.Object.wait(Object.java:474);         at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:490);         - locked <0x12d4dda0> (a java.lang.Object);         at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:70);         at org.eclipse.jdt.internal.ui.text.correction.SurroundWith.getSelectedStatements(SurroundWith.java:170);         at org.eclipse.jdt.internal.ui.text.correction.QuickTemplateProcessor.getAssists(QuickTemplateProcessor.java:120);         at org.eclipse.jdt.internal.ui.actions.SurroundWithTemplateMenuAction.getTemplateActions(SurroundWithTemplateMenuAction.java:3;         at org.eclipse.jdt.internal.ui.actions.SurroundWithTemplateMenuAction.fillMenu(SurroundWithTemplateMenuAction.java:162);         at org.eclipse.jdt.internal.ui.actions.SurroundWithActionGroup.fillContextMenu(SurroundWithActionGroup.java:60);         at org.eclipse.jdt.internal.ui.actions.CompositeActionGroup.fillContextMenu(CompositeActionGroup.java:78);         at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.editorContextMenuAboutToShow(CompilationUnitEditor.java:1336);         at org.eclipse.ui.texteditor.AbstractTextEditor$13.menuAboutToShow(AbstractTextEditor.java:2486);         at org.eclipse.jface.action.MenuManager.fireAboutToShow(MenuManager.java:289);         at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:394);         at org.eclipse.jface.action.MenuManager.access$1(MenuManager.java:390);         at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:416);         at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:117);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:928);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:952);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:933);         at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:3681);         at org.eclipse.swt.widgets.Control.windowProc(Control.java:3398);         at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1554);         at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:1728);         at org.eclipse.swt.widgets.Display.windowProc(Display.java:4134);         at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method);         at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:227);         at org.eclipse.swt.widgets.Display.runPopups(Display.java:3491);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3073);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1945);         at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1909);         at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:425);         at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149);         at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:585);         at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethod(EclipseAppContainer.java:522);         at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:147);         at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:104);         at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:74);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:170);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:585);         at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:473);         at org.eclipse.equinox.launcher.Main.basicRun(Main.java:417);         at org.eclipse.equinox.launcher.Main.run(Main.java:1121);         at org.eclipse.equinox.launcher.Main.main(Main.java:1096),3
Build 20021016; ; 1) Import a binary plugin project; 2) In the packages view; add the filter to hide binary plugin projects; 3) Checkout that same project from a repository; ; -> Project is no longer a binary plugin project; but the packages view still; does not show it.  Somehow the filter needs to update the viewer when a project; becomes non-binary.,3
"Creaing a java file overwrites any external file with the same name in that folder without asking the user.; ; 1. Copy a java source file( e.g. Test.java ) to a folder of a project without using Eclipse.; 2. Using the class wizard in Eclipse; create a class( e.g. Test ) with the same name in that folder.; 3. Notice that the new class has overwritten the existing java file.; ; NOTES:; ; KH (5/28/2001 6:04:36 AM); 	Moving to JUI.; ; EG (5/28/01 4:48:02 PM); 	there should be an exception that the resource must not exist. 	; 	it looks like we are swallowing this exception either in JUI or JCORE.; ; MA (5/30/01 6:17:25 PM); 	My guess is that JDOM creates the cu with force. Investigating; ; MA (5/31/01 4:21:13 PM); 	bug was on our side; 	fixed > 115; ; PA (6/1/01 7:01:30 PM); 	build 116.2; 	- made a file Test.java with the following content directly on the filesystem:; 		---- begin of Test.java; 		---- end of Test.java; 	- start class wizard and make a class Test in the same project; 	- Error message comes up and says:; 		Title: NewElementWizard.op_error.title; 		Reason: Core exception: Resource /Test/Test.java must not exitst.; 	- confirm with OK - file is still not overridden/changed; 	- press finish again now -> wizard terminates.; 	- the file Test.java has now this content:; 		---- begin of Test.java; 		---- end of Test.java; 		public class Test {}; ; EG (18.07.2001 15:27:42); 	notice the NL bug in the title of the Error dialog.",3
Build Identifier: 20100917-0705; ; // @formatter:off Eclipse formatter messes up comment indentation here so turn it off for this block; public static enum Environment {;     PROD;       // Production level environments;     STAGING    // Staging; }; // @formatter:on; ; would like to not have to turn off formatter for this kind of code.  with formatter on it does this (which makes the comments not lineup in the editor):; ; public static enum Environment {;     PROD; // Production level environments;     STAGING // Staging; }; ; ; Reproducible: Always,3
"Build 3.2M5; ; When typing following code in editor (without building); there is no error indication in left ruler; where one appears when building.; ; public class X {; 	{; 		(a; 	}; }; ; Note that if removing the open parenthesis; the error icon appears as expected.",3
I20060105; ; Searching to references to a binary member constructor doesnt find any. For example searching for references to java.util.zip.ZipFile$ZipFileInputStream(lonng; ZipFile) in a JDK1.4.1_05 library (with Search JRE libraries enabled) doesnt find the reference in ZipFile#getInputStream(String).,3
Adding overlay on the threads and monitor icons in the debug view to show deadlocks.,3
I20040413; ; - Select a package; that has a bunch of inner classes; in the Package ; Explorer. (I selected org.eclipse.swt.examples.controlexample - its in the ; org.eclipse.swt.examples project).; ; - Choose Open Type Hierarchy (or F4).; ; - After the Hierarchy View opens; you will notice that the meat of what you ; want to look at is somewhat obscured. (In my case; there are really only two ; hierarchies in this package that are interesting: ControlExample; and Tab).; It would be nice if I could choose to hide the inner class hierarchies with an ; easy-to-access tool button on the Hierarchy Views toolbar.; ; (Also would be nice if the inner class hierarchies could come up collapsed in ; the tree; instead of expanded).; ; In SWT; we tend to have a lot of listeners; and we almost never want to see ; them as a class in their own right; because they are only interesting in the ; context of the class that they are defined in. (So it makes more sense to just ; go see them in the compilation unit of the defining class).; ; I suspect that it is more important to allow hiding of anonymous inner classes ; than named ones. The anonymous ones just arent very interesting by themselves.,3
"Given code:; ; package dj.test;; ; import junit.framework.TestCase;; ; /**;  * @author avi;  */; public class CopyOfDjTests extends TestCase {; 	public class Song {}; ; 	public class Dj {}; ; 	public void test00increasePlayCount() throws Exception {; 		Dj dj = new Dj();; 		Song song = new Song();; 		assertEquals(0; dj.playCount(song));; 	}; }; ; (With JUnit libraries imported).  The create method quick fix tries to; generate method playCount with return type Object.  Originally; I blamed; autoboxing; but the same happens when 1.4 compliance is enabled.; ; The issue appears to be that assertEquals is overloaded in TestCase",3
Build ID: I20090313-0100; ; Steps To Reproduce:; eclipse.buildId=I20090313-0100; java.version=1.6.0_13; java.vendor=Sun Microsystems Inc.; BootLoader constants: OS=win32; ARCH=x86; WS=win32; NL=cs_CZ; Framework arguments:  -showlocation; Command-line arguments:  -os win32 -ws win32 -arch x86 -showlocation; ; ; Error; Mon Mar 30 15:09:55 CEST 2009; An internal error occurred during: Compute launch button tooltip.; ; java.lang.NullPointerException; at org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.analyseCode(ConstructorDeclaration.java:70); at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode(TypeDeclaration.java:684); at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(TypeDeclaration.java:218); at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode(TypeDeclaration.java:666); at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(TypeDeclaration.java:253); at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.analyseCode(CompilationUnitDeclaration.java:111); at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:868); at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:518); at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:908); at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:657); at org.eclipse.jdt.internal.junit.launcher.JUnit4TestFinder.internalIsTest(JUnit4TestFinder.java:232); at org.eclipse.jdt.internal.junit.launcher.JUnit4TestFinder.isTest(JUnit4TestFinder.java:200); at org.eclipse.jdt.internal.junit.util.TestSearchEngine.isTestOrTestSuite(TestSearchEngine.java:58); at org.eclipse.jdt.internal.junit.JUnitPropertyTester.isJUnitTest(JUnitPropertyTester.java:112); at org.eclipse.jdt.internal.junit.JUnitPropertyTester.canLaunchAsJUnitTest(JUnitPropertyTester.java:87); at org.eclipse.jdt.internal.junit.JUnitPropertyTester.test(JUnitPropertyTester.java:70); at org.eclipse.core.internal.expressions.Property.test(Property.java:58); at org.eclipse.core.internal.expressions.TestExpression.evaluate(TestExpression.java:99); at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53); at org.eclipse.core.internal.expressions.AdaptExpression.evaluate(AdaptExpression.java:91); at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53); at org.eclipse.core.internal.expressions.IterateExpression.evaluate(IterateExpression.java:150); at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53); at org.eclipse.core.internal.expressions.WithExpression.evaluate(WithExpression.java:72); at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53); at org.eclipse.core.internal.expressions.EnablementExpression.evaluate(EnablementExpression.java:53); at org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension.evalEnablementExpression(LaunchShortcutExtension.java:287); at org.eclipse.debug.internal.ui.contextlaunching.LaunchingResourceManager.getShortcutsForSelection(LaunchingResourceManager.java:439); at org.eclipse.debug.internal.ui.contextlaunching.LaunchingResourceManager.computeLabels(LaunchingResourceManager.java:224); at org.eclipse.debug.internal.ui.contextlaunching.LaunchingResourceManager$2.run(LaunchingResourceManager.java:138); at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55); ; ; ; More information: eclipse-3.5M6; component was set according to similar problems reported earlier (all are fixed),3
"200402122000; ; At the indicated position; ICompilationUnit#codeComplete(int offset;; ICompletionRequestor requestor) doesnt find a completion. Also no completion is; found when I replace the anonymous class by a local class. However; when I; remove the static modifier from main; the method is found.; ; I noticed that the outline doesnt show the local class as soon as I start; typing in the body of run(); but this might not have a connection to this PR.; ; public class XXX {; 	public static void main () {; 		Runnable r = new Runnable() {; 			public void run() {; 				doT // <-- No completions available.; 			}; 			private void doTheThing() { }; 		};; 	}; }",3
I have reproduced the following on both Linux and Win2k installation of Eclipse 3.1; ; When entering the following code (or similar) Eclipst tries to access the; context content help if one enters a dot after an enum variable (eg; after; MyEnumVar) and never comes back - one chan hear it accessing the hard disk; continuously but no amount of waiting will do.  The only resort is to kill; Eclipse and restard.; ; Although I am aware this is not intended and only the result of mis-typing; it; should not cause such a dramatic failure (especially as the ; key - a natural; thing to enter in a list of enums - is just next to the . key - a not so; natural thing to type; admittedly) and might cause a significant amount of; typing to go to waste.; ; I have a feeling this is due to nested recursive calls when trying to resolve types.; ; Code example:; ; public enum MyEnum {;   MyEnumVar(myvar);; // enter dot here -^  ;   AnotherEnumVar(anothervar);; ;   private MyEnum(String s) {;     this.value = new String(s);;   };   private final String value;; ;   public String value() { return s; }; }; ; the code otherwise compiles and works.,3
Im running 3.2M5.; ; In the scrapbook the Ctrl-U shortcut does not work.; ; I have to select Execute from the context menu or click the Evaluate selected text-button in the toolbar.; ; In 3.2M4 it works fine.,3
"Created attachment 113880; proposed fix; ; Build ID: M20080911-1700; ; One interface:;   public interface I1 {; 	Object m();;   }; and two classes:;   public class C1 {; 	public abstract Object m();;   };   public class C2 extends C1 implements I1 { }; ; The compiler reports one error in C1 (OK) and the following in C2:;   The type C2 must implement the inherited abstract method C1.m(); ; Reading the code in MethodVerifier#checkInheritedMethods; it looks very much like this is not exactly intended:; C1.m() should _not_ be reported against C2; because this; is already reported against C1. Instead; I1.m() should be; used in the message.; ; The use of a constant array index 0 is inherited all the way from; MethodVerifier.java version 1.1; at what time reporting happened; _after_ the loop. Version 1.30 extended the loop to include reporting; but did not update the indices.; ; Attaching a micro patch.",3
I am running Sun JDK 1.3.1_06.; ; I have a JAR to which I have attached source.  While viewing a class within ; that JAR; I search for the References to public method from that class.  The ; Search View returns with a list of the references to that method (which are ; also in the same JAR); but when I double-click on any of them I get an error ; pop-up box that says Could Not Open Editor.; ; Nothing gets written to the log file when this happens.; ; If you need anything else; let me know.,3
While trying out the great new Execution Environment support in 3.4 I discovered a particular runtime that I have which could handle 1.5 language and API features however it does not currently support JVMTI for debugging.  So when I went to debug using my newly defined EE I would get an exception from the launched Virtual Machine.; ; If I change the EE property ee.language.level to 1.4 then debugging works but then the compiler will be set also to 1.4 and I wont be able to use 1.5 features that are available in my particular runtime.; ; So either if there was an EE property for which debug agent to use or to use which ever one was hardcoded in the properties file.; ; Im open to suggestions or discussions.,3
"1. Open the type hierarchy for some type (X); 	2. Show inherited methods; 	3. select an inherited method and a method from the opened type (X); 	==> only one editor is opened (the one for X); 	When I only selecet the inherited method then its class is opened.; ; 	Either diable multiple selection or open both editors.; ; ; NOTES:; MA (06.08.2001 17:22:05); 	Now both selections open (behaviour like open in package viewer); 	fix in 200; ; EG (7/12/01 11:01:00 AM); 	open both editors",3
"Using 1216; we dont report a deprecation warning in this case:; 1) Compile this code:; [; public class X {; 	/** ; 	 * @deprecated; 	 */    ; 	public static class Y {; 	}; }; ]; ; 2) delete the source X.java; 3) compile this class putting the previous .class file on the classpath:; class A extends X.Y {; }; ; We dont report any deprecation warning; but we do if you move the javadoc; comment on the top level class.",3
When importing JRE definition settings from a preference settings file; entries in the XML file with the same install location as already present in the preferences store are ignored.; ; The condition in JREPreferenceModifyListener.visit() is as follows:;   if (!names.contains(vm.getName()) && ;       !locations.contains(vm.getInstallLocation())) {;     vms.addVM(vm);;   }; ; I would like to request that an entry is added independent of an already existing entry for the same JRE location; i.e. the second condition above is dropped. We can even argue that an entry being imported with the same name as an existing one is replacing the existing one instead of being ignored.; ; Reason/use case: As the logical name of the JRE is stored in .classpath; and .classpath is usually stored in the source code repository; we must ensure that all developers work with the same mappings of logical names and JRE installation locations. As a result of this; there is usually more than one JRE entry per Java installation path. When we now distribute an import file containing a set of (standard) JRE mappings and the user already has some self-defined entries; then some new mappings are arbitrarily ignored.; ; (BTW: I erroneously assumed some other bug earlier (reported in bug 110588) until I had time to look into the source code...),3
Using I-0427 build; just opening the Java Editor; and selecting something in the ; outline causes following exception. I marked as critical; since once it happens; ; the edit area doesnt repaint correctly and editor must be closed to recover. ; ; Note: I had experimented with -Dorg.eclipse.jdt.internal.ui.projection=true; but saw lots of problems; removed it; then still saw this problem. Im not sure ; if occurs in fresh install (but since I know some dont use outline view much ; any more; thought it might have slipped through unnoticed).; ; ; ; ; !MESSAGE Failed to execute runnable (org.eclipse.jface.text.; Assert$AssertionFailedException: Assertion failed: ); !STACK 0; org.eclipse.swt.SWTException: Failed to execute runnable (org.eclipse.jface.; text.Assert$AssertionFailedException: Assertion failed: );         at java.lang.Throwable.<init>(Throwable.java);         at java.lang.Throwable.<init>(Throwable.java);         at org.eclipse.swt.SWTException.<init>(SWTException.java:73);         at org.eclipse.swt.SWT.error(SWT.java:2659);         at org.eclipse.swt.SWT.error(SWT.java);         at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.; java);         at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1437);         at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1408);         at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.; java:244);         at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140);         at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:; 90);         at org.eclipse.core.internal.runtime.PlatformActivator$1.; run(PlatformActivator.java:280);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.; java:240);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.; java:117);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.; java:84);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.; java:57);         at sun.reflect.DelegatingMethodAccessorImpl.; invoke(DelegatingMethodAccessorImpl.java:59);         at java.lang.reflect.Method.invoke(Method.java:389);         at org.eclipse.core.launcher.Main.basicRun(Main.java:267);         at org.eclipse.core.launcher.Main.run(Main.java:699);         at org.eclipse.core.launcher.Main.main(Main.java:683); Failed to execute runnable (org.eclipse.jface.text.; Assert$AssertionFailedException: Assertion failed: ); !ENTRY org.eclipse.ui 4 4 Apr 29; 2004 03:54:15.897; !MESSAGE *** SWT nested exception; *** SWT nested exception; Reason:; !ENTRY org.eclipse.ui 4 0 Apr 29; 2004 03:54:15.897; !MESSAGE Assertion failed:; !STACK 0; org.eclipse.jface.text.Assert$AssertionFailedException: Assertion failed:;         at java.lang.Throwable.<init>(Throwable.java);         at java.lang.Throwable.<init>(Throwable.java);         at org.eclipse.jface.text.Assert$AssertionFailedException.<init>(Assert.; java:56);         at org.eclipse.jface.text.Assert.isTrue(Assert.java:177);         at org.eclipse.jface.text.Assert.isTrue(Assert.java);         at org.eclipse.jface.text.projection.ProjectionMapping.; toImageRegion(ProjectionMapping.java);         at org.eclipse.jface.text.projection.ProjectionMapping.; toImageRegion(ProjectionMapping.java);         at org.eclipse.jface.text.TextViewer.modelRange2WidgetRange(TextViewer.; java);         at org.eclipse.jface.text.source.AnnotationRulerColumn.; doPaint1(AnnotationRulerColumn.java:504);         at org.eclipse.jface.text.source.AnnotationRulerColumn.; doubleBufferPaint(AnnotationRulerColumn.java:312);         at org.eclipse.jface.text.source.AnnotationRulerColumn.; access$3(AnnotationRulerColumn.java:288);         at org.eclipse.jface.text.source.AnnotationRulerColumn$1.; paintControl(AnnotationRulerColumn.java:207);         at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:; 82);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java);         at org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java);         at org.eclipse.swt.widgets.Control.windowProc(Control.java);         at org.eclipse.swt.widgets.Display.windowProc(Display.java);         at org.eclipse.swt.internal.win32.OS.RedrawWindow(Native Method);         at org.eclipse.swt.widgets.Control.update(Control.java:2847);         at org.eclipse.swt.widgets.Display.update(Display.java:3065);         at org.eclipse.jface.window.Window.runEventLoop(Window.java);         at org.eclipse.jface.window.Window.open(Window.java:650);         at org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:; 287);         at org.eclipse.jface.util.SafeRunnable.handleException(SafeRunnable.; java:50);         at org.eclipse.jface.viewers.StructuredViewer$3.; handleException(StructuredViewer.java:434);         at org.eclipse.core.internal.runtime.InternalPlatform.; handleException(InternalPlatform.java:333);         at org.eclipse.core.internal.runtime.InternalPlatform.; run(InternalPlatform.java);         at org.eclipse.core.runtime.Platform.run(Platform.java);         at org.eclipse.jface.viewers.StructuredViewer.; firePostSelectionChanged(StructuredViewer.java:429);         at org.eclipse.jface.viewers.StructuredViewer.; handlePostSelect(StructuredViewer.java:680);         at org.eclipse.jface.viewers.StructuredViewer$5.; widgetSelected(StructuredViewer.java:698);         at org.eclipse.jface.util.OpenStrategy.; firePostSelectionEvent(OpenStrategy.java:198);         at org.eclipse.jface.util.OpenStrategy.access$4(OpenStrategy.java:193);         at org.eclipse.jface.util.OpenStrategy$3.run(OpenStrategy.java:334);         at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35);         at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.; java);         at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1437);         at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1408);         at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.; java:244);         at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140);         at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:; 90);         at org.eclipse.core.internal.runtime.PlatformActivator$1.; run(PlatformActivator.java:280);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.; java:240);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.; java:117);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.; java:84);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.; java:57);         at sun.reflect.DelegatingMethodAccessorImpl.; invoke(DelegatingMethodAccessorImpl.java:59);         at java.lang.reflect.Method.invoke(Method.java:389);         at org.eclipse.core.launcher.Main.basicRun(Main.java:267);         at org.eclipse.core.launcher.Main.run(Main.java:699);         at org.eclipse.core.launcher.Main.main(Main.java:683); Assertion failed:; ; ; ; Note: I had experimented with -Dorg.eclipse.jdt.internal.ui.projection=true; but saw lots of problems; removed it; then still saw this problem.,3
"20040128 (uses jdt.core from I20040128 and HEAD); ; - select IOException from foo signature.; - local rename; press RR; ; -> Illegal Argument Exception; ; package x;; ; import java.io.IOException;; import java.io.Reader;; ; public class B {; 	; 	private Reader reader;; 	; 	public void dispose() {; 		if (reader != null) {; 			try {; 				reader.; 					close() ; // my formatting; 			} catch (IOException e) {; 			}; 		}; 	}; 	; 	/**; 	 * @param name1; 	 * @throws IOException; 	 */; 	public void foo(int name1) throws IOException {; 		; 	}; 	; 		; }; ; java.lang.IllegalArgumentException: Argument not valid; 	at java.lang.Throwable.<init>(Throwable.java); 	at java.lang.Throwable.<init>(Throwable.java:73); 	at org.eclipse.swt.SWT.error(SWT.java:2594); 	at org.eclipse.swt.SWT.error(SWT.java:2538); 	at; org.eclipse.jface.text.DocumentAdapter.replaceTextRange(DocumentAdapter.java:196); 	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:6017); 	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6953); 	at org.eclipse.swt.custom.StyledText.doContent(StyledText.java:2554); 	at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:5322); 	at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:5345); 	at org.eclipse.swt.custom.StyledText$8.handleEvent(StyledText.java:5070); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java); 	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3037); 	at org.eclipse.swt.widgets.Control.windowProc(Control.java); 	at org.eclipse.swt.widgets.Display.windowProc(Display.java); 	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method); 	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1530); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1506); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:265); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139); 	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47); 	at; org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:248); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79); 	at; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)",3
The debug platform now provides support for launch shortcut key-bindings; ; similar to the open view support in the workbench. From launchShortcuts ext ; pt schema:; ; Since 3.1; the debug platform registers a command handler for each launch ; shortcut and its applicable modes to allow clients to define key-bindings for ; a launch shortcut. The command id for a handler is generated as the launch ; shortcut id attribute; followed by a dot and the applicable launch mode. For ; example; the command id for the above launch shortcut example would be ; com.example.ExampleLaunchShortcutId.debug for launching in debug mode. A ; command and key binding could be defined as follows; to bind ALT-SHIFT-D; E ; to the launch shortcut.; ;    <extension point=org.eclipse.ui.commands>;       <command;             name=Debug Example Launch;             description=Debug Example Launch;             categoryId=org.eclipse.debug.ui.category.run;             id=com.example.ExampleLaunchShortcutId.debug>;       </command>;       <keyBinding;             keySequence=M3+M2+D E;             contextId=org.eclipse.ui.globalScope;             commandId=com.example.ExampleLaunchShortcutId.debug;             ; keyConfigurationId=org.eclipse.ui.defaultAcceleratorConfiguration>;       </keyBinding>;    </extension>,3
Just checked out the new Source > Generate equals and hashcode feature. I wonder why in the method; the classes of the two Objects are not compared.; ; I can see a check for super.equals and a cast afterwards. I had expected something like; ; if (!getClass().equals(obj.getClass()); return false;; ; Ben,3
I changed a method name using Refactor / Rename.; ; This change did not propagate to a @link tag (in a different source file) that; refered to the old method name.,3
With M9 i get now and then a classcast exception when a breakpoints hits; When i see this class cast exception eclipse hangs.; ; java.lang.ClassCastException: ; org.eclipse.jdt.internal.debug.core.model.JDINullValue;         at ; org.eclipse.jdt.internal.debug.core.logicalstructures.MapStructureType$1.run; (MapStructureType.java:33);         at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation; (JDIThread.java:659); ; ; when it hangs i get this thread dump:; ; Console Polling Thread prio=7 tid=0x01684e50 nid=0x160 waiting on condition [0; x03d4f000..0x03d4fc68];         at java.lang.Thread.sleep(Native Method);         at org.eclipse.debug.internal.ui.views.console.ConsoleDocumentPartitione; r.pollAndSleep(ConsoleDocumentPartitioner.java:565);         at org.eclipse.debug.internal.ui.views.console.ConsoleDocumentPartitione; r$1.run(ConsoleDocumentPartitioner.java:549);         at java.lang.Thread.run(Thread.java:566); ; org.eclipse.jdt.debug: JDI Event Dispatcher prio=7 tid=0x0164b308 nid=0xe54 in;  Object.wait() [0x03a4f000..0x03a4fce8];         at java.lang.Object.wait(Native Method);         - waiting on <0x5059bd00> (a org.eclipse.jdi.internal.connect.PacketRece; iveManager);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.jdi.internal.connect.PacketReceiveManager.waitForPacketAv; ailable(PacketReceiveManager.java:168);         at org.eclipse.jdi.internal.connect.PacketReceiveManager.getCommand(Pack; etReceiveManager.java:93);         - locked <0x5059bd00> (a org.eclipse.jdi.internal.connect.PacketReceiveM; anager);         at org.eclipse.jdi.internal.MirrorImpl.getCommandVM(MirrorImpl.java:276); ;         at org.eclipse.jdi.internal.event.EventQueueImpl.remove(EventQueueImpl.j; ava:63);         at org.eclipse.jdi.internal.event.EventQueueImpl.remove(EventQueueImpl.j; ava:48);         at org.eclipse.jdt.internal.debug.core.EventDispatcher.run(EventDispatch; er.java:213);         at java.lang.Thread.run(Thread.java:566); ; Packet Send Manager prio=7 tid=0x0168c190 nid=0x898 in Object.wait() [0x03c4f0; 00..0x03c4f9e8];         at java.lang.Object.wait(Native Method);         - waiting on <0x5059be80> (a org.eclipse.jdi.internal.connect.PacketSend; Manager);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.jdi.internal.connect.PacketSendManager.sendAvailablePacke; ts(PacketSendManager.java:94);         - locked <0x5059be80> (a org.eclipse.jdi.internal.connect.PacketSendMana; ger);         at org.eclipse.jdi.internal.connect.PacketSendManager.run(PacketSendMana; ger.java:54);         at java.lang.Thread.run(Thread.java:566); ; Packet Receive Manager prio=7 tid=0x0168c008 nid=0x2f8 runnable [0x03b4f000..0; x03b4fd68];         at java.net.SocketInputStream.socketRead0(Native Method);         at java.net.SocketInputStream.read(SocketInputStream.java:129);         at java.net.SocketInputStream.read(SocketInputStream.java:182);         at java.io.DataInputStream.readInt(DataInputStream.java:450);         at org.eclipse.jdi.internal.jdwp.JdwpPacket.read(JdwpPacket.java:124);         at org.eclipse.jdi.internal.connect.PacketReceiveManager.readAvailablePa; cket(PacketReceiveManager.java:224);         at org.eclipse.jdi.internal.connect.PacketReceiveManager.run(PacketRecei; veManager.java:70);         at java.lang.Thread.run(Thread.java:566); ; Input Stream Monitor prio=7 tid=0x0164b490 nid=0xc1c in Object.wait() [0x0394f; 000..0x0394fae8];         at java.lang.Object.wait(Native Method);         - waiting on <0x5059bfc8> (a java.lang.Object);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStr; eamMonitor.java:124);         - locked <0x5059bfc8> (a java.lang.Object);         at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamM; onitor.java:99);         at org.eclipse.debug.internal.core.InputStreamMonitor$1.run(InputStreamM; onitor.java:75);         at java.lang.Thread.run(Thread.java:566); ; Output Stream Monitor prio=7 tid=0x0164a670 nid=0x8a8 runnable [0x0352f000..0x; 0352fb68];         at java.io.FileInputStream.readBytes(Native Method);         at java.io.FileInputStream.read(FileInputStream.java:177);         at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStream; Monitor.java:132);         at org.eclipse.debug.internal.core.OutputStreamMonitor.access$1(OutputSt; reamMonitor.java:124);         at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStrea; mMonitor.java:177);         at java.lang.Thread.run(Thread.java:566); ; Output Stream Monitor prio=7 tid=0x0164a7f8 nid=0x100 runnable [0x0342f000..0x; 0342fbe8];         at java.io.FileInputStream.readBytes(Native Method);         at java.io.FileInputStream.read(FileInputStream.java:194);         at java.io.BufferedInputStream.read1(BufferedInputStream.java:228);         at java.io.BufferedInputStream.read(BufferedInputStream.java:285);         - locked <0x505a0158> (a java.io.BufferedInputStream);         at java.io.FilterInputStream.read(FilterInputStream.java:90);         at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStream; Monitor.java:132);         at org.eclipse.debug.internal.core.OutputStreamMonitor.access$1(OutputSt; reamMonitor.java:124);         at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStrea; mMonitor.java:177);         at java.lang.Thread.run(Thread.java:566); ; Worker-14 prio=5 tid=0x01619de0 nid=0x400 in Object.wait() [0x0332f000..0x0332; fbe8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:209);         - locked <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:23; 6);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:59); ; Worker-13 prio=5 tid=0x016f79a0 nid=0xd40 in Object.wait() [0x0312f000..0x0312; fc68];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:209);         - locked <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:23; 6);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:59); ; Worker-12 prio=5 tid=0x01266518 nid=0xbe4 in Object.wait() [0x0302f000..0x0302; fce8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:209);         - locked <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:23; 6);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:59); ; Worker-11 prio=5 tid=0x013afb70 nid=0x688 runnable [0x02f2f000..0x02f2fd68];         at java.lang.ProcessImpl.waitFor(Native Method);         at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorJob.run(Run; timeProcess.java:362);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66); ; Worker-10 prio=5 tid=0x01608ff8 nid=0x224 in Object.wait() [0x025ef000..0x025e; f9e8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:209);         - locked <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:23; 6);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:59); ; org.eclipse.jdt.internal.ui.text.JavaReconciler daemon prio=2 tid=0x026988d8 n; id=0xd8c in Object.wait() [0x0382f000..0x0382fae8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4e7ffea8> (a org.eclipse.jface.text.reconciler.DirtyRegi; onQueue);         at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread; .run(AbstractReconciler.java:172);         - locked <0x4e7ffea8> (a org.eclipse.jface.text.reconciler.DirtyRegionQu; eue); ; Java indexing daemon prio=4 tid=0x011cdfe0 nid=0x848 in Object.wait() [0x0238f; 000..0x0238fd68];         at java.lang.Object.wait(Native Method);         - waiting on <0x4de3a880> (a org.eclipse.jdt.internal.core.search.indexi; ng.IndexManager);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobMan; ager.java:344);         - locked <0x4de3a880> (a org.eclipse.jdt.internal.core.search.indexing.I; ndexManager);         at java.lang.Thread.run(Thread.java:566); ; Thread-1 prio=7 tid=0x011ca9a0 nid=0xbd4 in Object.wait() [0x021bf000..0x021bf; 9e8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4de5ae18> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116);         - locked <0x4de5ae18> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132);         at org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceC; leanerThread.run(ActionContributionItem.java:196); ; Thread-0 prio=7 tid=0x01503e28 nid=0x46c in Object.wait() [0x020bf000..0x020bf; a68];         at java.lang.Object.wait(Native Method);         - waiting on <0x4de5aea0> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116);         - locked <0x4de5aea0> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132);         at org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceC; leanerThread.run(ActionContributionItem.java:196); ; Start Level Event Dispatcher daemon prio=5 tid=0x00987960 nid=0xa44 in Object.; wait() [0x0195f000..0x0195fb68];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d4fe110> (a org.eclipse.osgi.framework.eventmgr.EventTh; read);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThr; ead.java:162);         - locked <0x4d4fe110> (a org.eclipse.osgi.framework.eventmgr.EventThread; );         at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:; 100); ; Framework Event Dispatcher daemon prio=5 tid=0x00987748 nid=0xf24 in Object.wa; it() [0x0185f000..0x0185fbe8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d4fe178> (a org.eclipse.osgi.framework.eventmgr.EventTh; read);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThr; ead.java:162);         - locked <0x4d4fe178> (a org.eclipse.osgi.framework.eventmgr.EventThread; );         at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:; 100); ; Low Memory Detector daemon prio=5 tid=0x008ff060 nid=0x430 runnable [0x0000000; 0..0x00000000]; ; CompilerThread0 daemon prio=10 tid=0x008fdd28 nid=0x55c waiting on condition [; 0x00000000..0x00f5fa58]; ; Signal Dispatcher daemon prio=10 tid=0x008fd0d8 nid=0xefc waiting on condition;  [0x00000000..0x00000000]; ; Finalizer daemon prio=9 tid=0x008f4188 nid=0x8e4 in Object.wait() [0x00d5f000.; .0x00d5fa68];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d4fe360> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116);         - locked <0x4d4fe360> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132);         at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159); ; Reference Handler daemon prio=10 tid=0x008f2ce8 nid=0x1f0 in Object.wait() [0x; 00c5f000..0x00c5fae8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d4fe3e0> (a java.lang.ref.Reference$Lock);         at java.lang.Object.wait(Object.java:468);         at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:118);         - locked <0x4d4fe3e0> (a java.lang.ref.Reference$Lock); ; main prio=7 tid=0x000366d0 nid=0xeb0 in Object.wait() [0x0007e000..0x0007fc3c]; ;         at java.lang.Object.wait(Native Method);         - waiting on <0x4bfa0850> (a org.eclipse.jdt.internal.debug.core.logical; structures.MapStructureType);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.jdt.internal.debug.core.logicalstructures.LogicalObjectSt; ructureInterfaceType.getLogicalStructure(LogicalObjectStructureInterfaceType.jav; a:132);         - locked <0x4bfa0850> (a org.eclipse.jdt.internal.debug.core.logicalstru; ctures.MapStructureType);         - locked <0x4bfa0850> (a org.eclipse.jdt.internal.debug.core.logicalstru; ctures.MapStructureType);         at org.eclipse.debug.internal.core.LogicalStructureType.getLogicalStruct; ure(LogicalStructureType.java:91);         at org.eclipse.debug.internal.ui.views.variables.VariablesViewContentPro; vider.getLogicalValue(VariablesViewContentProvider.java:222);         at org.eclipse.debug.internal.ui.views.variables.VariablesViewContentPro; vider.getValueChildren(VariablesViewContentProvider.java:124);         at org.eclipse.debug.internal.ui.views.variables.VariablesViewContentPro; vider.getModelSpecificChildren(VariablesViewContentProvider.java:109);         at org.eclipse.debug.internal.ui.views.variables.VariablesViewContentPro; vider.getChildren(VariablesViewContentProvider.java:89);         at org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren(AbstractT; reeViewer.java:703);         at org.eclipse.jface.viewers.AbstractTreeViewer.isExpandable(AbstractTre; eViewer.java:1144);         at org.eclipse.jface.viewers.AbstractTreeViewer.updatePlus(AbstractTreeV; iewer.java:1597);         at org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren(AbstractT; reeViewer.java:1545);         at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct(Ab; stractTreeViewer.java:1038);         at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(Abstract; TreeViewer.java:1013);         at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(Abstract; TreeViewer.java:976);         at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(Abstract; TreeViewer.java:964);         at org.eclipse.jface.viewers.StructuredViewer$7.run(StructuredViewer.jav; a:925);         at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(Struct; uredViewer.java:863);         at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.j; ava:923);         at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.j; ava:882);         at org.eclipse.debug.internal.ui.views.variables.VariablesViewer.refresh; (VariablesViewer.java:69);         at org.eclipse.debug.internal.ui.views.variables.ToggleLogicalStructureA; ction$1.run(ToggleLogicalStructureAction.java:57);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69); ;         at org.eclipse.debug.internal.ui.views.variables.ToggleLogicalStructureA; ction.valueChanged(ToggleLogicalStructureAction.java:55);         at org.eclipse.debug.internal.ui.views.variables.ToggleLogicalStructureA; ction.run(ToggleLogicalStructureAction.java:47);         at org.eclipse.debug.ui.AbstractDebugView$3.run(AbstractDebugView.java:5; 91);         at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35);         at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.ja; va:106);         - locked <0x506d8eb0> (a org.eclipse.swt.widgets.RunnableLock);         at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363);         at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334);         at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.jav; a:253);         at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141);         at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:97; );         at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformAct; ivator.java:307);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.ja; va:256);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.ja; va:127);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.; java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces; sorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:494);         at org.eclipse.core.launcher.Main.basicRun(Main.java:185);         at org.eclipse.core.launcher.Main.run(Main.java:638);         at org.eclipse.core.launcher.Main.main(Main.java:622); ; VM Thread prio=10 tid=0x008f0468 nid=0x954 runnable; ; VM Periodic Task Thread prio=10 tid=0x00900160 nid=0x9a4 waiting on condition;         at ; org.eclipse.jdt.internal.debug.core.logicalstructures.LogicalObjectStructureInte; rfaceType$1.run(LogicalObjectStructureInterfaceType.java:119);         at org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run; (JDIThread.java:2510);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66),3
Heres a fragment of the log file of one of our tests where in maven is downloading all the jars that jetty6 needs.; ; Downloading: http://repo1.maven.org/maven2/org/eclipse/jdt/core/3.1.0/core-3.1.0.jar; 3472K downloaded; [WARNING] *** CHECKSUM FAILED - Error retrieving checksum file for org/eclipse/jdt/core/3.1.0/core-3.1.0.jar - IGNORING,3
F1; class java.util.Properies; jdt 1.3; ; when it does not have source attached some fields are displayed incorrectly; for example: keyValueSeparators,3
"I20050324; ; On the following test case:; @Ann(at| // code complete here; public class A {; }; @interface Ann {; 	String attr();; }; ; I got the following IllegalArgumentException:; java.lang.IllegalArgumentException;         at org.eclipse.jdt.core.Signature.getParameterCount(Signature.java:950);         at org.eclipse.jdt.core.Signature.getParameterTypes(Signature.java:1083);         at; org.eclipse.jdt.internal.ui.text.java.ProposalLabelProvider.appendUnboundedParameterList(ProposalLabelProvider.java:73);         at; org.eclipse.jdt.internal.ui.text.java.ProposalLabelProvider.createMethodProposalLabel(ProposalLabelProvider.java:168);         at; org.eclipse.jdt.internal.ui.text.java.ProposalLabelProvider.createLabel(ProposalLabelProvider.java:323);         at; org.eclipse.jdt.internal.ui.text.java.ResultCollector.createAnnotationAttributeReferenceProposal(ResultCollector.java:392);         at; org.eclipse.jdt.internal.ui.text.java.ResultCollector.acceptAnnotationAttributeReference(ResultCollector.java:387);         at; org.eclipse.jdt.internal.ui.text.java.ResultCollector.accept(ResultCollector.java:506);         at; org.eclipse.jdt.internal.codeassist.CompletionEngine.findAnnotationAttributes(CompletionEngine.java:1264);         at; org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(CompletionEngine.java:874);         at; org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(CompletionEngine.java:1167);         at org.eclipse.jdt.internal.core.Openable.codeComplete(Openable.java:119);         at; org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(CompilationUnit.java:300);         at; org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(CompilationUnit.java:293);         at; org.eclipse.jdt.internal.ui.text.java.JavaCompletionProcessor.internalComputeCompletionProposals(JavaCompletionProcessor.java:358);         at; org.eclipse.jdt.internal.ui.text.java.JavaCompletionProcessor.computeCompletionProposals(JavaCompletionProcessor.java:332);         at; org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:1470);         at; org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:250);         at; org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$7(CompletionProposalPopup.java:247);         at; org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:206);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69);         at; org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:201);         at; org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1319);         at; org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:183);         at; org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:82);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69);         at; org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:80);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:1003);         at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:181);         at; org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:108);         at org.eclipse.core.commands.Command.execute(Command.java:331);         at; org.eclipse.core.commands.ParameterizedCommand.execute(ParameterizedCommand.java:390);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:452);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:741);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:784);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:543);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:486);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:110);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82);         at org.eclipse.swt.widgets.Display.filterEvent(Display.java:777);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:866);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:851);         at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:879);         at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:875);         at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1182);         at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3121);         at org.eclipse.swt.widgets.Control.windowProc(Control.java:3024);         at org.eclipse.swt.widgets.Display.windowProc(Display.java:3466);         at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method);         at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1624);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2525);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1538);         at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1502);         at; org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:306);         at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143);         at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103);         at; org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228);         at; org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:338);         at; org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:151);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:324);         at org.eclipse.core.launcher.Main.invokeFramework(Main.java:268);         at org.eclipse.core.launcher.Main.basicRun(Main.java:260);         at org.eclipse.core.launcher.Main.run(Main.java:887);         at org.eclipse.core.launcher.Main.main(Main.java:871)",3
The Eclipse NLS tooling should better support the the new Eclipse string externalization pattern added in ; 3.1; along with ways to help developers with unused keys and unused property file entries. [JDT UI],4
3.0 RC2; ; 1) Create a project with two source folders (say foo and bla).; 2) in both source folders; create a package org.test.; 3) In the first source folder; create class org.test.Bla; 4) In the second source folder create class org.test.Bla; ; 5) Observe: the new class wizard accepts the creation of the second Bla class; without issueing a warning.,4
Please provide a refactoring to inline a method call.; ; Provide an option to inline *all* calls of a specific method and remove the ; method.,4
Build 20011206.; ; 1. Within the packages view of the Java Perspective; expand the JRE_LIB jar.; 2. Go to the com.sun.java.swing.plaf.motif.icons folder and expand it.; 3. Select a *.gif file and attempt to display its properties.; ; You get the following message ==> No property pages for .,4
3.1 RC4; ; Scenario is:; - create a new Java project; without any src/bin;; - create a new class X there;; - create a source folder named src into the project; the result (see attachment; 1) is that X pops out; the default package being removed from the view;; - right-click on the project and select Build Path/Use as Source Folder; the; result (see attachment 2) is that X goes back to the default package; note also; that src gets excluded from the newly (re)created root source folder.; ; I woudl suggest that some action be taken to avoid the step shown by the first; attachment. The best behavior may not be the one illustrated by attachment 2; (after all; if were creating multiple source folders; this is probably not to; keep some sources at the root). We may prefer to move existing sources to the; newly created source folder; with a user confirmation; with or without; alternative choices presented to her.; ; The most probable scenario is that the user started some development or got some; new code that has no source folder and decides she needs one. Depending on; whether she needs to part existing types into multiple folders or not; the move; all option is more or less relevant. Anyway; getting rid of package information; is probably not OK.; ; Note that the same behavior is observable when using a non default package (in; that case; the package shows up as a regular directory; containing an X.java file).,4
On the JRE tab of an Ant launch config; you can specify an alternate java ; executable. The default is listed as javaw. javaw doesnt exist in non-Win32 ; versions of Suns JDK.,4
currently; you have to select a method,4
Hi;; when a byte or a byte array is displayed in the variables view; a popup menu or tooltip  would be handy to display the content as decimal; hexadecimal; octal or character. I know this is configurable in the debug preferences but for a quick inspection of a bytes value this would be very handy.; ; Michael,4
I20030205; ; 1. Select SystemSummaryEditr; 2. Add some String for externalization; 3. Save; 4. Source -> Externalize Strings; 5. Press Next; 6. Browse for the package; 7. Select org.eclipse.ui.internal; 8. Press OK;    Observe: the Finish button remains disabled and the status line says;    Incorrect package,4
"Not sure if this is the right place for this PR but...; 	; 	In a self host environment:; 	I was writing a small java project that uses native code. But somehow; when running inside eclipse;; the DLL was not being found. Running outside eclipse worked if I put the DLL in my bin directory.; ; 	It turned out that my user.dir property was wrong (or at least not as I expected it to be).; It had the value: ; 										D:\self_hosting\0.104a\eclipse; 	And this is my development environment. Not my target (where the project is).; ; 	The workaround was to pass in some VM arguments to my .java file:; 										-Duser.dir=c:\eclipse\plugins\NativeOutput; 	so that my user.dir is my target and not my development environment.; ; 	It seems that the user.dir should be automatically set to the location of the program and not; a random (unexpected) value.; ; NOTES:; EG (5/23/2001 10:14:25 AM); 	on 1.3 we can launch a program in a particular folder.; 	we could use reflection to try this call.; 	defer; ; EG (24.07.2001 22:15:46); 	we could also provide an execution arg where the user can define the current working directory.; 	(the class path would have to be adjusted accordingly); ; 	The 1.3 call would have to be invoked via reflection so that we dont add a dependency on 1.3",4
It would be nice if there were an extension point for Organize Imports so that; plugins could contribute items and actions to the list of possible imports for a; given type.  ; ; My situation is that I have a classpath container that is populated from a set; of jars that are in a repository.  When I see an unknown type; I can look in the; repository and see if that simpleTypeName is known in the repository.  If so; I; can let the user select which type they want (there may be more than one match);; add the appropriate jar to the classpath container; and add the import for the; type to the source file.  ; ; This is very handy in situations where you know the type name but not the jar;; or where you paste code in from another location.,4
It would be nice if the Open Type dialog gave you the count of types in the ; list box that match the expression entered. It would help give a sense of the ; size of ones type library as well as be fun to watch the number go down as one ; refines an expression.; ; Gary,5
Currently the selection provided by the Call Hierarchy view simply contains a collection of the selected methods. This means that the actual call hierarchy information displayed in the view is not available to consumers.; ; I would like to have the structural information available to me because I could put it to good use. I can think of 2 ways to achieve that:; 1. Provide an ITreeSelection instead of an IStructuredSelection.; 2. Expose something similar to MethodWrapper in the selection and let it adapt to IMethod.; ; The first approach seems easier to integrate into the IDE; but the second approach could expose important information like the call direction (caller or callee mode).; ; On a related note; I think exposing the functionality provided by the subclasses of MethodWrapper (CalleeMethodWrapper; CallerMethodWrapper) would be a very good idea. To be specific; it would be nice to have an API that gives me callers and callees of a method.,5
typing dot after f.e. java.security.MessageDigest opens the list that includes ; accessors:;  access$000(MessageDigest arg0) String;  access$100(MessageDigest arg0) Provider;  access$102(MessageDigest arg0; Provider arg1) Provider;  access$200(MessageDigest arg0) int;  access$202(MessageDigest arg0; int arg1) int,5
"Build F1 + latest CVS code as of 20020528; Linux-GTK; ; 1. Bring up the launch config dialog in a new workspace; 2. Select the Remote Java Application config type; 3. Click New. The following exception is written to the log.; ; !ENTRY org.eclipse.core.resources 1 4 May 28; 2002 08:50:18.618; !MESSAGE Unhandled exception caught in event loop.; !ENTRY org.eclipse.ui 4 0 May 28; 2002 08:50:18.623; !MESSAGE -1; !STACK 0; java.lang.ArrayIndexOutOfBoundsException: -1; 	at ; org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab.handleConnectorComboModified(JavaConnectTab.java:201); 	at ; org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab$3.modifyText(JavaConnectTab.java:163); 	at ; org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:179); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:810); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795); 	at org.eclipse.swt.widgets.Combo.processModify(Combo.java:700); 	at org.eclipse.swt.widgets.Widget.processEvent(Widget.java:584); 	at org.eclipse.swt.widgets.Display.windowProc(Display.java:1731); 	at org.eclipse.swt.internal.gtk.OS.gtk_editable_delete_text(Native ; Method); 	at org.eclipse.swt.widgets.Combo.setText(Combo.java:1059); 	at ; org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab.updateConnectionFromConfig(JavaConnectTab.java:301); 	at ; org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab.initializeFrom(JavaConnectTab.java:274); 	at ; org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.initializeFrom(AbstractLaunchConfigurationTabGroup.java:78); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.setLaunchConfiguration(LaunchConfigurationDialog.java:1336); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.selectionChanged(LaunchConfigurationDialog.java:1265); 	at ; org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:147); 	at ; org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1154); 	at ; org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:903); 	at org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:342); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.handleNewAction(LaunchConfigurationDialog.java:1806); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog$ButtonActionNew.run(LaunchConfigurationDialog.java:2854); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog$1.widgetSelected(LaunchConfigurationDialog.java:2823); 	at ; org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:85); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:815); 	at ; org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1379); 	at ; org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1223); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:551); 	at org.eclipse.jface.window.Window.open(Window.java:538); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.doLastLaunchedConfig(LaunchConfigurationDialog.java:530); 	at ; org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.open(LaunchConfigurationDialog.java:491); 	at ; org.eclipse.debug.internal.ui.actions.OpenLaunchConfigurationsAction.run(OpenLaunchConfigurationsAction.java:133); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:590); 	at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407); 	at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361); 	at ; org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352); 	at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:815); 	at ; org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1379); 	at ; org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1223); 	at ; org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1085); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1068); 	at ; org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:432); 	at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24)",1
F2; ; - workspace with JDK 1.3.1; - now install JDK 1.4.1 and make it the default JDK using Preference->Java->;   Install JRES; ; observe: workspace doesnt rebuild.,1
20021216; open java build path page; libraries tab; expand rt.jar node; select javadoc; edit; put this in the field: http://java.sun.com/j2se/1.3/docs/api/; validate; it says that everything is fine; OK; see: nothing happens - javadoc is still (None); ; eature as if not not being there,1
"DW (8/10/01 11:00:27 AM); 	When a breakpoint is hit while doing a step; the step event may be received; 	after the breakpoint. The breakpoint has already ended (aborted) the step.; 	It looks like our model does more work than necessary to process the step; 	event.",1
"While trying to debug a class using native methods on a Windows system; we have ; found that breakpoints are simply ignored no matter how many are added or where ; they are in the code. This happens whether the native methods are actually used ; or not - simply declaring them seems to cause the problem.; ; I have a very simple HelloWorld testcase that demonstrates the problem. To run ; this; compile the c file to a dll and add the line -Djava.library.path=<path> ; to the VM arguments. When you debug the class; the debugger wont stop on the ; breakpoint and will just run the class to completion.; ; ; HelloWorld.java; ; public class HelloWorld {; 	private native void print();; ; 	public static void main(String[] args) {; 		new HelloWorld().print();; 	}; 	; 	static {; 		System.loadLibrary(HelloWorld);; 	}; }; ; ; HelloWorld.h; ; /* DO NOT EDIT THIS FILE - it is machine generated */; #include <jni.h>; /* Header for class HelloWorld */; ; #ifndef _Included_HelloWorld; #define _Included_HelloWorld; #ifdef __cplusplus; extern C {; #endif; /*;  * Class:     HelloWorld;  * Method:    print;  * Signature: ()V;  */; JNIEXPORT void JNICALL Java_HelloWorld_print;   (JNIEnv *; jobject);; ; #ifdef __cplusplus; }; #endif; #endif; ; ; HelloWorld.c; ; #include <jni.h>; #include <stdio.h>; #include HelloWorld.h; ; JNIEXPORT void JNICALL; Java_HelloWorld_print(JNIEnv *env; jobject obj); {; 	printf(Hello World);; 	return;; }",1
TestCase (source follows):; Set a suspendVM modification watchpoint on myString; Set a breakpoint on line 30; ; After hitting the watchpoint; resume the VM.; ; You hit the breakpoint at line 30; but you get the top stack frame as <not ; responding> and it seems to be the stack frame from hitting the watchpoint.,1
"The Junit Workbench Launcher does not work due to a NullPointerException trying ; to start the Launcher.; ; I am using org.eclipse.pde.junit dated 20020213.; ; STEPS; 1) Select any Junit test that requires the workbench; 2) Select Run->JUnit Workbench; ; Internal Error ; ; java.lang.NullPointerException; 	at org.eclipse.debug.internal.core.Launcher.launch(Launcher.java:104); 	at org.eclipse.debug.internal.ui.actions.LaunchSelectionAction$1.run; (LaunchSelectionAction.java:67); 	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56); 	at org.eclipse.debug.internal.ui.actions.LaunchSelectionAction.run; (LaunchSelectionAction.java:63); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:466); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection; (ActionContributionItem.java:407); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent; (ActionContributionItem.java:361); 	at org.eclipse.jface.action.ActionContributionItem.access$0; (ActionContributionItem.java:352); 	at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent; (ActionContributionItem.java:47); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1420); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:692); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:675); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:777); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:151); 	at org.eclipse.core.launcher.Main.run(Main.java:502); 	at org.eclipse.core.launcher.Main.main(Main.java:362)",1
If the selection cant be resolved an exception occurs.; Test Case:; - open Java editor; - select something that does not resolve (e.g. new); ; Note: F3 works i.e. does nothing (no beep; no status info),1
"I tried to search for all references to Action.setImageDescriptor() in the ; workspace.  The search appeared to complete; but then it showed an error ; message.  After pressing OK; I got at least partial search results in the ; search view.; ; I tried the search again with the same results.; ; The following error was logged:; ; java.lang.reflect.InvocationTargetException: java.lang.NullPointerException; 	at org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getMethods; (SourceTypeBinding.java(Compiled Code)); 	at ; org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getExactConstructor; (SourceTypeBinding.java:353); 	at org.eclipse.jdt.internal.compiler.lookup.BlockScope.getConstructor; (BlockScope.java:923); 	at org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.resolve; (ExplicitConstructorCall.java:243); 	at ; org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.checkName; (ConstructorDeclaration.java:126); 	at ; org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve; (AbstractMethodDeclaration.java:258); 	at org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.resolve; (ConstructorDeclaration.java:322); 	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve; (TypeDeclaration.java:726); 	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve; (TypeDeclaration.java:754); 	at ; org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve; (CompilationUnitDeclaration.java:188); 	at ; org.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatchesInCo; mpilationUnit(MatchingOpenable.java:282); 	at ; org.eclipse.jdt.internal.core.search.matching.MatchingOpenable.locateMatches; (MatchingOpenable.java:144); 	at ; org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches; (MatchLocator.java:1092); 	at ; org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches; (MatchLocator.java:426); 	at org.eclipse.jdt.core.search.SearchEngine.search; (SearchEngine.java:344); 	at org.eclipse.jdt.core.search.SearchEngine.search; (SearchEngine.java:290); 	at org.eclipse.jdt.internal.ui.search.JavaSearchOperation.execute; (JavaSearchOperation.java:79); 	at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run; (WorkspaceModifyOperation.java:64); 	at org.eclipse.core.internal.resources.Workspace.run; (Workspace.java:1232); 	at org.eclipse.ui.actions.WorkspaceModifyOperation.run; (WorkspaceModifyOperation.java:78); 	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run; (ModalContext.java:98); ; (Build 20020125)",1
20020123 with the latest plugins isnt showing new breakpoints in the; breakpoints view. I have to close the view and reopen it for my breakpoints to; appear. Im using only simple line breakpoints.,1
"20020521; 1. have a workspace with some projects; including a closed one.; 2. open javadoc export wizard; ; walkback printed to log:; ; Java Model Exception: Java Model Status [Test does not exist.]; 	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException; (JavaElement.java:501); 	at org.eclipse.jdt.internal.core.JavaProject.openWhenClosed; (JavaProject.java:1625); 	at org.eclipse.jdt.internal.core.JavaElement.openHierarchy; (JavaElement.java:522); 	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo; (JavaElement.java(Compiled Code)); 	at org.eclipse.jdt.internal.core.JavaElement.getChildren; (JavaElement.java:266); 	at org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoots; (JavaProject.java:1096); 	at org.eclipse.jdt.internal.core.JavaProject.getPackageFragments; (JavaProject.java:1145); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocProjectContentProvider.getEleme; nts(JavadocProjectContentProvider.java:54); 	at org.eclipse.jface.viewers.StructuredViewer.getRawChildren; (StructuredViewer.java:397); 	at org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren; (AbstractTreeViewer.java:570); 	at org.eclipse.jface.viewers.StructuredViewer.getFilteredChildren; (StructuredViewer.java:346); 	at org.eclipse.jface.viewers.StructuredViewer.getSortedChildren; (StructuredViewer.java:447); 	at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren; (AbstractTreeViewer.java:241); 	at org.eclipse.jface.viewers.AbstractTreeViewer$2.run; (AbstractTreeViewer.java:646); 	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection; (StructuredViewer.java:688); 	at org.eclipse.jface.viewers.CheckboxTreeViewer.preservingSelection; (CheckboxTreeViewer.java:324); 	at org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged; (AbstractTreeViewer.java:638); 	at org.eclipse.jface.viewers.ContentViewer.setInput; (ContentViewer.java:234); 	at org.eclipse.jface.viewers.StructuredViewer.setInput; (StructuredViewer.java:875); 	at ; org.eclipse.jdt.internal.ui.jarpackager.CheckboxTreeAndListGroup.initialize; (CheckboxTreeAndListGroup.java:433); 	at ; org.eclipse.jdt.internal.ui.jarpackager.CheckboxTreeAndListGroup.createContents; (CheckboxTreeAndListGroup.java:220); 	at ; org.eclipse.jdt.internal.ui.jarpackager.CheckboxTreeAndListGroup.<init>; (CheckboxTreeAndListGroup.java:90); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocTreeWizardPage.createInputGroup; (JavadocTreeWizardPage.java:159); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocTreeWizardPage.createControl; (JavadocTreeWizardPage.java:138); 	at org.eclipse.jface.wizard.Wizard.createPageControls(Wizard.java:164); 	at org.eclipse.jface.wizard.WizardDialog.createPageControls; (WizardDialog.java:505); 	at org.eclipse.jface.wizard.WizardDialog.setWizard; (WizardDialog.java:841); 	at org.eclipse.jface.wizard.WizardDialog.showPage(WizardDialog.java:875); 	at org.eclipse.jface.wizard.WizardDialog.nextPressed; (WizardDialog.java:653); 	at org.eclipse.jface.wizard.WizardDialog.buttonPressed; (WizardDialog.java:308); 	at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:398); 	at org.eclipse.swt.widgets.TypedListener.handleEvent; (TypedListener.java:85); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:551); 	at org.eclipse.jface.window.Window.open(Window.java:538); 	at org.eclipse.ui.actions.ExportResourcesAction.run; (ExportResourcesAction.java:80); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:590); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection; (ActionContributionItem.java:407); 	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent; (ActionContributionItem.java:361); 	at org.eclipse.jface.action.ActionContributionItem.access$0; (ActionContributionItem.java:352); 	at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent; (ActionContributionItem.java:47); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1085); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1068); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:739); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462); 	at java.lang.reflect.Method.invoke(Native Method); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:200); 	at org.eclipse.core.launcher.Main.run(Main.java:643); 	at org.eclipse.core.launcher.Main.main(Main.java:476)",1
1) select a CU or type; 2) compare with local history; ; ->there is no support to perform a structure compare.,2
Is there some way to get the Java formatting in the details area when a java ; value is being displayed? The debug model presentation specifies a source ; viewer configuration to do code assist; but it does not seem to have a way to ; do the color coding/formatting.,2
"Eclipse 3.0M7; ; Using the same example as in Bug 52344; setting the editor to use space for tab; and using the Default-settings for the formatter. ; ; Reformatting this code: ; ; public class Test1 {;     /**;      *     <ul>;     <li>1. K = INT( X / 100 );;     <li>2. M = 15 + INT(( 3*K+3 ) / 4 ) - INT(( 8*K+13 ) / 25 );;     <li>3. S = 2 - INT(( 3*K+3 ) / 4 );;     <li>4. A = MOD( X; 19 );;     <li>5. D = MOD( 19*A+M; 30 );;     <li>6. R = INT( D / 29 ) + ( INT( D / 28 ) - INT( D / 29 )) * INT( A / 11 );;     <li>7. OG = 21 + D - R; - M rzdatum des Ostervollmonds (= 14. Tag des ersten; Monats im Mondkalender; genannt Nisanu);     <li>8. SZ = 7 - MOD( X + INT( X / 4 ) + S; 7 ); - Datum des 1. Sonntags im M rz;     <li>9. OE = 7 - MOD( OG - SZ; 7 );;     </ul>;      */;     public void foo() {;     }; }; ; and immediately pressing undo yields this: ; ; public class Test1 {;     /**;      *     <ul>;     <li>1. K = INT( X / 100 );;     <li>2. M = 15 + INT(( 3*K+3 ) / 4 ) - INT(( 8*K+13 ) / 25 );;     <li>3. S = 2 - INT(( 3*K+3 ) / 4 );;     <li>4. A = MOD( X; 19 );;     <li>5. D = MOD( 19*A+M; 30 );;     <li>6. R = INT( D / 29 ) + ( INT( D / 28 ) - INT( D / 29 )) * INT( A / 11 );;     <li>7. OG = 21 + D - R; - M rzdatum des Ostervollmonds (= 14. Tag des ersten; Monats im Mondkalender; genannt Nisanu);     <li>8. SZ = 7 - MOD( X + INT( X / 4 ) + S; 7 ); - Datum des 1. Sonntags im M rz;     <li>9. OE = 7 - MOD( OG - SZ; 7 );;     </ul>;      */;     public void foo() {;     }; }/; 	public void foo() {; 	}; }; ; Yes; settings the editor and the formatter to using different things for a tab; is probably useless; but I dont think it should break code when doing stupid; things :-)",2
Reproduced on 2 different machines; one running RHEL 3.0 and one running SLES 9 ; Beta 6.; ; IES Build 200405060200; ; To reproduce:; ; Make sure you are in a german locale and have the 3.0 NL fragments installed so ; that menus; etc. are in german.  Create a new java project and switch to the ; java perspective.  Then; create a new class.  When you click finish to create ; the class; it will fail and a dialog will pop up complaining about an invalid ; thread access.  No special german characters are required to produce the bug.,2
"During the course of new Java project wizard; you are called upon to specify ; source root and build output destination. However there is no support to browse ; to locations for those. Users who are migrating existing projects from other ; IDEs may have their project folder structures already set; and will want the ; browse-to capability. ; ; To Reproduce:; ; 1.	Open WSWB; 2.	Create a new Java Project; 3.	After naming the project hit next; 4.	The next window allows you to specify the source and if you select use ; source folders contained in the project notice you have no browse support to ; select an existing project folder.; ; Expected Behaviour:; ; The user should be able to browse to an existing project folder.",2
OSX 10.2.6; Eclipse I20030916; ; Doing a surround with try catch:; ; !ENTRY org.eclipse.jdt.ui 4 10004 Sep 16; 2003 15:13:55.722; !MESSAGE Unrecoverable error occurred while performing the refactoring.; !STACK 0; ChangeAbortException: org.eclipse.jdt.internal.corext.refactoring.base.ChangeAbortException;         at ; org.eclipse.jdt.internal.ui.refactoring.changes.AbortChangeExceptionHandler.handle(AbortChangeExcept; ionHandler.java:28);         at org.eclipse.jdt.internal.corext.refactoring.base.Change.handleException(Change.java:108);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.AbstractTextChange.perform(AbstractTextChange.jav; a:201);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.TextFileChange.perform(TextFileChange.java:208);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:173; );         at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34);         at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366);         at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1571);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1588);         at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2963);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation; .java:183);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:151);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRu; nnableContext.java:113);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableC; ontext.java:80);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:126; );         at ; org.eclipse.jdt.ui.actions.SurroundWithTryCatchAction.run(SurroundWithTryCatchAction.java:127);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:196);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:842);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:529);         at org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:482);         at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:454);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82);         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1027);         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2180);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2037);         at org.eclipse.ui.internal.Workbench.run(Workbench.java:2020);         at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858);         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:324);         at org.eclipse.core.launcher.Main.basicRun(Main.java:295);         at org.eclipse.core.launcher.Main.run(Main.java:751);         at org.eclipse.core.launcher.Main.main(Main.java:587); Exception wrapped by ChangeAbortException: org.eclipse.jface.text.Assert$AssertionFailedException: ; Assertion failed: ;         at org.eclipse.jface.text.Assert.isTrue(Assert.java:175);         at org.eclipse.jface.text.Assert.isTrue(Assert.java:160);         at ; org.eclipse.jdt.internal.ui.text.link.LinkedPositionManager.getPositions(LinkedPositionManager.java:427);         at ; org.eclipse.jdt.internal.ui.text.link.LinkedPositionManager.documentAboutToBeChanged(LinkedPosition; Manager.java:477);         at ; org.eclipse.jface.text.AbstractDocument.fireDocumentAboutToBeChanged(AbstractDocument.java:549);         at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:956);         at ; org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedDocument.replace(PartiallySynchronizedDocum; ent.java:61);         at org.eclipse.jdt.internal.corext.textmanipulation.TextEdit.performReplace(TextEdit.java:401);         at org.eclipse.jdt.internal.corext.textmanipulation.SimpleTextEdit.perform(SimpleTextEdit.java:80);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:183);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.executeDo(EditProcessor.java:163);         at ; org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.performEdits(EditProcessor.java:121);         at ; org.eclipse.jdt.internal.corext.textmanipulation.TextBufferEditor.performEdits(TextBufferEditor.java:55);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.AbstractTextChange.perform(AbstractTextChange.jav; a:199);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.TextFileChange.perform(TextFileChange.java:208);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:173; );         at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34);         at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366);         at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1571);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1588);         at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2963);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation; .java:183);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:151);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRu; nnableContext.java:113);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableC; ontext.java:80);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:126; );         at ; org.eclipse.jdt.ui.actions.SurroundWithTryCatchAction.run(SurroundWithTryCatchAction.java:127);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:196);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:842);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:529);         at org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:482);         at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:454);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82);         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1027);         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2180);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2037);         at org.eclipse.ui.internal.Workbench.run(Workbench.java:2020);         at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858);         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:324);         at org.eclipse.core.launcher.Main.basicRun(Main.java:295);         at org.eclipse.core.launcher.Main.run(Main.java:751);         at org.eclipse.core.launcher.Main.main(Main.java:587),2
"package p;; class A {; 	void m(){; 		Object u= /*[*/new Object(){}/*]*/;; 	}; }; is extracted to a temp with no type",2
v20030115 + HEAD of (jdt.launching; jdt.launching.macosx):; ; Cannot launch from within Eclipse; cannot open JRE pref pag:; ; ; !ENTRY org.eclipse.ui 4 0 Jan 20; 2003 11:46:07.774; !MESSAGE null argument:; !STACK 0; org.eclipse.core.internal.runtime.AssertionFailedException: null argument:;         at org.eclipse.core.internal.runtime.Assert.isNotNull(Assert.java:78);         at org.eclipse.core.internal.runtime.Assert.isNotNull(Assert.java:66);         at org.eclipse.core.runtime.Path.initialize(Path.java:470);         at org.eclipse.core.runtime.Path.<init>(Path.java:98);         at ; org.eclipse.jdt.internal.launching.LaunchingPlugin$VMChanges.getConatinerId(Launchi; ngPlugin.java:132);         at ; org.eclipse.jdt.internal.launching.LaunchingPlugin$VMChanges.vmChanged(Launching; Plugin.java:157);         at ; org.eclipse.jdt.internal.launching.LaunchingPlugin.vmChanged(LaunchingPlugin.java:6; 86);         at org.eclipse.jdt.launching.JavaRuntime.fireVMChanged(JavaRuntime.java:1680);         at ; org.eclipse.jdt.launching.AbstractVMInstall.setInstallLocation(AbstractVMInstall.java:94);         at ; org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType.doCreateVMInstall(Mac; OSXVMInstallType.java:55);         at ; org.eclipse.jdt.launching.AbstractVMInstallType.createVMInstall(AbstractVMInstallType.j; ava:92);         at ; org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType.detectInstallLocation(M; acOSXVMInstallType.java:108);         at ; org.eclipse.jdt.launching.JavaRuntime.detectEclipseRuntime(JavaRuntime.java:1341);         at org.eclipse.jdt.launching.JavaRuntime.detectDefaultVM(JavaRuntime.java:1375);         at ; org.eclipse.jdt.launching.JavaRuntime.detectAndSaveVMDefinitions(JavaRuntime.java:; 1442);         at ; org.eclipse.jdt.launching.JavaRuntime.initializeVMConfiguration(JavaRuntime.java:1260; );         at org.eclipse.jdt.launching.JavaRuntime.initializeVMTypes(JavaRuntime.java:240);         at org.eclipse.jdt.launching.JavaRuntime.getVMInstallTypes(JavaRuntime.java:404);         at ; org.eclipse.jdt.internal.debug.ui.launcher.VMPreferencePage.createContents(VMPrefere; ncePage.java:162);         at ; org.eclipse.jface.preference.PreferencePage.createControl(PreferencePage.java:209);         at ; org.eclipse.jface.preference.PreferenceDialog.showPage(PreferenceDialog.java:963);         at org.eclipse.jface.preference.PreferenceDialog$7.run(PreferenceDialog.java:456);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65);         at ; org.eclipse.jface.preference.PreferenceDialog$6.widgetSelected(PreferenceDialog.java:; 449);         at ; org.eclipse.jface.util.OpenStrategy.firePostSelectionEvent(OpenStrategy.java:192);         at org.eclipse.jface.util.OpenStrategy.access$4(OpenStrategy.java:187);         at org.eclipse.jface.util.OpenStrategy$3.run(OpenStrategy.java:327);         at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31);         at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:94);         at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1137);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1027);         at org.eclipse.jface.window.Window.runEventLoop(Window.java:561);         at org.eclipse.jface.window.Window.open(Window.java:541);         at ; org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:47);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:804);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributio; nItem.java:422);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionIte; m.java:374);         at ; org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:36; 8);         at ; org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContri; butionItem.java:69);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77);         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:634);         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1252);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1009);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1467);         at org.eclipse.ui.internal.Workbench.run(Workbench.java:1450);         at ; org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845);         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462);         at java.lang.reflect.Method.invoke(Native Method);         at org.eclipse.core.launcher.Main.basicRun(Main.java:247);         at org.eclipse.core.launcher.Main.run(Main.java:703);         at org.eclipse.core.launcher.Main.main(Main.java:539);         at java.lang.reflect.Method.invoke(Native Method);         at apple.launcher.LaunchRunner.run(LaunchRunner.java:88);         at apple.launcher.LaunchRunner.callMain(LaunchRunner.java:50);         at ; apple.launcher.JavaApplicationLauncher.launch(JavaApplicationLauncher.java:52),2
"Syntax highlighting deactivated after saving editor. Note: This only happened ; in the visible editor; all others were unaffected. Highlighting still shows in ; Editor preference page. Unable to reproduce (sorry). Here is log.; ; !MESSAGE Error logged from Debug Core: ; !STACK 1; org.eclipse.core.internal.resources.ResourceException: The resource tree is ; locked for modifications.; 	at org.eclipse.core.internal.resources.Workspace.beginOperation; (Workspace.java:116); 	at org.eclipse.core.internal.resources.Workspace.run; (Workspace.java:1377); 	at org.eclipse.debug.internal.core.BreakpointManager.addBreakpoints; (BreakpointManager.java:412); 	at org.eclipse.debug.internal.core.BreakpointManager.loadBreakpoints; (BreakpointManager.java:150); 	at ; org.eclipse.debug.internal.core.BreakpointManager.initializeBreakpoints; (BreakpointManager.java:277); 	at org.eclipse.debug.internal.core.BreakpointManager.getBreakpoints0; (BreakpointManager.java:248); 	at org.eclipse.debug.internal.core.BreakpointManager.getBreakpoints; (BreakpointManager.java:257); 	at org.eclipse.jdt.internal.debug.ui.JavaModelListener.elementChanged; (JavaModelListener.java:48); 	at org.eclipse.jdt.internal.core.JavaModelManager$3.run; (JavaModelManager.java:710); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:839); 	at org.eclipse.core.runtime.Platform.run(Platform.java:413); 	at org.eclipse.jdt.internal.core.JavaModelManager.fire; (JavaModelManager.java:705); 	at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged; (DeltaProcessor.java:1448); 	at org.eclipse.core.internal.events.NotificationManager$1.run; (NotificationManager.java:128); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:839); 	at org.eclipse.core.runtime.Platform.run(Platform.java:413); 	at org.eclipse.core.internal.events.NotificationManager.notify; (NotificationManager.java:143); 	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges; (NotificationManager.java:67); 	at org.eclipse.core.internal.resources.Workspace.broadcastChanges; (Workspace.java:133); 	at org.eclipse.core.internal.resources.Workspace.endOperation; (Workspace.java:753); 	at org.eclipse.core.internal.resources.Workspace.run; (Workspace.java:1383); 	at org.eclipse.ui.actions.WorkspaceModifyOperation.run; (WorkspaceModifyOperation.java:78); 	at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation; (AbstractTextEditor.java:2578); 	at ; org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperatio; n(CompilationUnitEditor.java:689); 	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave; (CompilationUnitEditor.java:739); 	at org.eclipse.ui.internal.EditorManager$11.run(EditorManager.java:1011); 	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:880); 	at org.eclipse.jface.operation.ModalContext.runInCurrentThread; (ModalContext.java:299); 	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249); 	at org.eclipse.jface.window.ApplicationWindow$1.run; (ApplicationWindow.java:394); 	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:66); 	at org.eclipse.jface.window.ApplicationWindow.run; (ApplicationWindow.java:391); 	at org.eclipse.ui.internal.WorkbenchWindow.run; (WorkbenchWindow.java:1119); 	at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation; (EditorManager.java:886); 	at org.eclipse.ui.internal.EditorManager.saveEditor; (EditorManager.java:1016); 	at org.eclipse.ui.internal.WorkbenchPage.saveEditor; (WorkbenchPage.java:2047); 	at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:32); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:749); 	at ; org.eclipse.ui.internal.registry.AcceleratorScope$AcceleratorAction.run; (AcceleratorScope.java:289); 	at org.eclipse.ui.internal.registry.AcceleratorScope.processKey; (AcceleratorScope.java:249); 	at org.eclipse.ui.internal.KeyBindingMenu$1.keyPressed; (KeyBindingMenu.java:54); 	at org.eclipse.ui.internal.KeyTable.handleEvent(KeyTable.java:75); 	at org.eclipse.ui.internal.KeyTable$3.handleEvent(KeyTable.java:116); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1623); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1369); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1360); 	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1343); 	at org.eclipse.core.internal.boot.InternalBootLoader.run; (InternalBootLoader.java:775); 	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke; (NativeMethodAccessorImpl.java:42); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke; (DelegatingMethodAccessorImpl.java:28); 	at java.lang.reflect.Method.invoke(Method.java:327); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:247); 	at org.eclipse.core.launcher.Main.run(Main.java:703); 	at org.eclipse.core.launcher.Main.main(Main.java:539); !ENTRY org.eclipse.core.resources 1 4 Oct 14; 2002 17:05:21.535; !MESSAGE The resource tree is locked for modifications.; ; >20021009 with plugin-export 20021009-20021014.3; JRT.",2
RC1; J9; ; If a breakpoint is restricted for two different instance; the breakpoint is; effectif only for the last edited; and no error message reports the problem.; ; 1. create the following compilation unit : ; ; public class TestLineBreakpoint {;   public static void main(String[] args) {;     new Thread(new Runnable() {;       public void run() {;         new TestLineBreakpoint().foo();;       };     }).start();;     new TestLineBreakpoint().foo();;   };   public void foo() {;     int i= 0;;     while (1 == 1) {;       i++;  // <-- breakpoint here;     };   }; }; ; 2. Launch the program in debug mode.; 3. When the thread are suspended; restrict the breakpoint for the two this; variable.; 4. Resume the threads.; Only one off the two thread stop to the breakpoint.; ; We should warn the user of this behavior.,2
OSX 10.2.6; Eclipse I20030916; ; Doing a surround with try catch:; ; !ENTRY org.eclipse.jdt.ui 4 10004 Sep 16; 2003 15:13:55.722; !MESSAGE Unrecoverable error occurred while performing the refactoring.; !STACK 0; ChangeAbortException: org.eclipse.jdt.internal.corext.refactoring.base.ChangeAbortException;         at ; org.eclipse.jdt.internal.ui.refactoring.changes.AbortChangeExceptionHandler.handle(AbortChangeExcept; ionHandler.java:28);         at org.eclipse.jdt.internal.corext.refactoring.base.Change.handleException(Change.java:108);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.AbstractTextChange.perform(AbstractTextChange.jav; a:201);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.TextFileChange.perform(TextFileChange.java:208);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:173; );         at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34);         at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366);         at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1571);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1588);         at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2963);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation; .java:183);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:151);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRu; nnableContext.java:113);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableC; ontext.java:80);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:126; );         at ; org.eclipse.jdt.ui.actions.SurroundWithTryCatchAction.run(SurroundWithTryCatchAction.java:127);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:196);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:842);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:529);         at org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:482);         at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:454);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82);         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1027);         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2180);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2037);         at org.eclipse.ui.internal.Workbench.run(Workbench.java:2020);         at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858);         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:324);         at org.eclipse.core.launcher.Main.basicRun(Main.java:295);         at org.eclipse.core.launcher.Main.run(Main.java:751);         at org.eclipse.core.launcher.Main.main(Main.java:587); Exception wrapped by ChangeAbortException: org.eclipse.jface.text.Assert$AssertionFailedException: ; Assertion failed: ;         at org.eclipse.jface.text.Assert.isTrue(Assert.java:175);         at org.eclipse.jface.text.Assert.isTrue(Assert.java:160);         at ; org.eclipse.jdt.internal.ui.text.link.LinkedPositionManager.getPositions(LinkedPositionManager.java:427);         at ; org.eclipse.jdt.internal.ui.text.link.LinkedPositionManager.documentAboutToBeChanged(LinkedPosition; Manager.java:477);         at ; org.eclipse.jface.text.AbstractDocument.fireDocumentAboutToBeChanged(AbstractDocument.java:549);         at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:956);         at ; org.eclipse.jdt.internal.ui.javaeditor.PartiallySynchronizedDocument.replace(PartiallySynchronizedDocum; ent.java:61);         at org.eclipse.jdt.internal.corext.textmanipulation.TextEdit.performReplace(TextEdit.java:401);         at org.eclipse.jdt.internal.corext.textmanipulation.SimpleTextEdit.perform(SimpleTextEdit.java:80);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:183);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.execute(EditProcessor.java:178);         at org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.executeDo(EditProcessor.java:163);         at ; org.eclipse.jdt.internal.corext.textmanipulation.EditProcessor.performEdits(EditProcessor.java:121);         at ; org.eclipse.jdt.internal.corext.textmanipulation.TextBufferEditor.performEdits(TextBufferEditor.java:55);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.AbstractTextChange.perform(AbstractTextChange.jav; a:199);         at ; org.eclipse.jdt.internal.corext.refactoring.changes.TextFileChange.perform(TextFileChange.java:208);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:173; );         at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34);         at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366);         at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1571);         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1588);         at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2963);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation; .java:183);         at ; org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:151);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRu; nnableContext.java:113);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableC; ontext.java:80);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84);         at ; org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:126; );         at ; org.eclipse.jdt.ui.actions.SurroundWithTryCatchAction.run(SurroundWithTryCatchAction.java:127);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:196);         at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:842);         at ; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:529);         at org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:482);         at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:454);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82);         at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1027);         at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2180);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2037);         at org.eclipse.ui.internal.Workbench.run(Workbench.java:2020);         at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858);         at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:324);         at org.eclipse.core.launcher.Main.basicRun(Main.java:295);         at org.eclipse.core.launcher.Main.run(Main.java:751);         at org.eclipse.core.launcher.Main.main(Main.java:587),2
1) Copy and paste junit.ui.; 2) Observe: the resulting package is named ui. It should be something like;    copy.of.junit.ui or junit.ui.copy.of.;    Also compile errors are introduced as the CUs still expect the package name;    to be junit.ui.; 3) Paste again.;    Theres a new folder (not package) called Copy of ui.;    It should remain a package and have package-like names.,2
Create a launch configuration; Test1.; Exit Eclipse.; Restart Eclipse; The JRE entry is removed from the JRE installed list; REalize the launch configuration dialog.; Select Test1.; It is enabled for debug (with no JRE entry); but hitting the button gives you ; the error that the JRE could not be found.; ; As well; any history items do not report the error of the missing ; JRE...clicking on them has no noticeable effect.,2
When a new launch config is created and a project is selected then the; entire project is searched for a main and the first one (?) is picked; and shown to the user. This random picking of a main is costly ; for large projects and we should not do this. We should only pick; the selection when a Compilation; type; classfile is selected.,2
I2002-12-17; ; Using the Ctrl Key to activate the source hover interfere with MacOS X way of; bringing up the context menu (which is therefore not available in the JDT editor),2
"I20050219-1500; ; Found the following while importing Organize Import preferences from the; Organize Import preference page.; ; java.lang.ClassCastException; 	at; org.eclipse.jdt.internal.ui.preferences.ImportOrganizeConfigurationBlock$ImportOrganizeLabelProvider.getText(ImportOrganizeConfigurationBlock.java:115); 	at; org.eclipse.jface.viewers.StructuredViewer.buildLabel(StructuredViewer.java:1730); 	at org.eclipse.jface.viewers.TableViewer.doUpdateItem(TableViewer.java:421); 	at; org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:352); 	at; org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1015); 	at org.eclipse.core.runtime.Platform.run(Platform.java:757); 	at; org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:1655); 	at org.eclipse.jface.viewers.TableViewer.internalRefreshAll(TableViewer.java:804); 	at org.eclipse.jface.viewers.TableViewer.internalRefresh(TableViewer.java:710); 	at org.eclipse.jface.viewers.TableViewer.internalRefresh(TableViewer.java:699); 	at org.eclipse.jface.viewers.StructuredViewer$7.run(StructuredViewer.java:1172); 	at; org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1109); 	at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1170); 	at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1129); 	at; org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField.setElements(ListDialogField.java:549); 	at; org.eclipse.jdt.internal.ui.preferences.ImportOrganizeConfigurationBlock.doButtonPressed(ImportOrganizeConfigurationBlock.java:281); 	at; org.eclipse.jdt.internal.ui.preferences.ImportOrganizeConfigurationBlock.access$0(ImportOrganizeConfigurationBlock.java:250); 	at; org.eclipse.jdt.internal.ui.preferences.ImportOrganizeConfigurationBlock$ImportOrganizeAdapter.customButtonPressed(ImportOrganizeConfigurationBlock.java:135); 	at; org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField.buttonPressed(ListDialogField.java:202); 	at; org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField.doButtonSelected(ListDialogField.java:450); 	at; org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField.access$0(ListDialogField.java:446); 	at; org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField$2.widgetSelected(ListDialogField.java:413); 	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2908); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2541); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:718); 	at org.eclipse.jface.window.Window.open(Window.java:696); 	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:66); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:1003); 	at; org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:557); 	at; org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:507); 	at; org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:421); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:842); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2908); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2541); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1612); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1578); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:293); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:144); 	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:102); 	at; org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:333); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:150); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39); 	at; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25); 	at java.lang.reflect.Method.invoke(Method.java:324); 	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:268); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:260); 	at org.eclipse.core.launcher.Main.run(Main.java:887); 	at org.eclipse.core.launcher.Main.main(Main.java:871)",2
"Using attached InnerAnon source; place a breakpoint at line 13.; Select this in the variables view; In the detail pane; display hasMoreElements(); ; Get error dialog claiming an NPE (correct) but we are reporting the ; InvocationException in the log (I dont believe we should be logging this?); ; <log-entry date=Wed Apr 10 11:19:09 CDT 2002>;   <status;      plugin-id=org.eclipse.jdt.debug.ui;      severity=ERROR;      message=Internal Error;      code=150>;     <exception;        message=null;        trace=; com.sun.jdi.InvocationException; 	at org.eclipse.jdi.internal.ObjectReferenceImpl.invokeMethod; (ObjectReferenceImpl.java:327); 	at org.eclipse.jdt.internal.debug.core.model.JDIThread.invokeMethod; (JDIThread.java:619); 	at org.eclipse.jdt.internal.debug.core.model.JDIObjectValue.sendMessage; (JDIObjectValue.java:73); 	at ; org.eclipse.jdt.internal.debug.eval.model.EvaluationObject.sendMessage; (EvaluationObject.java:58); 	at ; org.eclipse.jdt.internal.debug.eval.ast.instructions.SendMessage.execute; (SendMessage.java:48); 	at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute; (Interpreter.java:32); 	at ; org.eclipse.jdt.internal.debug.eval.ast.instructions.InstructionSequence.evaluat; e(InstructionSequence.java:43); 	at ; org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$2.run; (ASTEvaluationEngine.java:210); 	at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation; (JDIThread.java:542); 	at ; org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$EvaluationThr; ead.doEvaluation(ASTEvaluationEngine.java:215); 	at ; org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine$1.run; (ASTEvaluationEngine.java:175); 	at java.lang.Thread.run(Thread.java:512); >;     </exception>;   </status>; </log-entry>",2
I got a NPE on this code; IStatus validation= JavaConventions.validateClasspath(fJavaProject; ; newClasspath; fOutputLocation);; if (!validation.matches(IStatus.ERROR)) {; ; On debugging I saw that JavaModelStatus.fChildren is null.; Cant see how that happens; but it was.,2
"Do the following to reproduce the problem:; 1.  Define a Java project.; 2.  Import the attached file into the project.  (Ive also gotten the error by; copying and pasting the file.); ; I get the following error:; java.lang.StackOverflowError; 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.computePriority(CompilationR; esult.java:97); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:220); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230); 	at ; org.eclipse.jdt.internal.compiler.CompilationResult.quickPrioritize(CompilationR; esult.java:230)  etc...; ; I am using a 2.0 build of Eclipse.  This looks alot like bug #21230.",2
- create this class X.;   <----------------------------->;   public class X {;      public class Y extends X {};      public class Z extends Y {};   };   <----------------------------->; - do a build.; ; there is an error : Cannot use this in a static context; ; same test case with;   javac 1.3 : OK;   javac 1.2.2 :;      X.java:2: No constructor matching X() found in class X.;              public class Y extends X {;                           ^;      X.java:5: Cant reference this before the superclass constructor has been ; called.;              public class Z extends Y {;                           ^;      2 errors,2
3.0RC3; ; With default settings:; - enable Mark Occurences; - perform a local search on a local variable with many occurences; - step through the search results; -> hits change between Occurences and Search Result background colors,2
"After creating a Javadoc documentation using the Generate Javadoc... wizard; ; with the option Open generated index file in browser activated; the index ; page doesnt show up and an exception is logged (see below).; ; When the option Preferences > Help > Always use external browsers is ; activated; the index page shows up correctly in the browser.; ; Thus; it may be that the exception occurs because the Javadoc wizard is open ; and because it is a modal dialog; it prevents the internal browser window from ; being opened.; ; Heres the exception:; !ENTRY org.eclipse.core.runtime 4 2 Apr 02; 2004 21:32:08.78; !MESSAGE Problems occurred when invoking code from plug-; in: org.eclipse.core.runtime.; !STACK 0; org.eclipse.swt.SWTException: Invalid thread access; 	at org.eclipse.swt.SWT.error(SWT.java:2625); 	at org.eclipse.swt.SWT.error(SWT.java:2555); 	at org.eclipse.swt.widgets.Widget.error(Widget.java:354); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:245); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:236); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:189); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:127); 	at org.eclipse.help.ui.internal.util.ErrorUtil.displayErrorDialog; (ErrorUtil.java:48); 	at org.eclipse.help.ui.internal.util.ErrorUtil.displayError; (ErrorUtil.java:23); 	at org.eclipse.help.internal.base.HelpDisplay.displayHelpURL; (HelpDisplay.java:169); 	at org.eclipse.help.internal.base.HelpDisplay.displayHelpResource; (HelpDisplay.java:88); 	at org.eclipse.help.ui.internal.DefaultHelpUI.displayHelpResource; (DefaultHelpUI.java:56); 	at org.eclipse.ui.help.WorkbenchHelp.displayHelpResource; (WorkbenchHelp.java:264); 	at org.eclipse.jdt.internal.ui.actions.OpenBrowserUtil$1.run; (OpenBrowserUtil.java:31); 	at org.eclipse.swt.custom.BusyIndicator.showWhile; (BusyIndicator.java:51); 	at org.eclipse.jdt.internal.ui.actions.OpenBrowserUtil.open; (OpenBrowserUtil.java:29); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard.spawnInBrowser; (JavadocWizard.java:502); 	at org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard.access$3; (JavadocWizard.java:497); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard$JavadocDebugEventListen; er.handleDebugEvents(JavadocWizard.java:525); 	at org.eclipse.debug.core.DebugPlugin$EventNotifier.run; (DebugPlugin.java:910); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:607); 	at org.eclipse.core.runtime.Platform.run(Platform.java:524); 	at org.eclipse.debug.core.DebugPlugin$EventNotifier.dispatch; (DebugPlugin.java:942); 	at org.eclipse.debug.core.DebugPlugin.fireDebugEventSet; (DebugPlugin.java:311); 	at org.eclipse.debug.core.model.RuntimeProcess.fireEvent; (RuntimeProcess.java:262); 	at org.eclipse.debug.core.model.RuntimeProcess.fireTerminateEvent; (RuntimeProcess.java:270); 	at org.eclipse.debug.core.model.RuntimeProcess.terminated; (RuntimeProcess.java:228); 	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorJob.run; (RuntimeProcess.java:356); 	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62); !ENTRY org.eclipse.debug.core 4 120 Apr 02; 2004 21:32:08.78; !MESSAGE An exception occurred while dispatching debug events.; !STACK 0; org.eclipse.swt.SWTException: Invalid thread access; 	at org.eclipse.swt.SWT.error(SWT.java:2625); 	at org.eclipse.swt.SWT.error(SWT.java:2555); 	at org.eclipse.swt.widgets.Widget.error(Widget.java:354); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:245); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:236); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:189); 	at org.eclipse.swt.widgets.Shell.<init>(Shell.java:127); 	at org.eclipse.help.ui.internal.util.ErrorUtil.displayErrorDialog; (ErrorUtil.java:48); 	at org.eclipse.help.ui.internal.util.ErrorUtil.displayError; (ErrorUtil.java:23); 	at org.eclipse.help.internal.base.HelpDisplay.displayHelpURL; (HelpDisplay.java:169); 	at org.eclipse.help.internal.base.HelpDisplay.displayHelpResource; (HelpDisplay.java:88); 	at org.eclipse.help.ui.internal.DefaultHelpUI.displayHelpResource; (DefaultHelpUI.java:56); 	at org.eclipse.ui.help.WorkbenchHelp.displayHelpResource; (WorkbenchHelp.java:264); 	at org.eclipse.jdt.internal.ui.actions.OpenBrowserUtil$1.run; (OpenBrowserUtil.java:31); 	at org.eclipse.swt.custom.BusyIndicator.showWhile; (BusyIndicator.java:51); 	at org.eclipse.jdt.internal.ui.actions.OpenBrowserUtil.open; (OpenBrowserUtil.java:29); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard.spawnInBrowser; (JavadocWizard.java:502); 	at org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard.access$3; (JavadocWizard.java:497); 	at ; org.eclipse.jdt.internal.ui.javadocexport.JavadocWizard$JavadocDebugEventListen; er.handleDebugEvents(JavadocWizard.java:525); 	at org.eclipse.debug.core.DebugPlugin$EventNotifier.run; (DebugPlugin.java:910); 	at org.eclipse.core.internal.runtime.InternalPlatform.run; (InternalPlatform.java:607); 	at org.eclipse.core.runtime.Platform.run(Platform.java:524); 	at org.eclipse.debug.core.DebugPlugin$EventNotifier.dispatch; (DebugPlugin.java:942); 	at org.eclipse.debug.core.DebugPlugin.fireDebugEventSet; (DebugPlugin.java:311); 	at org.eclipse.debug.core.model.RuntimeProcess.fireEvent; (RuntimeProcess.java:262); 	at org.eclipse.debug.core.model.RuntimeProcess.fireTerminateEvent; (RuntimeProcess.java:270); 	at org.eclipse.debug.core.model.RuntimeProcess.terminated; (RuntimeProcess.java:228); 	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorJob.run; (RuntimeProcess.java:356); 	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)",2
Build 2.0 IBM JRE 1.3.0 Win2k; ; I was doing some debugging; and after awhile I noticed a stack trace on the ; console (nothing in the log file).  I unfortunately dont have steps to ; reproduce it.  Hopefully the stack trace has enough info to go on.  Things I was ; doing that may have caused breakage:; ; - modifying code from within the debugger while program was running.  I would ; then kill the thread on failure to HCR; - had a conditional breakpoint in a fairly tight loop.  The loop had roughly ; 50;000 iterations; which is nowhere near the size reported in the exception.  ; The conditional breakpoint seemed to functioning fine.; ; Here is the stack trace:; ; java.lang.ArrayIndexOutOfBoundsException: 376653368;         at java.util.ArrayList.ensureCapacity(ArrayList.java(Compiled Code));         at java.util.ArrayList.add(ArrayList.java(Compiled Code));         at org.eclipse.jdt.internal.debug.core.model.JDIModificationVariable.<in; it>(JDIModificationVariable.java(Compiled Code));         at org.eclipse.jdt.internal.debug.core.model.JDIValue.getVariables0(JDIV; alue.java(Compiled Code));         at org.eclipse.jdt.internal.debug.core.model.JDIValue.getVariables0(JDIV; alue.java(Compiled Code));         at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.findVariable(; JDIStackFrame.java(Compiled Code));         at org.eclipse.jdt.internal.debug.core.model.JDIThread.findVariable(JDIT; hread.java:1401);         at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.findVariable; (JDIDebugTarget.java:1363);         at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo(JavaDeb; ugHover.java:91);         at org.eclipse.jdt.internal.ui.text.java.hover.JavaTextHover.getHoverInf; o(JavaTextHover.java:304);         at org.eclipse.jface.text.TextViewerHoverManager$2.run(TextViewerHoverMa; nager.java:98),2
"Suddenly in the middle of typing something the cursor stops and all the ; characters cosequently typed appear while pushing others to the right of the ; cursor.  To get correct output one must type words backwards.; ; I have this problem every 2-3 hours of work.  It happens on 3M8; 3.0; 3.0.1 ; and 3.1 -- Ive tried all of these.  It does not depend on the project or on ; the plugins -- For instiance it just happened with a clean 3.0.1 with no ; custom plugins at all.; ; The only way out is to close eclipse and restart. The following is the last ; error in the log.  Would be happy to make the entire log available.; ; !ENTRY org.eclipse.ui 4 0 Nov 11; 2004 16:43:37.362; !MESSAGE java.lang.NullPointerException; !STACK 0; java.lang.NullPointerException; 	at ; org.eclipse.jface.text.source.projection.ProjectionViewer.handleVisibleDocument; Changed(ProjectionViewer.java(Compiled Code)); 	at ; org.eclipse.jface.text.TextViewer$VisibleDocumentListener.documentChanged; (TextViewer.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged; (AbstractDocument.java(Inlined Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged; (AbstractDocument.java(Compiled Code)); 	at ; org.eclipse.jface.text.projection.ProjectionDocument.fireDocumentChanged; (ProjectionDocument.java:768); 	at org.eclipse.jface.text.AbstractDocument.replace; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.projection.ProjectionDocument.replace; (ProjectionDocument.java:551); 	at org.eclipse.jface.text.DefaultDocumentAdapter.replaceTextRange; (DefaultDocumentAdapter.java:238); 	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.doBackspace(StyledText.java:2488); 	at org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java:5482); 	at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java; (Inlined Compiled Code)); 	at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java(Compiled Code)); 	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled ; Code)); 	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method); 	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench; (Workbench.java:254); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141); 	at org.eclipse.ui.internal.ide.IDEApplication.run; (IDEApplication.java:96); 	at org.eclipse.core.internal.runtime.PlatformActivator$1.run; (PlatformActivator.java:335); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run; (EclipseStarter.java:273); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run; (EclipseStarter.java:129); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke; (NativeMethodAccessorImpl.java:79); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke; (DelegatingMethodAccessorImpl.java:41); 	at java.lang.reflect.Method.invoke(Method.java:386); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:185); 	at org.eclipse.core.launcher.Main.run(Main.java:704); 	at org.eclipse.core.launcher.Main.main(Main.java:688); ; !ENTRY org.eclipse.ui 4 4 Nov 11; 2004 16:43:37.622; !MESSAGE Unhandled event loop exception; ; !ENTRY org.eclipse.ui 4 0 Nov 11; 2004 16:43:37.632; !MESSAGE java.lang.NullPointerException; !STACK 0; java.lang.NullPointerException; 	at ; org.eclipse.jface.text.source.projection.ProjectionViewer.handleVisibleDocument; Changed(ProjectionViewer.java(Compiled Code)); 	at ; org.eclipse.jface.text.TextViewer$VisibleDocumentListener.documentChanged; (TextViewer.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged; (AbstractDocument.java(Inlined Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged; (AbstractDocument.java(Compiled Code)); 	at ; org.eclipse.jface.text.projection.ProjectionDocument.fireDocumentChanged; (ProjectionDocument.java:768); 	at org.eclipse.jface.text.AbstractDocument.replace; (AbstractDocument.java(Compiled Code)); 	at org.eclipse.jface.text.projection.ProjectionDocument.replace; (ProjectionDocument.java:551); 	at org.eclipse.jface.text.DefaultDocumentAdapter.replaceTextRange; (DefaultDocumentAdapter.java:238); 	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.doBackspace(StyledText.java:2488); 	at org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java:5482); 	at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java; (Inlined Compiled Code)); 	at org.eclipse.swt.custom.StyledText$7.handleEvent(StyledText.java; (Compiled Code)); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java; (Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code)); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java(Compiled Code)); 	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled ; Code)); 	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled ; Code)); 	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method); 	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java(Inlined ; Compiled Code)); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java; (Compiled Code)); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench; (Workbench.java:254); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141); 	at org.eclipse.ui.internal.ide.IDEApplication.run; (IDEApplication.java:96); 	at org.eclipse.core.internal.runtime.PlatformActivator$1.run; (PlatformActivator.java:335); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run; (EclipseStarter.java:273); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run; (EclipseStarter.java:129); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke; (NativeMethodAccessorImpl.java:79); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke; (DelegatingMethodAccessorImpl.java:41); 	at java.lang.reflect.Method.invoke(Method.java:386); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:185); 	at org.eclipse.core.launcher.Main.run(Main.java:704); 	at org.eclipse.core.launcher.Main.main(Main.java:688)",2
"20021016; Enable eating code assist.; Given this code; 	public void setNewName(String newName) {; 		Assert.isNotNull(newName);; 	}; Do code assist after Assert.; 1. No eating range marked. I think isNotNull should be marked; 2. While the dialog is still up; press twice cursor right and once cursor ; left. The eating range consist of one letter. very strange",2
3.2 M3 test pass; ; - use the Clean up action and make sure the add missing $NON-NLS$ checkbox is; checked; - have a CU open with an NLS warning; - choose Source>Clean up; - check the selection on the first wizard pane: it is correct: only the active; CU is checked; - press Return or click Finish to execute the clean up; ; > expected: the NLS tag is added; < actual: no changes occur; ; Note: the same works if I manually go to the configuration page first and then; click Finish,2
"20020214; jdk 1.3.1; ; When I use the Java browsing view to try to create getters/setters from the ; context menu on a class field; there is not entry.  I have to switch back to ; the regular Java view; ; I tried to use Self-encapsulate field; but received an internal error (listed ; below). This may have been because one of the classes I had open had a syntax ; error (no closing bracket).; ; ; ; Log: Wed Feb 20 19:19:09 PST 2002; 1 org.eclipse.help 0 Help System started.; Log: Wed Feb 20 20:42:47 PST 2002; 4 org.eclipse.jdt.ui 1 Internal Error; java.lang.reflect.InvocationTargetException: java.lang.ClassCastException: ; org.eclipse.jdt.internal.compiler.lookup.ProblemBinding; 	at ; org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveNameForMessageSend; (DefaultBindingResolver.java:121); 	at org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveName; (DefaultBindingResolver.java:100); 	at org.eclipse.jdt.core.dom.Name.resolveBinding(Name.java:75); 	at ; org.eclipse.jdt.internal.corext.refactoring.sef.AccessAnalyzer.visit; (AccessAnalyzer.java:74); 	at org.eclipse.jdt.core.dom.SimpleName.accept0(SimpleName.java:85); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.MethodInvocation.accept0; (MethodInvocation.java:91); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0; (ExpressionStatement.java:76); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:76); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:98); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.IfStatement.accept0(IfStatement.java:99); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:76); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0; (MethodDeclaration.java:183); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0; (ClassInstanceCreation.java:118); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:1025); 	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0; (VariableDeclarationFragment.java:96); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.FieldDeclaration.accept0; (FieldDeclaration.java:119); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.TypeDeclaration.accept0; (TypeDeclaration.java:163); 	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:1049); 	at org.eclipse.jdt.core.dom.CompilationUnit.accept0; (CompilationUnit.java:143); 	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:981); 	at ; org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring.; checkInput(SelfEncapsulateFieldRefactoring.java:206); 	at ; org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run; (CheckConditionsOperation.java:58); 	at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run; (CreateChangeOperation.java:93); 	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run; (ModalContext.java:98)",2
The dialog needs an accelerator for the text field.,2
A custom perspective which contains a Debug view; and it has the buttons for ; Resume; Step Into etc.  However; the function keys do not work in that ; perspective.  I.e.  F8 for Resume; F5 for Step into; F6 for Step Over and F7 ; for Run to return.,2
"DS (6/1/01 3:35:32 PM); 	On 116; ; 	Test Case; 		Have a program running and paused at a breakpoint; 		Go to the display view; 		With nothing selected; hit the Inpsect or Display actions; ; An evaluation occurs on the empty String.; ; NOTES:; 	GDA (6/5/01 11:40:48 AM); 		Defer; ; DS (10/10/2001 4:29:14 PM); 	This is still the current behaviour...but have proposal/prototype to select the entire current line; 	of an empty selection.; 	@see 1GJ6GR9: ITPDUI:ALL - Display window enhancement",2
"Build 2.0; ; In the following example put the cursor before m and expand to enclosing ; element. Observe: the whole method is selected. Now change method name m to mm ; and do the same again. Observe: simple name mm is selected. There should not be ; a difference in this case.; ; package p;; class A{; 	void m(int t){; 	}; }",3
Have a line that has an indent greater than it is required.; Place cursor at the correct indent position.; Press Tab.; => Cursor ends up at the beginning of the document.,3
I20040924; ; Code in JDT Core often use Util.splitOn(...) to be able to compare a qualified ; name to a compound name.; ; We should introduce a helper that allows to compare a qualified name with a ; compound name without creating new objects.,3
While iterating over the installed versions of Java in the detectInstallLocation method in ; MacOSXVMInstallType; the following ; condition evaluates to false if the findVMInstall returns a valid VMInstall for the given version:; if (home.exists() && findVMInstall(version) == null && !CURRENT_JVM.equals(version)) {; ; The only place the defaultLocation returned by detectInstallLocation is set is within this if block; so if ; the default install location is able to be found; the method will return null.,3
"I tried to do a Rename Variable refactoring on a public field; when this error occurs everytime.; ; -- Error Log --; Date: Fri Apr 06 08:49:57 CEST 2007; Message: Internal Error; Severity: Error; Plugin ID: org.eclipse.ltk.ui.refactoring; Stack Trace:; java.lang.reflect.InvocationTargetException; 	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:350); 	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:304); 	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:571); 	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:414); 	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.computeSuccessorPage(UserInputWizardPage.java:75); 	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.getNextPage(UserInputWizardPage.java:115); 	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.nextOrPreviewPressed(RefactoringWizardDialog2.java:475); 	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.access$0(RefactoringWizardDialog2.java:472); 	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2$1.widgetSelected(RefactoringWizardDialog2.java:660); 	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1496); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1505); 	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1279); 	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3312); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2941); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:820); 	at org.eclipse.jface.window.Window.open(Window.java:796); 	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run(RefactoringWizardOpenOperation.java:132); 	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67); 	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:145); 	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:40); 	at org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.activate(UserInterfaceStarter.java:56); 	at org.eclipse.jdt.internal.ui.refactoring.reorg.RenameUserInterfaceStarter.activate(RenameUserInterfaceStarter.java:155); 	at org.eclipse.jdt.ui.refactoring.RenameSupport.openDialog(RenameSupport.java:114); 	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startRenameRefactoring(RefactoringExecutionStarter.java:382); 	at org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:172); 	at org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:131); 	at org.eclipse.jdt.ui.actions.RenameAction.run(RenameAction.java:117); 	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:271); 	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:243); 	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499); 	at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185); 	at org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109); 	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:461); 	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:424); 	at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:160); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:466); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:799); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:846); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:564); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:506); 	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:122); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66); 	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1109); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1495); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1520); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1505); 	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1557); 	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1552); 	at org.eclipse.swt.widgets.Control.kEventUnicodeKeyPressed(Control.java:1820); 	at org.eclipse.swt.widgets.Composite.kEventUnicodeKeyPressed(Composite.java:583); 	at org.eclipse.swt.widgets.Control.kEventTextInputUnicodeForKeyEvent(Control.java:1812); 	at org.eclipse.swt.widgets.Widget.textInputProc(Widget.java:2000); 	at org.eclipse.swt.widgets.Display.textInputProc(Display.java:3838); 	at org.eclipse.swt.internal.carbon.OS.SendEventToEventTarget(Native Method); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2910); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1930); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1894); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:422); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149); 	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95); 	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78); 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92); 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25); 	at java.lang.reflect.Method.invoke(Method.java:585); 	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:336); 	at org.eclipse.core.launcher.Main.basicRun(Main.java:280); 	at org.eclipse.core.launcher.Main.run(Main.java:977); 	at org.eclipse.core.launcher.Main.main(Main.java:952); Caused by: java.lang.NullPointerException; 	at org.eclipse.jdt.internal.core.search.matching.FieldLocator.matchReportReference(FieldLocator.java:221); 	at org.eclipse.jdt.internal.core.search.matching.PatternLocator.matchReportReference(PatternLocator.java:398); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2034); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2440); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2187); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(MatchLocator.java:1548); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1033); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1074); 	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1180); 	at org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94); 	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:212); 	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:490); 	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:538); 	at org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.internalSearch(RefactoringSearchEngine.java:145); 	at org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine.search(RefactoringSearchEngine.java:131); 	at org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.getNewReferences(RenameFieldProcessor.java:837); 	at org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.analyzeRenameChanges(RenameFieldProcessor.java:799); 	at org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.createChanges(RenameFieldProcessor.java:626); 	at org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor.doCheckFinalConditions(RenameFieldProcessor.java:441); 	at org.eclipse.jdt.internal.corext.refactoring.rename.JavaRenameProcessor.checkFinalConditions(JavaRenameProcessor.java:46); 	at org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions(ProcessorBasedRefactoring.java:175); 	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:83); 	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:118); 	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1737); 	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87); 	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)",3
Build 20011204; ; If an IResourceDelta is received by the DeltaProcessor before the java model is ; open; it fails with a NullPointerException.,3
While looking for a fix for bug 289683; I discovered that JavaDebugUtils.resolveType(IJavaType) was not working properly for some nested types. The AST visitor was visiting TypeDeclarationStatements; rather than all TypeDeclarations; so it was potentially missing some types.,3
Build I20050527-1300 (RC1); ; Shortly after pasting a block of code which modifies the imports; the editor; scrolls up to the import section. Note: This only seems to happen if the imports; are folded.,3
I20070206-0010.; ; The New Class Path Variable dialog should not show entries that cant be added.,3
See bug 198437.  ; ; There a lot of instances where we create new  empty strings.  Some classes create their own constants for this.  It would be beneficial if the JDT plugins had a global constant.,3
M7; ; Similar to the key bindings preference transfer; it would be good to have a; transfer of all repository connections if this is possible.; ; we in JDT will remove our All JDT transfer and instead choose some selected;; useful settings.; ; Suggestion List; - keys; - repositories; - ant runtime settings; - Java code and comment templates; - installed JREs,3
If I want to copy a file from one source folder to another and that file ; happens to be read-only then I get a pop-up complaining that the file is read-; only and the file doesnt get copied accross!,3
Build ID:  I20080617-2000; ; Steps To Reproduce:; 1. Install the leJOS plug-in (Go to Help -> Software Updates -> Available Software -> Add Site -> http://lejos.sourceforge.net/tools/eclipse/plugin/nxj/); 2. Go to: http://lejos.sourceforge.net/nxj-downloads.php and download and install the software (preferably somewhere handy like C:\ or My Documents).; 3. Create a new project (like mcl).; 4. Right click on the project; go to: leJOS NXJ -> Convert to leJOS NXJ Project.; 5. Go to: Project -> Properties -> Java Build Path; 6. Click on: Add an External JAR.; 7. Navigate to the folder where you installed the leJOS software (step 2) and add \leJOS Projects\pccomms\lib\pccomm.jar; 8. Click on Add a Library -> JRE System Library -> Workspace Default.; 9. Click OK and return to the project.; 10. Create a new package in the src folder (like  computer ).; 11. Go to: http://www.cs.uwaterloo.ca/~adcaine/MCL/ ; 12. Download all of the .java files (except Robot.java).; 13. Drag and drop the files into the src folder; but NOT into the new package (files should go into the default package).; 14.14. Select all the files in the default package and drag and drop them into the new package.; 15. At this point at least one of the files will most likely be sporting the first error.  It will complain that: The type Class is not generic; it cannot be parameterized with arguments <T>; 16. To see the second error (or if the first is not yet showing); open any file; create and then delete a space; and save the file.  It will now exhibit the first error and or complain that it has no idea what object X is; object X being a class who exhibits the first error.; ; More information:; I am not sure if the error is being caused by Eclipse or by the leJOS plug-in (I have contacted them; but they are mystified).  All I do know is that Eclipse complains that class X is not generic; a thing which I have never heard of before; especially as I am not trying to use any generics.,3
A library classpath entry also contains a location of its JavaDoc.; ; Features based on this:; - show the JavaDoc of a Java Element in a web browser.;   (jdt.ui); - use the JavaDoc as secondary source; if no source attchment is available.;   (jdt.core; SourceBuffer); - Use the JavaDoc location as links for the creation of JavaDoc from sources.; ; - JavaDoc generation: Use the location attached to the sourcefolder as ; destination. ; ; Issues:; Location as IPath / URL?; The idea to represent it as URL is very tempting; but is not very consistent ; with the rest of eclipse.; Clathpath variables are defines a IPath; so JRE witching would not be possible ; if URL would be taken.; ; What about putting an URL in a Path? Probably fails due to port numbers in URLs.; ; -> IPath is not optimal; but theres no alternative.,3
Imagine a Floder class; with instance field name.; The constructor will report unused namee but also reports that the assignement; as no effect. ; ; Folder(String namee); { this.name = name; }; ; We nee all these extremely usefull warnings to be in the compiler options.; I would easily put this one as an ERROR; to be sure it shows up in my filtered; task list.,3
I20050308; ; To be consistent with the runtime behavior where you can have strict and loose; access control to classes in required plugin; PDE needs to control the severity; of access rules. Some access rules would always be flagged as errors; some would; be flagged as warnings.,3
I20060816-1200; ; IClassFile#getType() is a handle-only query and should therefore not throw a JavaModelException. The implementation in ClassFile already doesnt throw the JME.,3
Eclipse currently lacks the capacity to change the next line to execute while debugging.  It seems this is possible for Java because JBuilder claims to do it.  Its present in other products; for example MSVC++; where its very useful.,3
build I20050509-2010; ; In a typical self-hosting workspace with OSGi; Runtime; Resources; SWT; JFace;; Workbench; IDE and random other odds and ends in source;; choose Window > About > Configuration Details.; ; It takes a while to open (see bug 94489).  Press Copy to Clipboard; paste the; contents to Notepad; and save as a file.  The resulting file is >2M.; ; Many of the entries are prefs having to do with the PDE classpath container and; access rules.  This seems very verbose; with much duplication.; ; Is it necessary to use prefs here?  Would workspace properties be more; appropriate?  If prefs must be used; is there some way they could be made more; compact?,3
20030107; once in 2 hours or so i get a message ; file has changed on the file system. you you want to overwrite?; ; regardless of what i select the whole ide freezes forever ; (or for so long that i never waited more than 5 minutes); ; i need to kill it; then after restart; full build is requuired; but it never completes - ide; freezes again (on updating... after build); ; i must kill eclipse again; 3rd time round another full build is required; which completes; ; after more than 20 minutes of wasted time and a lot of frustration; you can work again; ; this happens 2-4 times a day and is greatly frustrating; ; (didnt know where to enter this report),3
"Build ID: M20080221-1800; ; Steps To Reproduce:; I dont have a simple repro yet but this is a real world problem weve come across using the Beehive annotations in eclipse with version 3.3.2 of JDT (3.3.2.r33x_r20080129-7o7jE7_EDhYDiyVEnjb1pFd7ZGD7); ; I have a Apache Beehive project with a NetUI page flow that declares an array type action output for an action...; ; @Jpf.Action(forwards = {;     @Jpf.Forward(;         name = success; ;         path = results.jsp; ;         actionOutputs = {;             @Jpf.ActionOutput(;                 name = mybeanmethodResult;;                 type = mypkg.Mybean[].class;             );         };     ); }); public Forward mybeanmethod(MyFormBean form) {; ...; }; ; The type attribute on the @Jpf.ActionOutput annotation that is an Array; cause the ClassCastException.; ; type = mypkg.Mybean[].class; ; More information:; This appears to be a regression in JDT compiler code. I think it may have been introduced by the fixes for Bugzilla bug 187430.; ; I noticed the code change introduced in BinaryTypeBinding in revision 1.108 (and 1.105.2.2 for 3.3).; ; From the file revision history; it looks like the fix was back ported into 3.3.2. It adds the cast that seems to be the issue in this particular scenario. Specifically; we have a type attribute on an annotation that is an Array.; ; type = mypkg.Mybean[].class; ; The LookupEnvironment.getTypeFromSignature() method checks for the [ char to calculate a possible array (and dimension) if it exists and if found returns an ArrayBinding which cannot be cast to ReferenceBinding.; ; Heres the Exception and stack we see...; ; Internal compiler error; java.lang.ClassCastException: ; org.eclipse.jdt.internal.compiler.lookup.ArrayBinding; 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.convertMemberValue(BinaryTypeBinding.java:58); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createAnnotation(BinaryTypeBinding.java:86); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.convertMemberValue(BinaryTypeBinding.java:61); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.convertMemberValue(BinaryTypeBinding.java:74); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createAnnotation(BinaryTypeBinding.java:86); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.convertMemberValue(BinaryTypeBinding.java:61); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.convertMemberValue(BinaryTypeBinding.java:74); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createAnnotation(BinaryTypeBinding.java:86); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createAnnotations(BinaryTypeBinding.java:96); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createMethod(BinaryTypeBinding.java:508); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createMethods(BinaryTypeBinding.java:559); 	at ; org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.cachePartsFrom(BinaryTypeBinding.java:328); 	at ; org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:609); 	at ; org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:588); 	at org.eclipse.jdt.internal.compiler.Compiler.accept(Compiler.java:276); 	at ; org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:128); 	at ; org.eclipse.jdt.internal.compiler.lookup.PackageBinding.getTypeOrPackage(PackageBinding.java:178); 	at ; org.eclipse.jdt.internal.compiler.lookup.Scope.getPackage(Scope.java:2104); 	at ; org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.getTypeBinding(QualifiedTypeReference.java:69); 	at ; org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(TypeReference.java:134); 	at ; org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.resolveTypesFor(SourceTypeBinding.java:1358); 	at ; org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.methods(SourceTypeBinding.java:1099); 	at ; org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.faultInTypesForFieldsAndMethods(SourceTypeBinding.java:583); 	at ; org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.faultInTypes(CompilationUnitScope.java:431); 	at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:616); 	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:392); 	at ; org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:362); 	at ; org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.compile(IncrementalImageBuilder.java:302); 	at ; org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:299); 	at ; org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:130); 	at ; org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:280); 	at ; org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:192)",3
Code related; org.eclipse.jdt.internal.core.builder.State 1.53 and related classes.; Following discussions about bug 76266 and bug 122763; we (Philippe and I) believe that storing access restrictions templates into the project build state is not needed; hence should be avoided. ; This would call for their removal for the sake of optimization.; Moreover; Philippe pointed out that storing them is due to trigger a full build when the user changes his locale; which is not intended.; Note: need to check that the build state comparison is aligned as well.,3
"I20081119-1600; ; java-test:;      [echo] Running org.eclipse.pde.api.tools.tests.ApiToolsPluginTestSuite. Result file: C:\buildtest\I20081119-1600\eclipse-testing/results/win32.win32.x86_6.0/org.eclipse.pde.api.tools.tests.ApiToolsPluginTestSuite.xml.;      [java] org.eclipse.core.runtime.CoreException: Problems encountered while deleting files.;      [java] 	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:124);      [java] 	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFile(ResourceTree.java:303);      [java] 	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFile(ResourceTree.java:780);      [java] 	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1751);      [java] 	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:711);      [java] 	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:682);      [java] 	at org.eclipse.pde.api.tools.builder.tests.ApiTestingEnvironment.deleteWorkspaceFile(ApiTestingEnvironment.java:432);      [java] 	at org.eclipse.pde.api.tools.builder.tests.ApiTestingEnvironment.revertWorkspace(ApiTestingEnvironment.java:401);      [java] 	at org.eclipse.pde.api.tools.builder.tests.ApiTestingEnvironment.resetWorkspace(ApiTestingEnvironment.java:370);      [java] 	at org.eclipse.jdt.core.tests.builder.BuilderTests.tearDown(BuilderTests.java:470);      [java] 	at org.eclipse.pde.api.tools.builder.tests.ApiBuilderTest.tearDown(ApiBuilderTest.java:983);      [java] 	at org.eclipse.pde.api.tools.builder.tests.tags.TagTest.tearDown(TagTest.java:81);      [java] 	at junit.framework.TestCase.runBare(TestCase.java:136);      [java] 	at junit.framework.TestResult$1.protect(TestResult.java:106);      [java] 	at junit.framework.TestResult.runProtected(TestResult.java:124);      [java] 	at junit.framework.TestResult.run(TestResult.java:109);      [java] 	at junit.framework.TestCase.run(TestCase.java:120);      [java] 	at junit.framework.TestSuite.runTest(TestSuite.java:230);      [java] 	at junit.framework.TestSuite.run(TestSuite.java:225);      [java] 	at junit.framework.TestSuite.runTest(TestSuite.java:230);      [java] 	at junit.framework.TestSuite.run(TestSuite.java:225);      [java] 	at junit.framework.TestSuite.runTest(TestSuite.java:230);      [java] 	at junit.framework.TestSuite.run(TestSuite.java:225);      [java] 	at junit.framework.TestSuite.runTest(TestSuite.java:230);      [java] 	at junit.framework.TestSuite.run(TestSuite.java:225);      [java] 	at junit.framework.TestSuite.runTest(TestSuite.java:230);      [java] 	at junit.framework.TestSuite.run(TestSuite.java:225);      [java] 	at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:354);      [java] 	at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:206);      [java] 	at org.eclipse.test.CoreTestApplication.runTests(CoreTestApplication.java:35);      [java] 	at org.eclipse.test.CoreTestApplication.run(CoreTestApplication.java:31);      [java] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);      [java] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);      [java] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);      [java] 	at java.lang.reflect.Method.invoke(Method.java:597);      [java] 	at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethodWithException(EclipseAppContainer.java:574);      [java] 	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:195);      [java] 	at org.eclipse.equinox.internal.app.MainApplicationLauncher.run(MainApplicationLauncher.java:32);      [java] 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110);      [java] 	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79);      [java] 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:370);      [java] 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179);      [java] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);      [java] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);      [java] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);      [java] 	at java.lang.reflect.Method.invoke(Method.java:597);      [java] 	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:549);      [java] 	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:504);      [java] 	at org.eclipse.equinox.launcher.Main.run(Main.java:1236);      [java] 	at org.eclipse.equinox.launcher.Main.main(Main.java:1212);      [java] 	at org.eclipse.core.launcher.Main.main(Main.java:30);      [java] Contains: Could not delete: C:\buildtest\I20081119-1600\eclipse-testing\test-eclipse\eclipse\api_tools_plugins_folder\data\tagtest\src\a\b\c\test11.java.",3
Refer to bug 401040.; ; CBI produced ECJ contains META-INF/maven; which isnt necessary. The folder needs to be removed.,3
20050920; ; - rename a type and select to renam also strings; - open preview; ; see screenshot: Once its Update then its update,3
Its something like Floding. Floding enables me to collapes or expand a method; but what i really miss is a seperator between methods. ; Seperator like ; //--------------------------------//; or ; //=================//; etc...; ; I usually add some texts to the java code. but its really not the correct place; because; 1. has nor sence for java compiler.; 2. other develops work on the same project wants another seperator or none at all; 3. it increases the class in size and line number; 4. changes on seperator like:; from ; //--------------------------------//; to ; //------------------------------------------------------//; will be saved and mentioned in the Version Control.; ; However; this feature is almost done in IntelliJ IDEA but even there not enough; 1. user cant decied what is the seperator.; 2. it seperats everything semilar i mean inner Classes have the same seperator like methods.,3
Open a java file in the editor; hover on a object type; for example; ByteArrayOutputStream; there are strings in English in the hover text;; especailly the string Press F2 for focus.; ; See attached screenshot for details.,3
"class A {; 	Object m(){; 		return /*]*/A.class/*[*/;; 	}; }; ; The position (start/end) of A.class is [41;45] but it should be [39;45]",3
The print margin is specified at column 80 but is placed at the 104th columnin; all java source code.  This is under GTK and I am using courier-regular-10 font; as the Text Font.,3
Found in console window...; java.lang.NullPointerException;         at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo; (JavaDebugHover.java:112);         at ; org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo; (BestMatchHover.java:102);         at ; org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverIn; fo(JavaEditorTextHoverProxy.java:69);         at org.eclipse.jface.text.TextViewerHoverManager$4.run; (TextViewerHoverManager.java:160),3
The code formatter continues to be an excellent feature of Eclipse; but there ; is one aspect that offends my sensibilities...; ; Binary expressions wrap and place the operator at the start of the next line. ; Id much prefer the operators at the end of the previous line; for example:; ; Eclipse 3.2 formatter now gives me this (3.1 did; too):;       int sum = 100 + 200 + 300;                 + 400 + 500 + 600;                 + 700 + 800;; ; But I would prefer:;       int sum = 100 + 200 + 300 +;                 400 + 500 + 600 +;                 700 + 800;; ; This is when set to wrap when necessary and column indent. I might choose ; different options; but the key idea is that the operator should (IMHO) be at ; the end of the line; not the start,3
In interest of green builds:; ; * review transient test failures over the last few weeks; * those tests should no longer cause red Xs; * tests at risk shold log errors (i.e. to the log); but not cause a failure,3
"JDT UI from CVS HEAD as of today (06/10/2008).; ; Just stumbled across EditorBreadcrumb#createContent; ; public Control createContent(Composite parent) {; 	if (fComposite != null); 		new IllegalArgumentException(Content must only be created once.); //$NON-NLS-1$; 		; There is a throw missing in order to achieve the goal.",3
For an array variable (eg String[]); you can appear to create a Detail ; Formatter.; You go through all the motions but the formatter is not actually created.,3
"I believe Im getting a false positive resource leak warning when resources are closed using apache dbutils closeQuietly methods.; Simplified Code:; public static void test(Connection con){ ; 	PreparedStatement ps = null;; 	try {; 		ps = con.prepareStatement(foo);; 		// Remove this loop for no warning ; 		for (int i = 0; i < 1; i++) {; 			try {; 				ps.executeUpdate();; 			} catch (SQLException e) {; 				throw new SQLException(Some message; e); // << warning; 			}; 			// << move the closing finally to here for no warning; 		}; 	} catch (SQLException e) {; 		throw new RuntimeException(e);; 	} finally {; 		DbUtils.closeQuietly(ps);  // << change this to ps.close for no warning; 	}; }; ; ; ; The warning is removed if:;  1; I add the finally block after the inner try-catch;  2; I change closeQuietly to ps.close() (with the required try-catch wrapper);  3; I remove the for-loop",3
The description of a problem.; 1. I define a  several newContainerEntry with identical segment [0]; for example ;  ;     ..;     ipath1.. = MyLib/org.apache.axis;;     ipath2.. = MyLib/org.apache.log4j;;     ..;    JavaCore.newContainerEntry (iPath1..);;    JavaCore.newContainerEntry (iPath2..);;    ..; 2. In dialogue 1 (1.jpg) I normally see both ipath1; ipath2; 2. In dialogue 2 (2.jpg) I see only the first ipath1,3
3.0.1 Eclipse had an feature that when right-clicking JRE_LIB in Package; explorer view; you could change JRE that you are using for this project. Now;; when clicking it; I just get a normal file menu instead of configure jre menu;; where I normally could change the jre.,3
Need artwork for JUnit Test Results file type icon,3
While using javaw.exe as the default vm; multiple execution arguments could not be used (i.e.; one after the other with a space between multiple arguments;as in while using the command prompt). The launch configuration tool was used to specify the arguments(Arguments tab--> Program Arguments). More specifically; when I used a single argument; for example; localhost; it worked. But when I used two; such as localhost and 5001; (one after the other wih a space between two or putting a comma between them) none of the arguments was processed. When changed to java.exe; everything worked fine; i.e.; I was able to use multiple arguments in the Program Arguments textarea normally as while using command prompt. I am using jdk1.5.0_05. I specified the location of this jdk in the java installed jres preferences option.; ; Also; I am not sure if this one is a bug or not; but when I specified java.exe to be used as the default vm for eclipse using windows shortcut by writing this in the target box C:\eclipse\eclipse.exe -vm C:\jdk1.5.0_05\bin\java.exe; eclipse itself used java.exe to run; but it used javaw.exe to run my programs. The problem stated in the above para was still occurring. I finally had to hide javaw.exe from eclipse by putting it in a folder foo. Only then did it use java.exe to run my programs as well; and also the problem stated in the above para disappeared.,3
I often code methods where the return value is an expression; typically as the; result of invoking other methods.; ; On occasions; I would like to see what the return value for a method is.  That; is; I want to step over the return statement and see what the return value is; before exitting the method itself.  I guess this implies treating the return; statement as two pieces: push a result onto the stack; then the actual return.; ; I could inspect the expression; but that can often cause unwanted side effects.; ; I picture this as a pseudo-variable that appears int he variables view; perhaps; Return Value (in italics) that I can select and inspect.  Alternately; the; pseudo-variable could always be present (for non-void methods); but its value; would be assigned after executing the return statement.; ; The workaround is to assign the expression value to a temporary variable and; return that.  I find that aesthetically unpleasing (and it requires a code; change that is not always possible).; ; I realize that in theory; I could just step up to the next level and inspect the; variable that is assigned.  In my particular case (today); I have a chain of; method calls; and the final result is passed out of my EJB facade level. The; value is never assigned to a variable; and the value is changed by the; application server before being returned to my applications presentation layer.; This makes it very hard for me to determine what (and why) certain changes take; place; since I can only see the value as it appears in the presentation layer.,3
Id like to suggest improving the Link Source dialog so that updating exclusion filters is understood easier. ; Instead of two long messages; Id prefer a descriptive label and two shorter radio button messages.; ; Sample: ; Updating exclusion filters in other source folders solves nesting conflicts.; O Update exclusion filters; O Ignore nesting conflicts,3
R3.3 and I20070731-0800.; ; Deleting a member should leave non-dirty editor non-dirty.; ; Test Case:; 1. open a CU; 2. delete a method; ==> editor is dirty; ; Since move and reorder doesnt make the file dirty; delete should behave the same.,3
When creating a new class and attempting to add a generic interface to it; it is; not obvious how to specify what the generic options for that interface are.  You; can manually type in after selecting the interface which generic types youd; want; but it shows it as an error.; ; For instance; if I wanted to do something like:; class Foo implements Bar<ClassX> { }; ; I could go to add class; then add interface in that wizard and select Bar;; however the interface addition wizard does not understand Bar<ClassX> and; reports it as an error.  So I just select Bar.; ; I then manually type into the list of interfaces the additional <ClassX> to the; end of the name.  This does not generate the correct code when I hit finish;; including that it does not automatically import ClassX.; ; So a couple things are problems:; -Interface wizard should understand generics and not flag Bar<X> as an error; -Class creation wizard should understand generic interfaces and it should be; obvious how to specify what the generics are (whether they be a specific class; [class X implements Y<Z>]or a generic of the class being created [class X<T>; implements Y<T>]),3
There is no keyboard shortcut to easily navigate amongst the occurrences marked by the Mark Occurences command (alt-shift-O).; ; It would be nice if this could be connected to either the Next/Previous (Ctrl+.; Ctrl+;) commands; or the Find Next/Previous (Ctrl+k; Ctrl+shift+k).; ; Or a completly new next/previous occurence command.,3
If I have the following code; doSomething() happens everytime; and it takes me a; while to figure why the heck expr is true when it should be false =); ; if (expr);; {;     doSomething();; },3
/*;        A B D G; alpha  x; beta     x; delta      x; gamma        x; */; ; When I format the code; the first line of the comment; which contains the column; headers; is suddenly left justified to start on the same column as the rest of; the comment.; ; I had specifically told the code formatter not to format comments at all.,3
Report from newsgroup from Francesc Ros s:; ; Im using GM4 in a W2K. When in a javadoc comment I type @see and I ; attempt to access to code assist; nothing occurs. In previous releases; ; the code assists suggest a class names list and I can select one ; (i.e. the result was @see MyClass). If then I type # and ctrl-space; ; code assist suggest a method names list and I can select one ; (i.e. the result is @see MyClass#MyMethod). ; ;   I think this feature is indispensable. Simplify the use of javadoc ; crossreference feature. If there is not this feature the users will ; not use the @see and the quality of documentation will decrease.,3
"Here is my sample class:; ; /*;  * Copyright (C) 1993-2003 SEAGULL;  * ;  * HostBackEndBindingBridge.java;  * Created on Jul 22; 2003; 4:39:13 PM;  * ;  */;  ; package com.seagullsw.appinterface.server.backend.host;; ; import com.seagullsw.appinterface.server.backend.BackEndBindingBridge;; import com.seagullsw.appinterface.server.backend.BackEndException;; import com.seagullsw.appinterface.server.backend.InternalBackEnd;; import com.seagullsw.appinterface.server.backend.host.bind.AbstractHostConnector;; import com.seagullsw.appinterface.server.bind.connector.Connector;; ; /**;  * Creates Host back-end instances based on the contents of JAXB objects.;  * ;  * @author <a href=mailto:ggregory@seagullsw.com>Gary Gregory</a>;  * @version $Id$;  */; public class HostBackEndBindingBridge implements BackEndBindingBridge {; ; 	/* (non-Javadoc); 	 * @see; com.seagullsw.appinterface.server.backend.BackEndBindingBridge#toBackEnd(com.seagullsw.appinterface.server.bind.connector.Connector); 	 */; 	public InternalBackEnd toBackEnd(Connector connector) throws BackEndException {;         if (!(connector instanceof AbstractHostConnector)) {;             throw new IllegalStateException(connector +  is not an instance of;  + AbstractHostConnector.class);;         };         return this.toBackEnd((AbstractHostConnector) connector);; 	}; }; ; Where AbstractHostConnector is a sub-interface of Connector.; ; I get a warning here:; return this.toBackEnd((AbstractHostConnector) connector);; ; The warning:; 	Unnecessary cast to type AbstractHostConnector for expression of type; Connector. It is already compatible with the argument type Connector; HostBackEndBindingBridge.java; Transidiom-DevE/Java/Source/com/seagullsw/appinterface/server/backend/host; line 32	July 23; 2003 4:10:34 PM; ; This is a fine warning BUT what I want is a Quick Fix the create the method:; ; public InternalBackEnd toBackEnd(AbstractHostConnector connector); ; I only have the quick fix to /remove/ the type-cast.; ; In the past (before 3.0.m2+); when I did not have the Unnecessary cast; compiler warning turned on; I could choose to create methods like this.; ; Eclipse Platform; Version: 3.0.0; Build id: 200307230800",3
N20051009-0010 + jdt.core v_616; ; See bug 89529 for the new raw type warning; which is also suppressed by; @SuppressWarnings(unchecked).; ; ; import java.util.ArrayList;; import java.util.Collection;; ; public class A {;     void foo(Collection c) {;         new ArrayList(c); // quick fix;                           // Add @SuppressWarnings unchecked to foo();                           // appears twice; expected: only once;     }; },3
Created attachment 199503; screenshot; ; -------------------------------------------; List<String> list=null;; list= new ArrayList(); //QF on ArrayList; -------------------------------------------; ; The quick fix does not make sense here; interfaces and abstract types should not be proposed for constructor invocations.,3
This happens in 3.0M2; ; If Im searching for references of a method; I usually right click;; Search->References->Workspace.; However; with large workspaces; this can take pretty long; so Ive gotten in the; habit of searching for references within a working set.  I usually define a; workingset for each project and all its contents.; ; The problem is; when I search for references of a method in the workingset; it; does not find references to that symbol from the thirdparty jars I have attached; to the projects build path (verified the jar is selected as part of the working; set).  However; if I search the workspace; it does find the references in that; thirdparty jar.  This is usually for a method defined in the thirdparty jar that; I use; and want to see how it is used by the thirdparty.,3
It only fills the requester horisontally when the requester is resized.; ;  yvind,3
Build 20030107 or HEAD; ; The Java UI plug-in now registers a font definition for Java editors. The Java; editor font preference is no longer on the Java editors preference page but on; the Workbenchs Font preference page.; ; Currently we propagate this font to the JDT UI preference store to allow clients; to access the font preference as before. This will go away with 2.2. JDT Debug; UI accesses the font preference for the Snippet editor. I suggest to apply the; attached patch to org.eclipse.jdt.debug.ui. It adds the symbolic font name to; the Snippet editor.,3
M20050824-1200; ; See JDT/Core bug 104293. For that specific instance of the problem; theres an; easy workaround in JdtASTMatcher that we should submit for 3.1.1.,3
When typing fast this will frequently result in absorbing space characters. ; E.g. if you type = (which is accessed by pressing Shift in many european ; keyboard layouts) it is likely to have Shift not completely released when Space ; follows.,3
Build: 20020125; ; Description:; If you click on Save As while editing a java file; the save as dialog opens ; with blank folder and file name fields.  I would expect the initial values of ; these fields to match the current values.; ; Steps:; 1.  Open a java file in the java editor.  ; (e.g. /org/eclipse/ui/IActionBars.java); 2.  Click on save as.; 3.  The folder and file name fields are blank.  I would expect folder to ; contain /org/eclipse/ui and file name to contain IActionBars.java,3
Build ID: 20090621-0832; ; Steps To Reproduce:; 1. Create a new maven project; 2. Put some Foo class in src/main/java; 3. Put some bar.xml in src/main/resources; 4. bar.xml can be reached from Foo by classpath:bar.xml (e.g. in a ClasspathResource from Spring); 5. Export this project as a runnable jar; 6. Lo and behold: bar.xml is *not* in the root directory of the jar but in a subdirectory called resources. Your class doesnt work any more; bar.xml cant be found.,3
Preferences > Java > Code Generation > Templates shows a list of comment types; for classes; constructors; methods etc.; ; Under 2.1RC1 this tree used to be shown with graphical icons for each of the tree nodes; in 2.1RC2 these icons are not shown in the tree.,3
"DiagnoseParser as of 06/13/2003; ; When following syntax error (in #newLibraryEntry()) is diagnosed; the end ; result is confusing; especially due to the highlighting.; ; public class X {; ; 	public static void main(String[] args) {; 	}; 	public static int newLibraryEntry() {; 			; 		if (sourceAttachmentPath != null) {; 			if (sourceAttachmentPath.isEmpty()) { && !; sourceAttachmentPath.isAbsolute()) {; 			foo();; 		}; 		return null;; 	}; 	}; 	; 	public void foo() {; 	}; ; 	public void bar() {; 	}; }; ; Error diagnosis is:; ; Severity	Description	Resource	In Folder	Location; 	Creation Time; 	Syntax error on token {; invalid AssignmentOperator	X.java	Crap/src; 	line 12	June 13; 2003 6:02:40 PM; 	Syntax error on token &&; invalid PushLPAREN	X.java	Crap/src; 	line 12	June 13; 2003 6:02:40 PM; 	Syntax error on token(s); misplaced construct(s)	X.java	Crap/src; 	line 9	June 13; 2003 6:02:40 PM",3
I200409212000: The combo box containing the qualified name of the accessor ; class with its associated properties file has a misleading label Accessor ; class. The label should take both properties file and accessor class into ; account.,3
Build ID:  M20080221-1800; ; Steps To Reproduce:; 1.Create a Java project; 2.Create a .java source file; 3.Enter a function like this:; ; class Test {;     ArrayList params;; ;     public int getSqlParamCount() {;         return params == null ? null:params.size();;     }; }; ; ; More information:; If we remove the conditional; then the compiler complains:; ; class Test {;     ArrayList params;; ;     public int getSqlParamCount() {;         return null;;     }; },3
"jkca (4/11/2001 12:02:47 PM); 	jre-sdk 043; ; I attempted to change the value of a char to be a newline.  I tried both; \n and \n and neither of them worked.  I suspect there are problems with; tabs and other escaped characters.   Also; there should be support for (char)86.; ; DS (4/11/2001 2:52:48 PM); 	We should handle the escape chars.  (char)86 support is on hold.; 	Need the valid set of escape chars.; ; DS (4/17/2001 1:58:55 PM); 	Test with \n.; ; DS (4/17/2001 3:30:46 PM); 	Implemented the escape chars.; 	Verify and then move to inactive.; ; DW (4/18/01 4:42:53 PM); 	Verified. We might also want to support unicode sequences.; ; DW (6/2/01 12:46:40 PM); 	Possible enhancements:; 		For characters; allow; 			(char)86; 			unicode; 		For numbers; allow; 			hex input; 		For Strings; 			allow specification of null?",3
Example:; ; public class A ; {;   private static class B ;   {;   }; }; ; Collapse class B (so that it only is one line of code). Then select this line of code and cut that selection (e.g. Ctrl-X). ; The source is not cut; but source of class B is expanded again.; But some actions work; e.g. Del deletes class B.; ; Workaround: ; Select class in Package view. Then select cut.; ; ; ; ; -- Configuration Details --; Product: Eclipse 1.2.1.20090812-1036 (org.eclipse.epp.package.java.product); Installed Features:;  org.eclipse.jdt 3.5.1.r351_v20090810-0600-7r88FEoFI0WTo6Az-1qFRHm37ChJ,3
i have java perspective running and browsing sitting behind; still; on every selection change in the package explorer; java browsing is ; notified; updates its views; collects markers and does other work,3
- Enable Hyperlink Navigation (Ctrl-Click on source elements to open ; declaration); - Change focus to the outline; or another program (editor loses focus); - Hover over source in editor,3
latest submitted for 1022; for a 10 line file it takes 4 seconds on my 1GHz machine; it takes like 1/4 or 1/2 second to open even much larger files that are on the ; classpath (well; thats the only diff between them that i can tell),3
given this class:; ; public class C {; ;   private final int _a;; ;   public C(int a) {;     try {;       _a = Math.abs(34);;     } catch (Exception e) {;       _a = -1;;     };   }; }; ; results in a compiler error in the catch block that:; The final field _a may already have been assigned; ; IMO that is not correct here but it would be; if there are more statements after the first assignment to _a in the try block.; however; im not so firm what the java spec says on this and what gritty stuff there is on byte code level preventing a fix.; ; i think the compiler needs to check alternate execution paths as it already does when determining if a method returns a value for sure or not.,3
cod assist popup menu selection colors are extremely close to the popup background color on ; linux+gtk (and possibly osx too; i cant recall); making it very difficult to determine which item is ; the current selection. ;  ; There seems to be no way to configure this setting as well; unless im just missing it.,3
"The user operation is waiting for background work to complete. 1 work items ; letf; and the progress view does not show any oder work. It has hapened to me ; 3 times. I am not able to reproduce this bug consistently; in the 3 cases ; ihave to kill an realaunc eclipse.; ; I take a look to the log and I saw that it has como extrmely large  105 ; Megabytes;  it looks like something gets cicled ; ; 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668); 	at org.eclipse.jface.window.Window.open(Window.java:648); 	at org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:257); 	at org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager$2.run; (JavaDebugOptionsManager.java:746); 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages; (Synchronizer.java:106); 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668); 	at org.eclipse.jface.window.Window.open(Window.java:648); 	at org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:257); 	at org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager$2.run; (JavaDebugOptionsManager.java:746); 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages; (Synchronizer.java:106); 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668); 	at org.eclipse.jface.window.Window.open(Window.java:648); 	at org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:257); 	at org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager$2.run; (JavaDebugOptionsManager.java:746); 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages; (Synchronizer.java:106); 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668); 	at org.eclipse.jface.window.Window.open(Window.java:648); 	at org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:257); 	at org.eclipse.jdt.internal.debug.ui.JavaDebugOptionsManager$2.run; (JavaDebugOptionsManager.java:746); 	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35); 	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages; (Synchronizer.java:106); 	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385); 	at org.eclipse.jface.window.Window.runEventLoop(Window.java:668); 	at org.eclipse.jface.window.Window.open(Window.java:648)",3
The relaunch last name does not clearly tell the user that we are simply; re-launching the last launch that was launched.  Users have been confused by; this and expect it to debug.  We need a better name so that users realize it is; not switching launch modes.; ; Perhaps this leads to another point which is that the menu name debug is; misleading because it contains both run & debug actions.,3
I20060801-0900; ; Running Source > Find Broken Externalized Strings on ; /org.eclipse.ltk.ui.refactoring/src/org/eclipse/ltk/internal/ui/refactoring/RefactoringUIMessages.properties; gives these false positives:; ; Unused keys in: RefactoringUIMessages.properties - \org.eclipse.ltk.ui.refactoring\src\org\eclipse\ltk\internal\ui\refactoring (3 matches); Undefined keys in: RedoRefactoringAction.java - org.eclipse.ltk.ui.refactoring; Undefined keys in: RefactoringHistoryWizard.java - org.eclipse.ltk.ui.refactoring.history; Undefined keys in: UndoRefactoringAction.java - org.eclipse.ltk.ui.refactoring,3
"Using 1.5; the following code should compile fine.; ; public class X {; ;   public static void main(String argv[]) {;      int[] tabInt = new int[] {};;      int[] tabInt2 = tabInt.clone();;      System.out.print(SUCCESS);;   }; ; }; ; We report:; ----------; 1. ERROR in C:\tests_sources\X.java (at line 5); 	int[] tabInt2 = tabInt.clone();; 	      ^^^^^^^; Type mismatch: cannot convert from Object to int[]; ----------; 1 problem (1 error); ; The return type of clone() is int[]; but inside its signature it is still; java.lang.Object.; It adds a cast after the clone call.",3
If a synchronized method is inlined; then each occurence must be inlined into ; a synchronized block.  Eg; access of a long is not atomic and must be ; synchronized.; ; -------------------------- Bug.java ---------------------; class Bug {;     static long x;;     synchronized static void next(){x++;};     { next(); }; },3
While investigating bug 94452; I found a few place where we are creating more ; JDWP traffic than neccessary.; ; * ObjectReferenceImpl.uniqueID() is potentially throwing an ; ObjectCollectedException; which is not part of the JDI spec and causes an ; extra JDWP communication to determine if the object is allocated. The spec ; claims the id is unique as along as the object is allocated; but that can ; still be determined if a client needs to; by calling #isCollected() ; explicitly. We use the unique id for each object in the variables view.; * ArrayReferenceImpl is not caching its length; which cannot change. It goes ; to the target each time it needs its length.,3
I20051130-1215; ; The similar elements matcher could also handle the usual english plurals;  -> s and y -> ies.; ; class Item { // rename to Thing ;     Item[] items; //not found; should rename to things;     Item[] item; //ok; }; ; The non plus ultra would be support for conversions like this:; ; class Handy { // rename to MobilePhone;     java.util.Collection<Handy> handies; //-> mobilePhones;     Handy[] handy; //-> mobilePhone; },3
My use case is that I want to filter types that implement a certain interface; I cant do this now because the only think I can look at is the name of the type (using the filter extension mechanism). However in looking at the code; the IType is actually available and could easily be passed to the filter extension.,3
missing action docs for the expressions view,3
"The JLS3 states that the floating-point literals can now have a binary exponent.; ; Here are the rules to create a floating-point literal:; ; FloatingPointLiteral; 	DecimalFloatingPointLiteral; 	HexadecimalFloatingPointLiteral; ; DecimalFloatingPointLiteral:; 	Digits . Digitsopt ExponentPartopt FloatTypeSuffixopt; 	. Digits ExponentPartopt FloatTypeSuffixopt; 	Digits ExponentPart FloatTypeSuffixopt; 	Digits ExponentPartopt FloatTypeSuffix; ; ExponentPart:; 	ExponentIndicator SignedInteger; ; ExponentIndicator: one of; 	e E; ; SignedInteger:; 	Signopt Digits; ; Sign: one of; 	+ -; ; FloatTypeSuffix: one of; 	f F d D; ; HexadecimalFloatingPointLiteral:; 	HexSignificand BinaryExponent FloatTypeSuffixopt; ; HexSignificand:; 	HexNumeral; 	HexNumeral .; 	0x HexDigitsopt . HexDigits; 	0X HexDigitsopt . HexDigits; ; BinaryExponent:; 	BinaryExponentIndicator SignedInteger; ; BinaryExponentIndicator: one of; 	p P; 	; HexNumeral:; 	0 x HexDigits; 	0 X HexDigits; 	; HexDigits:; 	HexDigit; 	HexDigit HexDigits; 	; HexDigit: one of; 	0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F; ; The unsupported format is HexadecimalFloatingPointLiteral.",3
Build ID: I20081030-1917; ; Steps To Reproduce:; My expectation that sort members would sort the members based on the definitions in Java/Appearance/Member sort order but instead it just sort the variables alphabetically (which is not desirable in my case but would be nice to have it as a separate option). ; ; ; More information:; I am not sure what triggers Java/Appearance/Member sort but exected it to be triggered by cleanup/save actions and to deal with code ordering cleanup (such as imports order) and not alphabetical sort order.,3
Sometimes; when I do a Change Signature refactoring; an import that WAS in the; source file; is removed.  I dont know that its relevant; but the one place; Ive seen it for sure; the lost import was ONLY referenced in a call to a; constructor.; ; Something like this:; ; ; public Foo() {;   this(new Bar());; }; public Foo(IBar bar) {;   this.bar = bar; ; }; ; If I use Change Signature to add an additional parameter to the second; constructor; the import for Bar disappeared.,3
It would be good if there was an option to disable any warning/error for an; unread parameter on a method which over-rides a method in its superclass; as it; is common to have an API requiring certain methods to be over-ridden/implemented; which specify a signature including parameters the person doing the over-riding; does not need.; ; If the class or interface that originally defined the signature was in the; workspace and none of its implementors or subclasses used the parameter the; warning should still show up on the original class.,3
R2.0; ; 1) Turn on the preference to fill argument names on method completion; 2) Start writing a method name that have different signatures; 3) Choose one; 4) The argument name appears and has a underlined in green; 5) Select the argument name and paste some other name on it; 6) It remains underlined and only seems to get rid of that if you change the ; original name used for the paste (although; changing the original does not ; change the new argument).; ; What is the meaning of the underline? Why would it stay around after a paste ; (looks like a bug)?.,3
"build 0508; ; public class WordJumpTest {; ; 	public WordJumpTest() {; 		super();; 	}; ; 	public void testmymethod; ; ; 	public String toString() {; 		return test;; 	}; }; ; goto test<Cursor>mymethod; and change the m to M; now quickly press ctrl+left a few times (2x); the cursor moves to WordJumpTest",3
I20061219-1300; ; SurroundWithActionGroup waits for AST when building editor context menu. We must not wait for the AST while building the main editor context menu.; ; main prio=6 tid=0x00036340 nid=0xda0 in Object.wait() [0x0007e000..0x0007fc40];         at java.lang.Object.wait(Native Method);         - waiting on <0x12d4dda0> (a java.lang.Object);         at java.lang.Object.wait(Object.java:474);         at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:490);         - locked <0x12d4dda0> (a java.lang.Object);         at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:70);         at org.eclipse.jdt.internal.ui.text.correction.SurroundWith.getSelectedStatements(SurroundWith.java:170);         at org.eclipse.jdt.internal.ui.text.correction.QuickTemplateProcessor.getAssists(QuickTemplateProcessor.java:120);         at org.eclipse.jdt.internal.ui.actions.SurroundWithTemplateMenuAction.getTemplateActions(SurroundWithTemplateMenuAction.java:3;         at org.eclipse.jdt.internal.ui.actions.SurroundWithTemplateMenuAction.fillMenu(SurroundWithTemplateMenuAction.java:162);         at org.eclipse.jdt.internal.ui.actions.SurroundWithActionGroup.fillContextMenu(SurroundWithActionGroup.java:60);         at org.eclipse.jdt.internal.ui.actions.CompositeActionGroup.fillContextMenu(CompositeActionGroup.java:78);         at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.editorContextMenuAboutToShow(CompilationUnitEditor.java:1336);         at org.eclipse.ui.texteditor.AbstractTextEditor$13.menuAboutToShow(AbstractTextEditor.java:2486);         at org.eclipse.jface.action.MenuManager.fireAboutToShow(MenuManager.java:289);         at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:394);         at org.eclipse.jface.action.MenuManager.access$1(MenuManager.java:390);         at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:416);         at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:117);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:928);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:952);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:933);         at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:3681);         at org.eclipse.swt.widgets.Control.windowProc(Control.java:3398);         at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1554);         at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:1728);         at org.eclipse.swt.widgets.Display.windowProc(Display.java:4134);         at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method);         at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:227);         at org.eclipse.swt.widgets.Display.runPopups(Display.java:3491);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3073);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1945);         at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1909);         at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:425);         at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149);         at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:585);         at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethod(EclipseAppContainer.java:522);         at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:147);         at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:104);         at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:74);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:170);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:585);         at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:473);         at org.eclipse.equinox.launcher.Main.basicRun(Main.java:417);         at org.eclipse.equinox.launcher.Main.run(Main.java:1121);         at org.eclipse.equinox.launcher.Main.main(Main.java:1096),3
Build 20021016; ; 1) Import a binary plugin project; 2) In the packages view; add the filter to hide binary plugin projects; 3) Checkout that same project from a repository; ; -> Project is no longer a binary plugin project; but the packages view still; does not show it.  Somehow the filter needs to update the viewer when a project; becomes non-binary.,3
"Creaing a java file overwrites any external file with the same name in that folder without asking the user.; ; 1. Copy a java source file( e.g. Test.java ) to a folder of a project without using Eclipse.; 2. Using the class wizard in Eclipse; create a class( e.g. Test ) with the same name in that folder.; 3. Notice that the new class has overwritten the existing java file.; ; NOTES:; ; KH (5/28/2001 6:04:36 AM); 	Moving to JUI.; ; EG (5/28/01 4:48:02 PM); 	there should be an exception that the resource must not exist. 	; 	it looks like we are swallowing this exception either in JUI or JCORE.; ; MA (5/30/01 6:17:25 PM); 	My guess is that JDOM creates the cu with force. Investigating; ; MA (5/31/01 4:21:13 PM); 	bug was on our side; 	fixed > 115; ; PA (6/1/01 7:01:30 PM); 	build 116.2; 	- made a file Test.java with the following content directly on the filesystem:; 		---- begin of Test.java; 		---- end of Test.java; 	- start class wizard and make a class Test in the same project; 	- Error message comes up and says:; 		Title: NewElementWizard.op_error.title; 		Reason: Core exception: Resource /Test/Test.java must not exitst.; 	- confirm with OK - file is still not overridden/changed; 	- press finish again now -> wizard terminates.; 	- the file Test.java has now this content:; 		---- begin of Test.java; 		---- end of Test.java; 		public class Test {}; ; EG (18.07.2001 15:27:42); 	notice the NL bug in the title of the Error dialog.",3
Build Identifier: 20100917-0705; ; // @formatter:off Eclipse formatter messes up comment indentation here so turn it off for this block; public static enum Environment {;     PROD;       // Production level environments;     STAGING    // Staging; }; // @formatter:on; ; would like to not have to turn off formatter for this kind of code.  with formatter on it does this (which makes the comments not lineup in the editor):; ; public static enum Environment {;     PROD; // Production level environments;     STAGING // Staging; }; ; ; Reproducible: Always,3
"Build 3.2M5; ; When typing following code in editor (without building); there is no error indication in left ruler; where one appears when building.; ; public class X {; 	{; 		(a; 	}; }; ; Note that if removing the open parenthesis; the error icon appears as expected.",3
I20060105; ; Searching to references to a binary member constructor doesnt find any. For example searching for references to java.util.zip.ZipFile$ZipFileInputStream(lonng; ZipFile) in a JDK1.4.1_05 library (with Search JRE libraries enabled) doesnt find the reference in ZipFile#getInputStream(String).,3
Adding overlay on the threads and monitor icons in the debug view to show deadlocks.,3
I20040413; ; - Select a package; that has a bunch of inner classes; in the Package ; Explorer. (I selected org.eclipse.swt.examples.controlexample - its in the ; org.eclipse.swt.examples project).; ; - Choose Open Type Hierarchy (or F4).; ; - After the Hierarchy View opens; you will notice that the meat of what you ; want to look at is somewhat obscured. (In my case; there are really only two ; hierarchies in this package that are interesting: ControlExample; and Tab).; It would be nice if I could choose to hide the inner class hierarchies with an ; easy-to-access tool button on the Hierarchy Views toolbar.; ; (Also would be nice if the inner class hierarchies could come up collapsed in ; the tree; instead of expanded).; ; In SWT; we tend to have a lot of listeners; and we almost never want to see ; them as a class in their own right; because they are only interesting in the ; context of the class that they are defined in. (So it makes more sense to just ; go see them in the compilation unit of the defining class).; ; I suspect that it is more important to allow hiding of anonymous inner classes ; than named ones. The anonymous ones just arent very interesting by themselves.,3
"Given code:; ; package dj.test;; ; import junit.framework.TestCase;; ; /**;  * @author avi;  */; public class CopyOfDjTests extends TestCase {; 	public class Song {}; ; 	public class Dj {}; ; 	public void test00increasePlayCount() throws Exception {; 		Dj dj = new Dj();; 		Song song = new Song();; 		assertEquals(0; dj.playCount(song));; 	}; }; ; (With JUnit libraries imported).  The create method quick fix tries to; generate method playCount with return type Object.  Originally; I blamed; autoboxing; but the same happens when 1.4 compliance is enabled.; ; The issue appears to be that assertEquals is overloaded in TestCase",3
Build ID: I20090313-0100; ; Steps To Reproduce:; eclipse.buildId=I20090313-0100; java.version=1.6.0_13; java.vendor=Sun Microsystems Inc.; BootLoader constants: OS=win32; ARCH=x86; WS=win32; NL=cs_CZ; Framework arguments:  -showlocation; Command-line arguments:  -os win32 -ws win32 -arch x86 -showlocation; ; ; Error; Mon Mar 30 15:09:55 CEST 2009; An internal error occurred during: Compute launch button tooltip.; ; java.lang.NullPointerException; at org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.analyseCode(ConstructorDeclaration.java:70); at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode(TypeDeclaration.java:684); at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(TypeDeclaration.java:218); at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode(TypeDeclaration.java:666); at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(TypeDeclaration.java:253); at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.analyseCode(CompilationUnitDeclaration.java:111); at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:868); at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:518); at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:908); at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:657); at org.eclipse.jdt.internal.junit.launcher.JUnit4TestFinder.internalIsTest(JUnit4TestFinder.java:232); at org.eclipse.jdt.internal.junit.launcher.JUnit4TestFinder.isTest(JUnit4TestFinder.java:200); at org.eclipse.jdt.internal.junit.util.TestSearchEngine.isTestOrTestSuite(TestSearchEngine.java:58); at org.eclipse.jdt.internal.junit.JUnitPropertyTester.isJUnitTest(JUnitPropertyTester.java:112); at org.eclipse.jdt.internal.junit.JUnitPropertyTester.canLaunchAsJUnitTest(JUnitPropertyTester.java:87); at org.eclipse.jdt.internal.junit.JUnitPropertyTester.test(JUnitPropertyTester.java:70); at org.eclipse.core.internal.expressions.Property.test(Property.java:58); at org.eclipse.core.internal.expressions.TestExpression.evaluate(TestExpression.java:99); at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53); at org.eclipse.core.internal.expressions.AdaptExpression.evaluate(AdaptExpression.java:91); at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53); at org.eclipse.core.internal.expressions.IterateExpression.evaluate(IterateExpression.java:150); at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53); at org.eclipse.core.internal.expressions.WithExpression.evaluate(WithExpression.java:72); at org.eclipse.core.internal.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:53); at org.eclipse.core.internal.expressions.EnablementExpression.evaluate(EnablementExpression.java:53); at org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension.evalEnablementExpression(LaunchShortcutExtension.java:287); at org.eclipse.debug.internal.ui.contextlaunching.LaunchingResourceManager.getShortcutsForSelection(LaunchingResourceManager.java:439); at org.eclipse.debug.internal.ui.contextlaunching.LaunchingResourceManager.computeLabels(LaunchingResourceManager.java:224); at org.eclipse.debug.internal.ui.contextlaunching.LaunchingResourceManager$2.run(LaunchingResourceManager.java:138); at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55); ; ; ; More information: eclipse-3.5M6; component was set according to similar problems reported earlier (all are fixed),3
"200402122000; ; At the indicated position; ICompilationUnit#codeComplete(int offset;; ICompletionRequestor requestor) doesnt find a completion. Also no completion is; found when I replace the anonymous class by a local class. However; when I; remove the static modifier from main; the method is found.; ; I noticed that the outline doesnt show the local class as soon as I start; typing in the body of run(); but this might not have a connection to this PR.; ; public class XXX {; 	public static void main () {; 		Runnable r = new Runnable() {; 			public void run() {; 				doT // <-- No completions available.; 			}; 			private void doTheThing() { }; 		};; 	}; }",3
I have reproduced the following on both Linux and Win2k installation of Eclipse 3.1; ; When entering the following code (or similar) Eclipst tries to access the; context content help if one enters a dot after an enum variable (eg; after; MyEnumVar) and never comes back - one chan hear it accessing the hard disk; continuously but no amount of waiting will do.  The only resort is to kill; Eclipse and restard.; ; Although I am aware this is not intended and only the result of mis-typing; it; should not cause such a dramatic failure (especially as the ; key - a natural; thing to enter in a list of enums - is just next to the . key - a not so; natural thing to type; admittedly) and might cause a significant amount of; typing to go to waste.; ; I have a feeling this is due to nested recursive calls when trying to resolve types.; ; Code example:; ; public enum MyEnum {;   MyEnumVar(myvar);; // enter dot here -^  ;   AnotherEnumVar(anothervar);; ;   private MyEnum(String s) {;     this.value = new String(s);;   };   private final String value;; ;   public String value() { return s; }; }; ; the code otherwise compiles and works.,3
Im running 3.2M5.; ; In the scrapbook the Ctrl-U shortcut does not work.; ; I have to select Execute from the context menu or click the Evaluate selected text-button in the toolbar.; ; In 3.2M4 it works fine.,3
"Created attachment 113880; proposed fix; ; Build ID: M20080911-1700; ; One interface:;   public interface I1 {; 	Object m();;   }; and two classes:;   public class C1 {; 	public abstract Object m();;   };   public class C2 extends C1 implements I1 { }; ; The compiler reports one error in C1 (OK) and the following in C2:;   The type C2 must implement the inherited abstract method C1.m(); ; Reading the code in MethodVerifier#checkInheritedMethods; it looks very much like this is not exactly intended:; C1.m() should _not_ be reported against C2; because this; is already reported against C1. Instead; I1.m() should be; used in the message.; ; The use of a constant array index 0 is inherited all the way from; MethodVerifier.java version 1.1; at what time reporting happened; _after_ the loop. Version 1.30 extended the loop to include reporting; but did not update the indices.; ; Attaching a micro patch.",3
I am running Sun JDK 1.3.1_06.; ; I have a JAR to which I have attached source.  While viewing a class within ; that JAR; I search for the References to public method from that class.  The ; Search View returns with a list of the references to that method (which are ; also in the same JAR); but when I double-click on any of them I get an error ; pop-up box that says Could Not Open Editor.; ; Nothing gets written to the log file when this happens.; ; If you need anything else; let me know.,3
While trying out the great new Execution Environment support in 3.4 I discovered a particular runtime that I have which could handle 1.5 language and API features however it does not currently support JVMTI for debugging.  So when I went to debug using my newly defined EE I would get an exception from the launched Virtual Machine.; ; If I change the EE property ee.language.level to 1.4 then debugging works but then the compiler will be set also to 1.4 and I wont be able to use 1.5 features that are available in my particular runtime.; ; So either if there was an EE property for which debug agent to use or to use which ever one was hardcoded in the properties file.; ; Im open to suggestions or discussions.,3
"1. Open the type hierarchy for some type (X); 	2. Show inherited methods; 	3. select an inherited method and a method from the opened type (X); 	==> only one editor is opened (the one for X); 	When I only selecet the inherited method then its class is opened.; ; 	Either diable multiple selection or open both editors.; ; ; NOTES:; MA (06.08.2001 17:22:05); 	Now both selections open (behaviour like open in package viewer); 	fix in 200; ; EG (7/12/01 11:01:00 AM); 	open both editors",3
"Using 1216; we dont report a deprecation warning in this case:; 1) Compile this code:; [; public class X {; 	/** ; 	 * @deprecated; 	 */    ; 	public static class Y {; 	}; }; ]; ; 2) delete the source X.java; 3) compile this class putting the previous .class file on the classpath:; class A extends X.Y {; }; ; We dont report any deprecation warning; but we do if you move the javadoc; comment on the top level class.",3
When importing JRE definition settings from a preference settings file; entries in the XML file with the same install location as already present in the preferences store are ignored.; ; The condition in JREPreferenceModifyListener.visit() is as follows:;   if (!names.contains(vm.getName()) && ;       !locations.contains(vm.getInstallLocation())) {;     vms.addVM(vm);;   }; ; I would like to request that an entry is added independent of an already existing entry for the same JRE location; i.e. the second condition above is dropped. We can even argue that an entry being imported with the same name as an existing one is replacing the existing one instead of being ignored.; ; Reason/use case: As the logical name of the JRE is stored in .classpath; and .classpath is usually stored in the source code repository; we must ensure that all developers work with the same mappings of logical names and JRE installation locations. As a result of this; there is usually more than one JRE entry per Java installation path. When we now distribute an import file containing a set of (standard) JRE mappings and the user already has some self-defined entries; then some new mappings are arbitrarily ignored.; ; (BTW: I erroneously assumed some other bug earlier (reported in bug 110588) until I had time to look into the source code...),3
Using I-0427 build; just opening the Java Editor; and selecting something in the ; outline causes following exception. I marked as critical; since once it happens; ; the edit area doesnt repaint correctly and editor must be closed to recover. ; ; Note: I had experimented with -Dorg.eclipse.jdt.internal.ui.projection=true; but saw lots of problems; removed it; then still saw this problem. Im not sure ; if occurs in fresh install (but since I know some dont use outline view much ; any more; thought it might have slipped through unnoticed).; ; ; ; ; !MESSAGE Failed to execute runnable (org.eclipse.jface.text.; Assert$AssertionFailedException: Assertion failed: ); !STACK 0; org.eclipse.swt.SWTException: Failed to execute runnable (org.eclipse.jface.; text.Assert$AssertionFailedException: Assertion failed: );         at java.lang.Throwable.<init>(Throwable.java);         at java.lang.Throwable.<init>(Throwable.java);         at org.eclipse.swt.SWTException.<init>(SWTException.java:73);         at org.eclipse.swt.SWT.error(SWT.java:2659);         at org.eclipse.swt.SWT.error(SWT.java);         at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.; java);         at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1437);         at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1408);         at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.; java:244);         at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140);         at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:; 90);         at org.eclipse.core.internal.runtime.PlatformActivator$1.; run(PlatformActivator.java:280);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.; java:240);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.; java:117);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.; java:84);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.; java:57);         at sun.reflect.DelegatingMethodAccessorImpl.; invoke(DelegatingMethodAccessorImpl.java:59);         at java.lang.reflect.Method.invoke(Method.java:389);         at org.eclipse.core.launcher.Main.basicRun(Main.java:267);         at org.eclipse.core.launcher.Main.run(Main.java:699);         at org.eclipse.core.launcher.Main.main(Main.java:683); Failed to execute runnable (org.eclipse.jface.text.; Assert$AssertionFailedException: Assertion failed: ); !ENTRY org.eclipse.ui 4 4 Apr 29; 2004 03:54:15.897; !MESSAGE *** SWT nested exception; *** SWT nested exception; Reason:; !ENTRY org.eclipse.ui 4 0 Apr 29; 2004 03:54:15.897; !MESSAGE Assertion failed:; !STACK 0; org.eclipse.jface.text.Assert$AssertionFailedException: Assertion failed:;         at java.lang.Throwable.<init>(Throwable.java);         at java.lang.Throwable.<init>(Throwable.java);         at org.eclipse.jface.text.Assert$AssertionFailedException.<init>(Assert.; java:56);         at org.eclipse.jface.text.Assert.isTrue(Assert.java:177);         at org.eclipse.jface.text.Assert.isTrue(Assert.java);         at org.eclipse.jface.text.projection.ProjectionMapping.; toImageRegion(ProjectionMapping.java);         at org.eclipse.jface.text.projection.ProjectionMapping.; toImageRegion(ProjectionMapping.java);         at org.eclipse.jface.text.TextViewer.modelRange2WidgetRange(TextViewer.; java);         at org.eclipse.jface.text.source.AnnotationRulerColumn.; doPaint1(AnnotationRulerColumn.java:504);         at org.eclipse.jface.text.source.AnnotationRulerColumn.; doubleBufferPaint(AnnotationRulerColumn.java:312);         at org.eclipse.jface.text.source.AnnotationRulerColumn.; access$3(AnnotationRulerColumn.java:288);         at org.eclipse.jface.text.source.AnnotationRulerColumn$1.; paintControl(AnnotationRulerColumn.java:207);         at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:; 82);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java);         at org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java);         at org.eclipse.swt.widgets.Control.windowProc(Control.java);         at org.eclipse.swt.widgets.Display.windowProc(Display.java);         at org.eclipse.swt.internal.win32.OS.RedrawWindow(Native Method);         at org.eclipse.swt.widgets.Control.update(Control.java:2847);         at org.eclipse.swt.widgets.Display.update(Display.java:3065);         at org.eclipse.jface.window.Window.runEventLoop(Window.java);         at org.eclipse.jface.window.Window.open(Window.java:650);         at org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:; 287);         at org.eclipse.jface.util.SafeRunnable.handleException(SafeRunnable.; java:50);         at org.eclipse.jface.viewers.StructuredViewer$3.; handleException(StructuredViewer.java:434);         at org.eclipse.core.internal.runtime.InternalPlatform.; handleException(InternalPlatform.java:333);         at org.eclipse.core.internal.runtime.InternalPlatform.; run(InternalPlatform.java);         at org.eclipse.core.runtime.Platform.run(Platform.java);         at org.eclipse.jface.viewers.StructuredViewer.; firePostSelectionChanged(StructuredViewer.java:429);         at org.eclipse.jface.viewers.StructuredViewer.; handlePostSelect(StructuredViewer.java:680);         at org.eclipse.jface.viewers.StructuredViewer$5.; widgetSelected(StructuredViewer.java:698);         at org.eclipse.jface.util.OpenStrategy.; firePostSelectionEvent(OpenStrategy.java:198);         at org.eclipse.jface.util.OpenStrategy.access$4(OpenStrategy.java:193);         at org.eclipse.jface.util.OpenStrategy$3.run(OpenStrategy.java:334);         at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35);         at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.; java);         at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1437);         at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1408);         at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.; java:244);         at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140);         at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:; 90);         at org.eclipse.core.internal.runtime.PlatformActivator$1.; run(PlatformActivator.java:280);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.; java:240);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.; java:117);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.; java:84);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.; java:57);         at sun.reflect.DelegatingMethodAccessorImpl.; invoke(DelegatingMethodAccessorImpl.java:59);         at java.lang.reflect.Method.invoke(Method.java:389);         at org.eclipse.core.launcher.Main.basicRun(Main.java:267);         at org.eclipse.core.launcher.Main.run(Main.java:699);         at org.eclipse.core.launcher.Main.main(Main.java:683); Assertion failed:; ; ; ; Note: I had experimented with -Dorg.eclipse.jdt.internal.ui.projection=true; but saw lots of problems; removed it; then still saw this problem.,3
"20040128 (uses jdt.core from I20040128 and HEAD); ; - select IOException from foo signature.; - local rename; press RR; ; -> Illegal Argument Exception; ; package x;; ; import java.io.IOException;; import java.io.Reader;; ; public class B {; 	; 	private Reader reader;; 	; 	public void dispose() {; 		if (reader != null) {; 			try {; 				reader.; 					close() ; // my formatting; 			} catch (IOException e) {; 			}; 		}; 	}; 	; 	/**; 	 * @param name1; 	 * @throws IOException; 	 */; 	public void foo(int name1) throws IOException {; 		; 	}; 	; 		; }; ; java.lang.IllegalArgumentException: Argument not valid; 	at java.lang.Throwable.<init>(Throwable.java); 	at java.lang.Throwable.<init>(Throwable.java:73); 	at org.eclipse.swt.SWT.error(SWT.java:2594); 	at org.eclipse.swt.SWT.error(SWT.java:2538); 	at; org.eclipse.jface.text.DocumentAdapter.replaceTextRange(DocumentAdapter.java:196); 	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:6017); 	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6953); 	at org.eclipse.swt.custom.StyledText.doContent(StyledText.java:2554); 	at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:5322); 	at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:5345); 	at org.eclipse.swt.custom.StyledText$8.handleEvent(StyledText.java:5070); 	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java); 	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java); 	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java); 	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3037); 	at org.eclipse.swt.widgets.Control.windowProc(Control.java); 	at org.eclipse.swt.widgets.Display.windowProc(Display.java); 	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method); 	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java); 	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java); 	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1530); 	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1506); 	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:265); 	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139); 	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47); 	at; org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:248); 	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79); 	at; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)",3
The debug platform now provides support for launch shortcut key-bindings; ; similar to the open view support in the workbench. From launchShortcuts ext ; pt schema:; ; Since 3.1; the debug platform registers a command handler for each launch ; shortcut and its applicable modes to allow clients to define key-bindings for ; a launch shortcut. The command id for a handler is generated as the launch ; shortcut id attribute; followed by a dot and the applicable launch mode. For ; example; the command id for the above launch shortcut example would be ; com.example.ExampleLaunchShortcutId.debug for launching in debug mode. A ; command and key binding could be defined as follows; to bind ALT-SHIFT-D; E ; to the launch shortcut.; ;    <extension point=org.eclipse.ui.commands>;       <command;             name=Debug Example Launch;             description=Debug Example Launch;             categoryId=org.eclipse.debug.ui.category.run;             id=com.example.ExampleLaunchShortcutId.debug>;       </command>;       <keyBinding;             keySequence=M3+M2+D E;             contextId=org.eclipse.ui.globalScope;             commandId=com.example.ExampleLaunchShortcutId.debug;             ; keyConfigurationId=org.eclipse.ui.defaultAcceleratorConfiguration>;       </keyBinding>;    </extension>,3
Just checked out the new Source > Generate equals and hashcode feature. I wonder why in the method; the classes of the two Objects are not compared.; ; I can see a check for super.equals and a cast afterwards. I had expected something like; ; if (!getClass().equals(obj.getClass()); return false;; ; Ben,3
I changed a method name using Refactor / Rename.; ; This change did not propagate to a @link tag (in a different source file) that; refered to the old method name.,3
With M9 i get now and then a classcast exception when a breakpoints hits; When i see this class cast exception eclipse hangs.; ; java.lang.ClassCastException: ; org.eclipse.jdt.internal.debug.core.model.JDINullValue;         at ; org.eclipse.jdt.internal.debug.core.logicalstructures.MapStructureType$1.run; (MapStructureType.java:33);         at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation; (JDIThread.java:659); ; ; when it hangs i get this thread dump:; ; Console Polling Thread prio=7 tid=0x01684e50 nid=0x160 waiting on condition [0; x03d4f000..0x03d4fc68];         at java.lang.Thread.sleep(Native Method);         at org.eclipse.debug.internal.ui.views.console.ConsoleDocumentPartitione; r.pollAndSleep(ConsoleDocumentPartitioner.java:565);         at org.eclipse.debug.internal.ui.views.console.ConsoleDocumentPartitione; r$1.run(ConsoleDocumentPartitioner.java:549);         at java.lang.Thread.run(Thread.java:566); ; org.eclipse.jdt.debug: JDI Event Dispatcher prio=7 tid=0x0164b308 nid=0xe54 in;  Object.wait() [0x03a4f000..0x03a4fce8];         at java.lang.Object.wait(Native Method);         - waiting on <0x5059bd00> (a org.eclipse.jdi.internal.connect.PacketRece; iveManager);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.jdi.internal.connect.PacketReceiveManager.waitForPacketAv; ailable(PacketReceiveManager.java:168);         at org.eclipse.jdi.internal.connect.PacketReceiveManager.getCommand(Pack; etReceiveManager.java:93);         - locked <0x5059bd00> (a org.eclipse.jdi.internal.connect.PacketReceiveM; anager);         at org.eclipse.jdi.internal.MirrorImpl.getCommandVM(MirrorImpl.java:276); ;         at org.eclipse.jdi.internal.event.EventQueueImpl.remove(EventQueueImpl.j; ava:63);         at org.eclipse.jdi.internal.event.EventQueueImpl.remove(EventQueueImpl.j; ava:48);         at org.eclipse.jdt.internal.debug.core.EventDispatcher.run(EventDispatch; er.java:213);         at java.lang.Thread.run(Thread.java:566); ; Packet Send Manager prio=7 tid=0x0168c190 nid=0x898 in Object.wait() [0x03c4f0; 00..0x03c4f9e8];         at java.lang.Object.wait(Native Method);         - waiting on <0x5059be80> (a org.eclipse.jdi.internal.connect.PacketSend; Manager);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.jdi.internal.connect.PacketSendManager.sendAvailablePacke; ts(PacketSendManager.java:94);         - locked <0x5059be80> (a org.eclipse.jdi.internal.connect.PacketSendMana; ger);         at org.eclipse.jdi.internal.connect.PacketSendManager.run(PacketSendMana; ger.java:54);         at java.lang.Thread.run(Thread.java:566); ; Packet Receive Manager prio=7 tid=0x0168c008 nid=0x2f8 runnable [0x03b4f000..0; x03b4fd68];         at java.net.SocketInputStream.socketRead0(Native Method);         at java.net.SocketInputStream.read(SocketInputStream.java:129);         at java.net.SocketInputStream.read(SocketInputStream.java:182);         at java.io.DataInputStream.readInt(DataInputStream.java:450);         at org.eclipse.jdi.internal.jdwp.JdwpPacket.read(JdwpPacket.java:124);         at org.eclipse.jdi.internal.connect.PacketReceiveManager.readAvailablePa; cket(PacketReceiveManager.java:224);         at org.eclipse.jdi.internal.connect.PacketReceiveManager.run(PacketRecei; veManager.java:70);         at java.lang.Thread.run(Thread.java:566); ; Input Stream Monitor prio=7 tid=0x0164b490 nid=0xc1c in Object.wait() [0x0394f; 000..0x0394fae8];         at java.lang.Object.wait(Native Method);         - waiting on <0x5059bfc8> (a java.lang.Object);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStr; eamMonitor.java:124);         - locked <0x5059bfc8> (a java.lang.Object);         at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamM; onitor.java:99);         at org.eclipse.debug.internal.core.InputStreamMonitor$1.run(InputStreamM; onitor.java:75);         at java.lang.Thread.run(Thread.java:566); ; Output Stream Monitor prio=7 tid=0x0164a670 nid=0x8a8 runnable [0x0352f000..0x; 0352fb68];         at java.io.FileInputStream.readBytes(Native Method);         at java.io.FileInputStream.read(FileInputStream.java:177);         at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStream; Monitor.java:132);         at org.eclipse.debug.internal.core.OutputStreamMonitor.access$1(OutputSt; reamMonitor.java:124);         at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStrea; mMonitor.java:177);         at java.lang.Thread.run(Thread.java:566); ; Output Stream Monitor prio=7 tid=0x0164a7f8 nid=0x100 runnable [0x0342f000..0x; 0342fbe8];         at java.io.FileInputStream.readBytes(Native Method);         at java.io.FileInputStream.read(FileInputStream.java:194);         at java.io.BufferedInputStream.read1(BufferedInputStream.java:228);         at java.io.BufferedInputStream.read(BufferedInputStream.java:285);         - locked <0x505a0158> (a java.io.BufferedInputStream);         at java.io.FilterInputStream.read(FilterInputStream.java:90);         at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStream; Monitor.java:132);         at org.eclipse.debug.internal.core.OutputStreamMonitor.access$1(OutputSt; reamMonitor.java:124);         at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStrea; mMonitor.java:177);         at java.lang.Thread.run(Thread.java:566); ; Worker-14 prio=5 tid=0x01619de0 nid=0x400 in Object.wait() [0x0332f000..0x0332; fbe8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:209);         - locked <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:23; 6);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:59); ; Worker-13 prio=5 tid=0x016f79a0 nid=0xd40 in Object.wait() [0x0312f000..0x0312; fc68];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:209);         - locked <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:23; 6);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:59); ; Worker-12 prio=5 tid=0x01266518 nid=0xbe4 in Object.wait() [0x0302f000..0x0302; fce8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:209);         - locked <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:23; 6);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:59); ; Worker-11 prio=5 tid=0x013afb70 nid=0x688 runnable [0x02f2f000..0x02f2fd68];         at java.lang.ProcessImpl.waitFor(Native Method);         at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorJob.run(Run; timeProcess.java:362);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66); ; Worker-10 prio=5 tid=0x01608ff8 nid=0x224 in Object.wait() [0x025ef000..0x025e; f9e8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:209);         - locked <0x4d7caf98> (a org.eclipse.core.internal.jobs.WorkerPool);         at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:23; 6);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:59); ; org.eclipse.jdt.internal.ui.text.JavaReconciler daemon prio=2 tid=0x026988d8 n; id=0xd8c in Object.wait() [0x0382f000..0x0382fae8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4e7ffea8> (a org.eclipse.jface.text.reconciler.DirtyRegi; onQueue);         at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread; .run(AbstractReconciler.java:172);         - locked <0x4e7ffea8> (a org.eclipse.jface.text.reconciler.DirtyRegionQu; eue); ; Java indexing daemon prio=4 tid=0x011cdfe0 nid=0x848 in Object.wait() [0x0238f; 000..0x0238fd68];         at java.lang.Object.wait(Native Method);         - waiting on <0x4de3a880> (a org.eclipse.jdt.internal.core.search.indexi; ng.IndexManager);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobMan; ager.java:344);         - locked <0x4de3a880> (a org.eclipse.jdt.internal.core.search.indexing.I; ndexManager);         at java.lang.Thread.run(Thread.java:566); ; Thread-1 prio=7 tid=0x011ca9a0 nid=0xbd4 in Object.wait() [0x021bf000..0x021bf; 9e8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4de5ae18> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116);         - locked <0x4de5ae18> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132);         at org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceC; leanerThread.run(ActionContributionItem.java:196); ; Thread-0 prio=7 tid=0x01503e28 nid=0x46c in Object.wait() [0x020bf000..0x020bf; a68];         at java.lang.Object.wait(Native Method);         - waiting on <0x4de5aea0> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116);         - locked <0x4de5aea0> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132);         at org.eclipse.jface.action.ActionContributionItem$ImageCache$ReferenceC; leanerThread.run(ActionContributionItem.java:196); ; Start Level Event Dispatcher daemon prio=5 tid=0x00987960 nid=0xa44 in Object.; wait() [0x0195f000..0x0195fb68];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d4fe110> (a org.eclipse.osgi.framework.eventmgr.EventTh; read);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThr; ead.java:162);         - locked <0x4d4fe110> (a org.eclipse.osgi.framework.eventmgr.EventThread; );         at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:; 100); ; Framework Event Dispatcher daemon prio=5 tid=0x00987748 nid=0xf24 in Object.wa; it() [0x0185f000..0x0185fbe8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d4fe178> (a org.eclipse.osgi.framework.eventmgr.EventTh; read);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.osgi.framework.eventmgr.EventThread.getNextEvent(EventThr; ead.java:162);         - locked <0x4d4fe178> (a org.eclipse.osgi.framework.eventmgr.EventThread; );         at org.eclipse.osgi.framework.eventmgr.EventThread.run(EventThread.java:; 100); ; Low Memory Detector daemon prio=5 tid=0x008ff060 nid=0x430 runnable [0x0000000; 0..0x00000000]; ; CompilerThread0 daemon prio=10 tid=0x008fdd28 nid=0x55c waiting on condition [; 0x00000000..0x00f5fa58]; ; Signal Dispatcher daemon prio=10 tid=0x008fd0d8 nid=0xefc waiting on condition;  [0x00000000..0x00000000]; ; Finalizer daemon prio=9 tid=0x008f4188 nid=0x8e4 in Object.wait() [0x00d5f000.; .0x00d5fa68];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d4fe360> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116);         - locked <0x4d4fe360> (a java.lang.ref.ReferenceQueue$Lock);         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132);         at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159); ; Reference Handler daemon prio=10 tid=0x008f2ce8 nid=0x1f0 in Object.wait() [0x; 00c5f000..0x00c5fae8];         at java.lang.Object.wait(Native Method);         - waiting on <0x4d4fe3e0> (a java.lang.ref.Reference$Lock);         at java.lang.Object.wait(Object.java:468);         at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:118);         - locked <0x4d4fe3e0> (a java.lang.ref.Reference$Lock); ; main prio=7 tid=0x000366d0 nid=0xeb0 in Object.wait() [0x0007e000..0x0007fc3c]; ;         at java.lang.Object.wait(Native Method);         - waiting on <0x4bfa0850> (a org.eclipse.jdt.internal.debug.core.logical; structures.MapStructureType);         at java.lang.Object.wait(Object.java:468);         at org.eclipse.jdt.internal.debug.core.logicalstructures.LogicalObjectSt; ructureInterfaceType.getLogicalStructure(LogicalObjectStructureInterfaceType.jav; a:132);         - locked <0x4bfa0850> (a org.eclipse.jdt.internal.debug.core.logicalstru; ctures.MapStructureType);         - locked <0x4bfa0850> (a org.eclipse.jdt.internal.debug.core.logicalstru; ctures.MapStructureType);         at org.eclipse.debug.internal.core.LogicalStructureType.getLogicalStruct; ure(LogicalStructureType.java:91);         at org.eclipse.debug.internal.ui.views.variables.VariablesViewContentPro; vider.getLogicalValue(VariablesViewContentProvider.java:222);         at org.eclipse.debug.internal.ui.views.variables.VariablesViewContentPro; vider.getValueChildren(VariablesViewContentProvider.java:124);         at org.eclipse.debug.internal.ui.views.variables.VariablesViewContentPro; vider.getModelSpecificChildren(VariablesViewContentProvider.java:109);         at org.eclipse.debug.internal.ui.views.variables.VariablesViewContentPro; vider.getChildren(VariablesViewContentProvider.java:89);         at org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren(AbstractT; reeViewer.java:703);         at org.eclipse.jface.viewers.AbstractTreeViewer.isExpandable(AbstractTre; eViewer.java:1144);         at org.eclipse.jface.viewers.AbstractTreeViewer.updatePlus(AbstractTreeV; iewer.java:1597);         at org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren(AbstractT; reeViewer.java:1545);         at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct(Ab; stractTreeViewer.java:1038);         at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(Abstract; TreeViewer.java:1013);         at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(Abstract; TreeViewer.java:976);         at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(Abstract; TreeViewer.java:964);         at org.eclipse.jface.viewers.StructuredViewer$7.run(StructuredViewer.jav; a:925);         at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(Struct; uredViewer.java:863);         at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.j; ava:923);         at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.j; ava:882);         at org.eclipse.debug.internal.ui.views.variables.VariablesViewer.refresh; (VariablesViewer.java:69);         at org.eclipse.debug.internal.ui.views.variables.ToggleLogicalStructureA; ction$1.run(ToggleLogicalStructureAction.java:57);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69); ;         at org.eclipse.debug.internal.ui.views.variables.ToggleLogicalStructureA; ction.valueChanged(ToggleLogicalStructureAction.java:55);         at org.eclipse.debug.internal.ui.views.variables.ToggleLogicalStructureA; ction.run(ToggleLogicalStructureAction.java:47);         at org.eclipse.debug.ui.AbstractDebugView$3.run(AbstractDebugView.java:5; 91);         at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35);         at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.ja; va:106);         - locked <0x506d8eb0> (a org.eclipse.swt.widgets.RunnableLock);         at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2693);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2385);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1363);         at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1334);         at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.jav; a:253);         at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141);         at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:97; );         at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformAct; ivator.java:307);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.ja; va:256);         at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.ja; va:127);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.; java:39);         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces; sorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:494);         at org.eclipse.core.launcher.Main.basicRun(Main.java:185);         at org.eclipse.core.launcher.Main.run(Main.java:638);         at org.eclipse.core.launcher.Main.main(Main.java:622); ; VM Thread prio=10 tid=0x008f0468 nid=0x954 runnable; ; VM Periodic Task Thread prio=10 tid=0x00900160 nid=0x9a4 waiting on condition;         at ; org.eclipse.jdt.internal.debug.core.logicalstructures.LogicalObjectStructureInte; rfaceType$1.run(LogicalObjectStructureInterfaceType.java:119);         at org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run; (JDIThread.java:2510);         at org.eclipse.core.internal.jobs.Worker.run(Worker.java:66),3
Heres a fragment of the log file of one of our tests where in maven is downloading all the jars that jetty6 needs.; ; Downloading: http://repo1.maven.org/maven2/org/eclipse/jdt/core/3.1.0/core-3.1.0.jar; 3472K downloaded; [WARNING] *** CHECKSUM FAILED - Error retrieving checksum file for org/eclipse/jdt/core/3.1.0/core-3.1.0.jar - IGNORING,3
F1; class java.util.Properies; jdt 1.3; ; when it does not have source attached some fields are displayed incorrectly; for example: keyValueSeparators,3
"I20050324; ; On the following test case:; @Ann(at| // code complete here; public class A {; }; @interface Ann {; 	String attr();; }; ; I got the following IllegalArgumentException:; java.lang.IllegalArgumentException;         at org.eclipse.jdt.core.Signature.getParameterCount(Signature.java:950);         at org.eclipse.jdt.core.Signature.getParameterTypes(Signature.java:1083);         at; org.eclipse.jdt.internal.ui.text.java.ProposalLabelProvider.appendUnboundedParameterList(ProposalLabelProvider.java:73);         at; org.eclipse.jdt.internal.ui.text.java.ProposalLabelProvider.createMethodProposalLabel(ProposalLabelProvider.java:168);         at; org.eclipse.jdt.internal.ui.text.java.ProposalLabelProvider.createLabel(ProposalLabelProvider.java:323);         at; org.eclipse.jdt.internal.ui.text.java.ResultCollector.createAnnotationAttributeReferenceProposal(ResultCollector.java:392);         at; org.eclipse.jdt.internal.ui.text.java.ResultCollector.acceptAnnotationAttributeReference(ResultCollector.java:387);         at; org.eclipse.jdt.internal.ui.text.java.ResultCollector.accept(ResultCollector.java:506);         at; org.eclipse.jdt.internal.codeassist.CompletionEngine.findAnnotationAttributes(CompletionEngine.java:1264);         at; org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(CompletionEngine.java:874);         at; org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(CompletionEngine.java:1167);         at org.eclipse.jdt.internal.core.Openable.codeComplete(Openable.java:119);         at; org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(CompilationUnit.java:300);         at; org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(CompilationUnit.java:293);         at; org.eclipse.jdt.internal.ui.text.java.JavaCompletionProcessor.internalComputeCompletionProposals(JavaCompletionProcessor.java:358);         at; org.eclipse.jdt.internal.ui.text.java.JavaCompletionProcessor.computeCompletionProposals(JavaCompletionProcessor.java:332);         at; org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:1470);         at; org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:250);         at; org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$7(CompletionProposalPopup.java:247);         at; org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:206);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69);         at; org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:201);         at; org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1319);         at; org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:183);         at; org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:82);         at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69);         at; org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:80);         at org.eclipse.jface.action.Action.runWithEvent(Action.java:1003);         at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:181);         at; org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:108);         at org.eclipse.core.commands.Command.execute(Command.java:331);         at; org.eclipse.core.commands.ParameterizedCommand.execute(ParameterizedCommand.java:390);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:452);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:741);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:784);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:543);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:486);         at; org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:110);         at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82);         at org.eclipse.swt.widgets.Display.filterEvent(Display.java:777);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:866);         at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:851);         at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:879);         at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:875);         at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1182);         at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3121);         at org.eclipse.swt.widgets.Control.windowProc(Control.java:3024);         at org.eclipse.swt.widgets.Display.windowProc(Display.java:3466);         at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method);         at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1624);         at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2525);         at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1538);         at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1502);         at; org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:306);         at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143);         at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103);         at; org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228);         at; org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:338);         at; org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:151);         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method);         at; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39);         at; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25);         at java.lang.reflect.Method.invoke(Method.java:324);         at org.eclipse.core.launcher.Main.invokeFramework(Main.java:268);         at org.eclipse.core.launcher.Main.basicRun(Main.java:260);         at org.eclipse.core.launcher.Main.run(Main.java:887);         at org.eclipse.core.launcher.Main.main(Main.java:871)",3
The Eclipse NLS tooling should better support the the new Eclipse string externalization pattern added in ; 3.1; along with ways to help developers with unused keys and unused property file entries. [JDT UI],4
3.0 RC2; ; 1) Create a project with two source folders (say foo and bla).; 2) in both source folders; create a package org.test.; 3) In the first source folder; create class org.test.Bla; 4) In the second source folder create class org.test.Bla; ; 5) Observe: the new class wizard accepts the creation of the second Bla class; without issueing a warning.,4
Please provide a refactoring to inline a method call.; ; Provide an option to inline *all* calls of a specific method and remove the ; method.,4
Build 20011206.; ; 1. Within the packages view of the Java Perspective; expand the JRE_LIB jar.; 2. Go to the com.sun.java.swing.plaf.motif.icons folder and expand it.; 3. Select a *.gif file and attempt to display its properties.; ; You get the following message ==> No property pages for .,4
3.1 RC4; ; Scenario is:; - create a new Java project; without any src/bin;; - create a new class X there;; - create a source folder named src into the project; the result (see attachment; 1) is that X pops out; the default package being removed from the view;; - right-click on the project and select Build Path/Use as Source Folder; the; result (see attachment 2) is that X goes back to the default package; note also; that src gets excluded from the newly (re)created root source folder.; ; I woudl suggest that some action be taken to avoid the step shown by the first; attachment. The best behavior may not be the one illustrated by attachment 2; (after all; if were creating multiple source folders; this is probably not to; keep some sources at the root). We may prefer to move existing sources to the; newly created source folder; with a user confirmation; with or without; alternative choices presented to her.; ; The most probable scenario is that the user started some development or got some; new code that has no source folder and decides she needs one. Depending on; whether she needs to part existing types into multiple folders or not; the move; all option is more or less relevant. Anyway; getting rid of package information; is probably not OK.; ; Note that the same behavior is observable when using a non default package (in; that case; the package shows up as a regular directory; containing an X.java file).,4
On the JRE tab of an Ant launch config; you can specify an alternate java ; executable. The default is listed as javaw. javaw doesnt exist in non-Win32 ; versions of Suns JDK.,4
currently; you have to select a method,4
Hi;; when a byte or a byte array is displayed in the variables view; a popup menu or tooltip  would be handy to display the content as decimal; hexadecimal; octal or character. I know this is configurable in the debug preferences but for a quick inspection of a bytes value this would be very handy.; ; Michael,4
I20030205; ; 1. Select SystemSummaryEditr; 2. Add some String for externalization; 3. Save; 4. Source -> Externalize Strings; 5. Press Next; 6. Browse for the package; 7. Select org.eclipse.ui.internal; 8. Press OK;    Observe: the Finish button remains disabled and the status line says;    Incorrect package,4
"Not sure if this is the right place for this PR but...; 	; 	In a self host environment:; 	I was writing a small java project that uses native code. But somehow; when running inside eclipse;; the DLL was not being found. Running outside eclipse worked if I put the DLL in my bin directory.; ; 	It turned out that my user.dir property was wrong (or at least not as I expected it to be).; It had the value: ; 										D:\self_hosting\0.104a\eclipse; 	And this is my development environment. Not my target (where the project is).; ; 	The workaround was to pass in some VM arguments to my .java file:; 										-Duser.dir=c:\eclipse\plugins\NativeOutput; 	so that my user.dir is my target and not my development environment.; ; 	It seems that the user.dir should be automatically set to the location of the program and not; a random (unexpected) value.; ; NOTES:; EG (5/23/2001 10:14:25 AM); 	on 1.3 we can launch a program in a particular folder.; 	we could use reflection to try this call.; 	defer; ; EG (24.07.2001 22:15:46); 	we could also provide an execution arg where the user can define the current working directory.; 	(the class path would have to be adjusted accordingly); ; 	The 1.3 call would have to be invoked via reflection so that we dont add a dependency on 1.3",4
It would be nice if there were an extension point for Organize Imports so that; plugins could contribute items and actions to the list of possible imports for a; given type.  ; ; My situation is that I have a classpath container that is populated from a set; of jars that are in a repository.  When I see an unknown type; I can look in the; repository and see if that simpleTypeName is known in the repository.  If so; I; can let the user select which type they want (there may be more than one match);; add the appropriate jar to the classpath container; and add the import for the; type to the source file.  ; ; This is very handy in situations where you know the type name but not the jar;; or where you paste code in from another location.,4
It would be nice if the Open Type dialog gave you the count of types in the ; list box that match the expression entered. It would help give a sense of the ; size of ones type library as well as be fun to watch the number go down as one ; refines an expression.; ; Gary,5
Currently the selection provided by the Call Hierarchy view simply contains a collection of the selected methods. This means that the actual call hierarchy information displayed in the view is not available to consumers.; ; I would like to have the structural information available to me because I could put it to good use. I can think of 2 ways to achieve that:; 1. Provide an ITreeSelection instead of an IStructuredSelection.; 2. Expose something similar to MethodWrapper in the selection and let it adapt to IMethod.; ; The first approach seems easier to integrate into the IDE; but the second approach could expose important information like the call direction (caller or callee mode).; ; On a related note; I think exposing the functionality provided by the subclasses of MethodWrapper (CalleeMethodWrapper; CallerMethodWrapper) would be a very good idea. To be specific; it would be nice to have an API that gives me callers and callees of a method.,5
typing dot after f.e. java.security.MessageDigest opens the list that includes ; accessors:;  access$000(MessageDigest arg0) String;  access$100(MessageDigest arg0) Provider;  access$102(MessageDigest arg0; Provider arg1) Provider;  access$200(MessageDigest arg0) int;  access$202(MessageDigest arg0; int arg1) int,5
